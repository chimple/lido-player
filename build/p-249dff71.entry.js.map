{"version":3,"names":["appColCss","AppColStyle0","AppCol","componentDidLoad","initEventsForElement","this","el","type","render","style","height","width","backgroundColor","bgColor","top","y","left","x","display","visible","zIndex","z","h","Host","key","class","tabindex","tabIndex","value","audio","onTouch","onMatch","onEntry","appContainerCss","AppContainerStyle0","AppContainer","scaleContainer","container","widths","window","innerWidth","_a","screen","push","_b","Math","min","document","documentElement","clientHeight","scaleX","scaleY","scale","transform","body","addEventListener","position","id","objective","AppHome","nextContainer","localStorage","removeItem","SelectedValuesKey","DragSelectedMapKey","currentContainerIndex","containers","length","showCompletionMessage","event","CustomEvent","dispatchEvent","setTimeout","componentWillLoad","parseXMLData","xmlData","disconnectedCallback","removeEventListener","parser","DOMParser","xmlDoc","parseFromString","rootElement","parseContainers","parseElement","element","tagName","nodeName","toLowerCase","props","Array","from","attributes","forEach","attr","name","children","childNodes","map","child","nodeType","textContent","trim","filter","Boolean","componentMapping","Object","assign","console","warn","containerElements","querySelectorAll","parsedElement","renderDots","_","index","onClick","jumpToContainer","appImageCss","AppImageStyle0","AppImage","alignItems","justifyContent","src","objectiveCss","AppObjectiveStyle0","AppObjective","string","split","join","appPosCss","AppPosStyle0","AppPos","appRandomCss","AppRandomStyle0","AppRandom","slotElements","randomTop","random","randomLeft","AppRoot","res","getAssetPath","log","response","fetch","data","text","appRowCss","AppRowStyle0","AppRow","appShapeCss","AppShapeStyle0","AppShape","shapeType","undefined","appTextCss","AppTextStyle0","AppText","fontSize","fontFamily","font","color","fontColor","appWrapCss","AppWrapStyle0","AppWrap"],"sources":["src/components/common/app-col.css?tag=app-col","src/components/common/AppCol.tsx","src/components/common/app-container.css?tag=app-container","src/components/common/AppContainer.tsx","src/components/common/AppHome.tsx","src/components/common/app-image.css?tag=app-image","src/components/common/AppImage.tsx","src/components/common/objective.css?tag=app-objective","src/components/common/Objective.tsx","src/components/common/app-pos.css?tag=app-pos","src/components/common/AppPos.tsx","src/components/common/app-random.css?tag=app-random","src/components/common/AppRandom.tsx","src/components/common/AppRoot.tsx","src/components/common/app-row.css?tag=app-row","src/components/common/AppRow.tsx","src/components/common/app-shape.css?tag=app-shape","src/components/common/AppShape.tsx","src/components/common/app-text.css?tag=app-text","src/components/common/AppText.tsx","src/components/common/app-wrap.css?tag=app-wrap","src/components/common/AppWrap.tsx"],"sourcesContent":[".col {\n  /* position: absolute; */\n  top: var(--y, 0);\n  left: var(--x, 0);\n  height: var(--height, 100%);\n  width: var(--width, 100%);\n  background-color: var(--bgColor, #eeeeee);\n  /* position: relative; */\n  padding: 15px;\n  border-radius: 10px;\n  display: flex;\n  justify-content: space-around;\n  flex-direction: column;\n  align-items: center;\n}\n\n.col > * {\n  /* position: relative; */\n}\n","import { Component, Host, Prop, h,Element } from '@stencil/core';\nimport { initEventsForElement } from '../../utils/utils';\n\n@Component({\n  tag: 'app-col',\n  styleUrl: 'app-col.css',\n  shadow: false,\n})\nexport class AppCol {\n  @Prop() id: string;\n  @Prop() value: string;\n  @Prop() height: string;\n  @Prop() width: string;\n  @Prop() x: string;\n  @Prop() y: string;\n  @Prop() z: string;\n  @Prop() bgColor: string;\n  @Prop() type: string;\n  @Prop() tabIndex:number;\n  @Prop() visible: boolean;\n  @Prop() audio: string;\n  @Prop() onTouch: string;\n  @Prop() onMatch: string;\n  @Prop() onEntry: string;\n\n  @Element() el: HTMLElement;\n\n  componentDidLoad() {\n        initEventsForElement(this.el,this.type)\n\n  }\n\n  render() {\n    const style = {\n      height: this.height,\n      width: this.width,\n      backgroundColor: this.bgColor,\n      top: this.y,\n      left: this.x,\n      display: this.visible ? 'flex' : 'none',\n      zIndex: this.z,\n    };\n\n    return (\n      <Host class=\"col\" type={this.type} tabindex={this.tabIndex} value={this.value} style={style} audio={this.audio} onTouch={this.onTouch} onMatch={this.onMatch} onEntry={this.onEntry}>\n        <slot />\n      </Host>\n    );\n  }\n}\n",".container {\n  position: relative;\n  height: 100%;\n  width: 100%;\n  background-color: var(--bgColor, #ffffff);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n","import { Component, Host, Prop, h, Element } from '@stencil/core';\n\n@Component({\n  tag: 'app-container',\n  styleUrl: 'app-container.css',\n  shadow: false,\n})\nexport class AppContainer {\n  @Prop() id: string;\n  @Prop() objective: string;\n  @Prop() value: string;\n  @Prop() height: string;\n  @Prop() width: string;\n  @Prop() x: string;\n  @Prop() y: string;\n  @Prop() z: string;\n  @Prop() bgColor: string;\n  @Prop() type: string;\n  @Prop() tabIndex: number;\n  @Prop() visible: boolean;\n  @Prop() audio: string;\n  @Prop() onTouch: string;\n  @Prop() onMatch: string;\n  @Prop() onEntry: string;\n\n  @Element() el: HTMLElement;\n\n  scaleContainer(container: HTMLElement) {\n    const widths = [window.innerWidth];\n    const heights = [window.innerHeight];\n\n    if (window.screen?.width) {\n      widths.push(window.screen?.width);\n      heights.push(window.screen?.height);\n    }\n\n    const width = Math.min(...widths);\n    const height = document.documentElement.clientHeight;\n\n    const scaleX = width / 1600;\n    const scaleY = height / 900;\n    const scale = Math.min(scaleX, scaleY);\n\n    container.style.transform = `translate(-50%, -50%) scale(${scale})`; // Combine centering and scaling\n  }\n\n  componentDidLoad() {\n    this.scaleContainer(this.el);\n    document.body.style.backgroundColor = this.bgColor;\n    window.addEventListener('resize', () => this.scaleContainer(this.el));\n    window.addEventListener('load', () => this.scaleContainer(this.el));\n  }\n\n  render() {\n    const style = {\n      // height: this.height,\n      // width: '100%',\n      backgroundColor: this.bgColor,\n      // top: this.y,\n      // left: this.x,\n      width: '1600px',\n      height: '900px',\n      position: 'absolute',\n      // backgroundColor: '#ffffff',\n      // border: '1px solid #ddd',\n      // boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%,-50%)',\n    };\n\n    return <Host id=\"container\" class=\"container\" objective={this.objective} style={style}></Host>;\n  }\n}\n","import { Component, Prop, h, State } from '@stencil/core';\nimport { DragSelectedMapKey, SelectedValuesKey } from '../../utils/constants';\n\n@Component({\n  tag: 'app-home',\n  shadow: false,\n})\nexport class AppHome {\n  @Prop() xmlData: string;\n  @State() currentContainerIndex: number = 0;\n  @State() showCompletionMessage: boolean = false;\n  @State() containers: any[] = [];\n\n  componentWillLoad() {\n    window.addEventListener('nextContainer', this.nextContainer);\n    this.parseXMLData(this.xmlData);\n\n    window.addEventListener('beforeunload', () => {\n      localStorage.removeItem(SelectedValuesKey);\n      localStorage.removeItem(DragSelectedMapKey);\n    });\n  }\n\n  disconnectedCallback() {\n    window.removeEventListener('nextContainer', this.nextContainer);\n  }\n\n  private parseXMLData(xmlData: string) {\n    if (xmlData) {\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(xmlData, 'text/xml');\n      const rootElement = xmlDoc.documentElement;\n      this.parseContainers(rootElement);\n    }\n  }\n\n  private parseElement(element: Element): any {\n    const tagName = element.nodeName.toLowerCase();\n    const props: { [key: string]: any } = {};\n\n    Array.from(element.attributes).forEach(attr => {\n      props[attr.name] = attr.value;\n    });\n\n    const children = Array.from(element.childNodes)\n      .map(child => {\n        if (child.nodeType === 1) {\n          return this.parseElement(child as Element);\n        } else if (child.nodeType === 3 && child.textContent.trim() !== '') {\n          return child.textContent;\n        }\n        return null;\n      })\n      .filter(Boolean);\n\n    const componentMapping = {\n      'app-container': <app-container {...props}>{children}</app-container>,\n      'app-objective': <app-objective {...props}>{children}</app-objective>,\n      'app-col': <app-col {...props}>{children}</app-col>,\n      'app-image': <app-image {...props}>{children}</app-image>,\n      'app-row': <app-row {...props}>{children}</app-row>,\n      'app-text': <app-text {...props}>{children}</app-text>,\n      'app-pos': <app-pos {...props}>{children}</app-pos>,\n      'app-shape': <app-shape {...props}>{children}</app-shape>,\n      'app-wrap': <app-wrap {...props}>{children}</app-wrap>,\n      'app-random': <app-random {...props}>{children}</app-random>,\n    };\n\n    if (componentMapping[tagName]) {\n      return componentMapping[tagName];\n    } else {\n      console.warn(`Unknown tag: ${tagName}`);\n      return null;\n    }\n  }\n\n  private parseContainers(rootElement: Element) {\n    const containers = [];\n    const containerElements = rootElement.querySelectorAll('app-container');\n    containerElements.forEach(container => {\n      const parsedElement = this.parseElement(container);\n      if (parsedElement) {\n        containers.push(parsedElement);\n      }\n    });\n    this.containers = containers;\n  }\n\n  private nextContainer = () => {\n    localStorage.removeItem(SelectedValuesKey);\n    localStorage.removeItem(DragSelectedMapKey);\n    if (this.currentContainerIndex < this.containers.length - 1) {\n      this.currentContainerIndex++;\n    } else {\n      this.showCompletionMessage = true;\n      const event = new CustomEvent('gameCompleted');\n      window.dispatchEvent(event);\n      setTimeout(() => {\n        this.showCompletionMessage = false;\n      }, 3000);\n    }\n\n    // Reset the containers to force a full re-render\n    this.containers = [...this.containers];\n  };\n\n  private renderDots() {\n    return (\n      <div class=\"dot-container\">\n        {this.containers.map((_, index) => (\n          <span\n            class={`dot ${index < this.currentContainerIndex ? 'completed' : index === this.currentContainerIndex ? 'current' : ''}`}\n            onClick={() => this.jumpToContainer(index)}\n          ></span>\n        ))}\n      </div>\n    );\n  }\n\n  private jumpToContainer(index: number) {\n    this.currentContainerIndex = index;\n    this.containers = [...this.containers]; // Trigger re-render\n  }\n\n  render() {\n    if (!this.xmlData) {\n      return <div>Please provide XML data.</div>;\n    }\n\n    return (\n      <div>\n        <div key={this.currentContainerIndex}>{this.containers[this.currentContainerIndex]}</div>\n\n        {/* Render the dots below the container */}\n        {this.renderDots()}\n\n        {this.showCompletionMessage && <div class=\"snackbar\">All containers have been displayed!</div>}\n\n        <style>\n          {`\n            .snackbar {\n              visibility: visible;\n              min-width: 250px;\n              background-color: #333;\n              color: #fff;\n              text-align: center;\n              border-radius: 2px;\n              padding: 16px;\n              position: fixed;\n              z-index: 1;\n              bottom: 30px;\n              left: 50%;\n              transform: translateX(-50%);\n              font-size: 17px;\n            }\n\n            .dot-container {\n              text-align: center;\n              position: relative;\n              z-index: 1;\n            }\n\n            .dot {\n              height: 15px;\n              width: 15px;\n              margin: 0 4px;\n              background-color: #bbb;\n              border-radius: 50%;\n              display: inline-block;\n              transition: background-color 0.3s;\n              cursor: pointer;\n            }\n\n            .dot.completed {\n              background-color: black;\n            }\n\n            .dot.current {\n              background-color: green;\n            }\n\n            .dot:not(.completed):not(.current) {\n              background-color: #bbb;\n            }\n          `}\n        </style>\n      </div>\n    );\n  }\n}\n",".image {\n  user-select: none;\n  -webkit-user-drag: none;\n  object-fit: cover;\n  max-width: 100%;\n  max-height: 100%;\n  aspect-ratio: 1 / 1; /* Ensures the image retains a 1:1 aspect ratio */\n  /* The image will scale to fit within its container, keeping the aspect ratio */\n}\n","import { Component, Prop, h, Element, Host } from '@stencil/core';\nimport { initEventsForElement } from '../../utils/utils';\n\n@Component({\n  tag: 'app-image',\n  styleUrl: 'app-image.css',\n  shadow: false,\n})\nexport class AppImage {\n  @Prop() value: string;\n  @Prop() height: string;\n  @Prop() width: string;\n  @Prop() x: string;\n  @Prop() y: string;\n  @Prop() z: string;\n  @Prop() bgColor: string;\n  @Prop() type: string;\n  @Prop() tabIndex:number;\n  @Prop() visible: boolean;\n  @Prop() audio: string;\n  @Prop() onTouch: string;\n  @Prop() onMatch: string;\n  @Prop() onEntry: string;\n  @Prop() src: string;\n\n  @Element() el: HTMLElement;\n\n  componentDidLoad() {\n        initEventsForElement(this.el,this.type)\n\n  }\n\n  render() {\n    const style = {\n      height: this.height,\n      width: this.width,\n      top: this.y,\n      left: this.x,\n      zIndex: this.z,\n      display: this.visible ? 'flex' : 'none',\n      alignItems: 'center', // Vertically center\n      justifyContent: 'center', // Horizontally center\n    };\n\n    return (\n      <Host type={this.type} tabindex={this.tabIndex} style={style} value={this.value} audio={this.audio} onTouch={this.onTouch} onMatch={this.onMatch} onEntry={this.onEntry}>\n        <img class=\"image\" src={this.src} />\n      </Host>\n    );\n  }\n}\n",".objective {\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: #555;\n  margin-bottom: 10px;\n}\n","import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'app-objective',\n  styleUrl: 'objective.css',\n  shadow: false,\n})\nexport class AppObjective {\n  @Prop() value: string;\n  @Prop() string: string;\n\n  render() {\n    return <div class=\"objective\">{this.string.split(',').join(' ')}</div>;\n  }\n}\n",".pos {\n  top: var(--y, 0);\n  left: var(--x, 0);\n  height: var(--height, 100%);\n  width: var(--width, 100%);\n  background-color: var(--bgColor, #eeeeee);\n  display: flex;\n  justify-content: space-around;\n  flex-direction: column;\n  position: fixed;\n}\n\n.pos > * {\n  position: absolute;\n}\n","import { Component, Host, Prop, h,Element } from '@stencil/core';\nimport { initEventsForElement } from '../../utils/utils';\n\n@Component({\n  tag: 'app-pos',\n  styleUrl: 'app-pos.css',\n  shadow: false,\n})\nexport class AppPos {\n  @Prop() id: string;\n  @Prop() value: string;\n  @Prop() height: string;\n  @Prop() width: string;\n  @Prop() x: string;\n  @Prop() y: string;\n  @Prop() z: string;\n  @Prop() bgColor: string;\n  @Prop() type: string;\n  @Prop() tabIndex:number;\n  @Prop() visible: boolean;\n  @Prop() audio: string;\n  @Prop() onTouch: string;\n  @Prop() onMatch: string;\n  @Prop() onEntry: string;\n\n  @Element() el: HTMLElement;\n\n  componentDidLoad() {\n        initEventsForElement(this.el,this.type)\n\n  }\n\n  render() {\n    const style = {\n      height: this.height,\n      width: this.width,\n      backgroundColor: this.bgColor,\n      top: this.y,\n      left: this.x,\n      zIndex: this.z,\n      display: this.visible ? 'block' : 'none',\n    };\n\n    return (\n      <Host class=\"pos\" type={this.type} tabindex={this.tabIndex} style={style} value={this.value} audio={this.audio} onTouch={this.onTouch} onMatch={this.onMatch} onEntry={this.onEntry}>\n        <slot />\n      </Host>\n    );\n  }\n}\n",".random {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: absolute; /* Container is now relative */\n}\n\n.random > * {\n  position: absolute;\n}\n","import { Component, Host, Prop, h, Element } from '@stencil/core';\n\n@Component({\n  tag: 'app-random',\n  styleUrl: 'app-random.css',\n  shadow: false,\n})\nexport class AppRandom {\n  @Prop() id: string;\n  @Prop() value: string;\n  @Prop() height: string;\n  @Prop() width: string;\n  @Prop() x: string;\n  @Prop() y: string;\n  @Prop() z: string;\n  @Prop() bgColor: string;\n  @Prop() type: string;\n  @Prop() tabIndex:number;\n  @Prop() visible: boolean;\n  @Prop() audio: string;\n  @Prop() onTouch: string;\n  @Prop() onMatch: string;\n  @Prop() onEntry: string;\n\n  @Element() el: HTMLElement;\n\n  componentDidLoad() {\n    const slotElements = this.el.querySelectorAll('.random > *');\n    slotElements.forEach((child: HTMLElement) => {\n      const randomTop = Math.random() * 100;\n      const randomLeft = Math.random() * 100;\n\n      child.style.top = `${randomTop}%`;\n      child.style.left = `${randomLeft}%`;\n    });\n  }\n\n  render() {\n    const style = {\n      height: this.height,\n      width: this.width,\n      top: this.y,\n      left: this.x,\n      display: this.visible ? 'block' : 'none',\n      zIndex: this.z,\n      backgroundColor: this.bgColor,\n    };\n\n    return (\n      <Host class=\"random\" type={this.type} tabindex={this.tabIndex} value={this.value} style={style} audio={this.audio} onTouch={this.onTouch} onMatch={this.onMatch} onEntry={this.onEntry}>\n        <slot />\n      </Host>\n    );\n  }\n}\n","import { Component, getAssetPath, h, State } from '@stencil/core';\n\n@Component({\n  tag: 'app-root',\n  shadow: false,\n  assetsDirs: ['assets'],\n})\nexport class AppRoot {\n  @State() xmlData: string;\n\n  async componentWillLoad() {\n    const res = getAssetPath('./assets/xmlData.xml');\n    console.log('🚀 ~ AppRoot ~ componentWillLoad ~ res:', res);\n    const response = await fetch(res);\n    const data = await response.text();\n    this.xmlData = data;\n  }\n\n  render() {\n    if (!this.xmlData) {\n      return <div>Loading...</div>;\n    }\n\n    return <app-home xmlData={this.xmlData}></app-home>;\n  }\n}\n",".row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  /* position: absolute; */\n}\n\n.row > * {\n  /* position: relative; */\n}\n","import { Component, Host, Prop, h, Element } from '@stencil/core';\nimport { initEventsForElement } from '../../utils/utils';\n\n@Component({\n  tag: 'app-row',\n  styleUrl: 'app-row.css',\n  shadow: false,\n})\nexport class AppRow {\n  @Prop() value: string;\n  @Prop() height: string;\n  @Prop() width: string;\n  @Prop() x: string;\n  @Prop() y: string;\n  @Prop() z: string;\n  @Prop() bgColor: string;\n  @Prop() type: string;\n  @Prop() tabIndex:number;\n  @Prop() visible: boolean;\n  @Prop() audio: string;\n  @Prop() onTouch: string;\n  @Prop() onMatch: string;\n  @Prop() onEntry: string;\n\n  @Element() el: HTMLElement;\n\n  componentDidLoad() {\n        initEventsForElement(this.el,this.type)\n\n  }\n\n  render() {\n    const style = {\n      height: this.height,\n      width: this.width,\n      top: this.y,\n      left: this.x,\n      display: this.visible ? 'flex' : 'none',\n      zIndex: this.z,\n    };\n\n    return (\n      <Host class=\"row\" type={this.type} tabindex={this.tabIndex} value={this.value} style={style} audio={this.audio} onTouch={this.onTouch} onMatch={this.onMatch} onEntry={this.onEntry}>\n        {/* <slot /> */}\n      </Host>\n    );\n  }\n}\n",".shape {\n  position: absolute;\n  top: var(--y);\n  left: var(--x);\n  display: var(--display);\n  z-index: var(--z);\n}\n\n.rectangle {\n  border-radius: 0;\n}\n\n.circle {\n  width: var(--width); /* Ensures width is always used for both dimensions */\n  height: var(--width); /* Make height equal to width for a perfect circle */\n  border-radius: 50%; /* 50% border-radius for a perfect circle */\n  background-color: var(--bgColor);\n}\n\n.ellipse {\n  width: var(--width);\n  height: var(--height);\n  border-radius: 50%; /* Create an ellipse shape */\n  background-color: var(--bgColor);\n}\n","import { Component, Host, Prop, h, Element } from '@stencil/core';\nimport { initEventsForElement } from '../../utils/utils';\n\n@Component({\n  tag: 'app-shape',\n  styleUrl: 'app-shape.css',\n  shadow: false,\n})\nexport class AppShape {\n  @Prop() id: string;\n  @Prop() value: string;\n  @Prop() height: string;\n  @Prop() width: string;\n  @Prop() x: string;\n  @Prop() y: string;\n  @Prop() z: string;\n  @Prop() bgColor: string;\n  @Prop() type: string;\n  @Prop() tabIndex:number;\n  @Prop() shapeType: string;\n  @Prop() visible: boolean;\n  @Prop() audio: string;\n  @Prop() onTouch: string;\n  @Prop() onMatch: string;\n  @Prop() onEntry: string;\n\n  @Element() el: HTMLElement;\n\n  componentDidLoad() {\n        initEventsForElement(this.el,this.type)\n\n  }\n\n  render() {\n    const style = {\n      height: this.shapeType !== 'polygon' ? this.height : undefined,\n      width: this.shapeType !== 'polygon' ? this.width : undefined,\n      top: this.y,\n      left: this.x,\n      display: this.visible ? 'block' : 'none',\n      zIndex: this.z,\n      backgroundColor: this.shapeType !== 'polygon' ? this.bgColor : 'transparent',\n    };\n\n    return <Host class={`shape ${this.shapeType}`} value={this.value} type={this.type} tabindex={this.tabIndex} style={style} audio={this.audio} onTouch={this.onTouch} onMatch={this.onMatch} onEntry={this.onEntry}></Host>;\n  }\n}\n",".text {\n  background-color: #fff;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  transition: background-color 0.3s ease;\n  user-select: none;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  border-radius: 8px;\n  color: #333;\n  cursor: pointer;\n}\n\n.text:hover {\n  background-color: #f0f0f0;\n}\n","import { Component, Prop, h, Element, Host } from '@stencil/core';\nimport { initEventsForElement } from '../../utils/utils';\n\n@Component({\n  tag: 'app-text',\n  styleUrl: 'app-text.css',\n  shadow: false,\n})\nexport class AppText {\n  @Prop() id: string;\n  @Prop() value: string;\n  @Prop() string: string;\n  @Prop() font: string;\n  @Prop() fontSize: string;\n  @Prop() fontColor: string;\n  @Prop() highlightWhileSpeaking: boolean;\n  @Prop() height: string;\n  @Prop() width: string;\n  @Prop() x: string;\n  @Prop() y: string;\n  @Prop() z: string;\n  @Prop() bgColor: string;\n  @Prop() type: string;\n  @Prop() tabIndex: number;\n  @Prop() visible: boolean;\n  @Prop() audio: string;\n  @Prop() onTouch: string;\n  @Prop() onMatch: string;\n  @Prop() onEntry: string;\n\n  @Element() el: HTMLElement;\n\n  componentDidLoad() {\n    initEventsForElement(this.el, this.type);\n  }\n\n  render() {\n    const style = {\n      height: this.height,\n      width: this.width,\n      backgroundColor: this.bgColor,\n      top: this.y,\n      left: this.x,\n      zIndex: this.z,\n      fontSize: this.fontSize,\n      fontFamily: this.font,\n      color: this.fontColor,\n      display: this.visible ? 'flex' : 'none',\n    };\n\n    return (\n      <Host\n        class=\"text\"\n        value={this.value}\n        type={this.type}\n        tabindex={this.tabIndex}\n        audio={this.audio}\n        onTouch={this.onTouch}\n        onMatch={this.onMatch}\n        onEntry={this.onEntry}\n        id={this.id}\n        style={style}\n      >\n        {this.string}\n      </Host>\n    );\n  }\n}\n",".wrap {\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: repeat(auto-fill, minmax(186px, auto));\n}\n\n.wrap > * {\n  padding: 10px;\n  background-color: var(--child-bg-color, #f0f0f0);\n  box-sizing: border-box;\n}\n","import { Component, Host, Prop, h, Element } from '@stencil/core';\nimport { initEventsForElement } from '../../utils/utils';\n\n@Component({\n  tag: 'app-wrap',\n  styleUrl: 'app-wrap.css',\n  shadow: false,\n})\nexport class AppWrap {\n  @Prop() id: string;\n  @Prop() value: string;\n  @Prop() height: string;\n  @Prop() width: string;\n  @Prop() x: string;\n  @Prop() y: string;\n  @Prop() z: string;\n  @Prop() bgColor: string;\n  @Prop() type: string;\n  @Prop() tabIndex:number;\n  @Prop() visible: boolean;\n  @Prop() audio: string;\n  @Prop() onTouch: string;\n  @Prop() onMatch: string;\n  @Prop() onEntry: string;\n\n  @Element() el: HTMLElement;\n\n  componentDidLoad() {\n        initEventsForElement(this.el,this.type)\n\n  }\n  render() {\n    const style = {\n      height: this.height,\n      width: this.width,\n      top: this.y,\n      left: this.x,\n      display: this.visible ? 'grid' : 'none', // Changed to 'grid'\n      zIndex: this.z,\n      backgroundColor: this.bgColor,\n    };\n\n    return (\n      <Host class=\"wrap\" value={this.value} type={this.type} tabindex={this.tabIndex} style={style} audio={this.audio} onTouch={this.onTouch} onMatch={this.onMatch} onEntry={this.onEntry}>\n        <slot />\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}