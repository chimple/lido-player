{"version":3,"names":["AppRenderer","parseElement","element","tagName","nodeName","toLowerCase","console","log","props","i","attributes","length","attr","name","value","children","childNodes","Array","from","map","child","nodeType","this","textContent","trim","filter","Boolean","h","Object","assign","warn","render","parser","DOMParser","xmlDoc","parseFromString","data","rootElement","documentElement"],"sources":["src/components/common/AppRenderer.tsx"],"sourcesContent":["import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'app-renderer',\n  shadow: false,\n})\nexport class AppRenderer {\n  @Prop() data: string;\n\n  private parseElement(element: Element): any {\n    const tagName = element.nodeName.toLowerCase();\n    console.log('Parsing Element:', tagName);\n\n    const props: { [key: string]: any } = {};\n    for (let i = 0; i < element.attributes.length; i++) {\n      const attr = element.attributes[i];\n      props[attr.name] = attr.value;\n    }\n    console.log('Props:', props);\n\n    let children: any[] = [];\n    if (element.childNodes && element.childNodes.length > 0) {\n      children = Array.from(element.childNodes)\n        .map(child => {\n          if (child.nodeType === 1) {\n            // ELEMENT_NODE\n            return this.parseElement(child as Element);\n          } else if (child.nodeType === 3 && child.textContent.trim() !== '') {\n            // TEXT_NODE\n            return (child as Text).textContent;\n          }\n        })\n        .filter(Boolean);\n    }\n\n    switch (tagName) {\n      case 'container':\n        return <app-container {...props}>{children}</app-container>;\n      case 'objective':\n        return <app-objective {...props}>{children}</app-objective>;\n      case 'col':\n        return <app-col {...props}>{children}</app-col>;\n      case 'image':\n        return <app-image {...props}>{children}</app-image>;\n      case 'row':\n        return <app-row {...props}>{children}</app-row>;\n      case 'text':\n        return <app-text {...props}>{children}</app-text>;\n      default:\n        console.warn('Unknown tag:', tagName);\n        return null;\n    }\n  }\n\n  render() {\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(this.data, 'text/xml');\n\n    const rootElement = xmlDoc.documentElement;\n\n    return this.parseElement(rootElement);\n  }\n}\n"],"mappings":"iDAMaA,EAAW,M,6CAGd,YAAAC,CAAaC,GACnB,MAAMC,EAAUD,EAAQE,SAASC,cACjCC,QAAQC,IAAI,mBAAoBJ,GAEhC,MAAMK,EAAgC,GACtC,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAQQ,WAAWC,OAAQF,IAAK,CAClD,MAAMG,EAAOV,EAAQQ,WAAWD,GAChCD,EAAMI,EAAKC,MAAQD,EAAKE,K,CAE1BR,QAAQC,IAAI,SAAUC,GAEtB,IAAIO,EAAkB,GACtB,GAAIb,EAAQc,YAAcd,EAAQc,WAAWL,OAAS,EAAG,CACvDI,EAAWE,MAAMC,KAAKhB,EAAQc,YAC3BG,KAAIC,IACH,GAAIA,EAAMC,WAAa,EAAG,CAExB,OAAOC,KAAKrB,aAAamB,E,MACpB,GAAIA,EAAMC,WAAa,GAAKD,EAAMG,YAAYC,SAAW,GAAI,CAElE,OAAQJ,EAAeG,W,KAG1BE,OAAOC,Q,CAGZ,OAAQvB,GACN,IAAK,YACH,OAAOwB,EAAA,gBAAAC,OAAAC,OAAA,GAAmBrB,GAAQO,GACpC,IAAK,YACH,OAAOY,EAAA,gBAAAC,OAAAC,OAAA,GAAmBrB,GAAQO,GACpC,IAAK,MACH,OAAOY,EAAA,UAAAC,OAAAC,OAAA,GAAarB,GAAQO,GAC9B,IAAK,QACH,OAAOY,EAAA,YAAAC,OAAAC,OAAA,GAAerB,GAAQO,GAChC,IAAK,MACH,OAAOY,EAAA,UAAAC,OAAAC,OAAA,GAAarB,GAAQO,GAC9B,IAAK,OACH,OAAOY,EAAA,WAAAC,OAAAC,OAAA,GAAcrB,GAAQO,GAC/B,QACET,QAAQwB,KAAK,eAAgB3B,GAC7B,OAAO,K,CAIb,MAAA4B,GACE,MAAMC,EAAS,IAAIC,UACnB,MAAMC,EAASF,EAAOG,gBAAgBb,KAAKc,KAAM,YAEjD,MAAMC,EAAcH,EAAOI,gBAE3B,OAAOhB,KAAKrB,aAAaoC,E","ignoreList":[]}