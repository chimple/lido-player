{"version":3,"names":["DragSelectedMapKey","SelectedValuesKey","ActivityScoreKey","ActivityEndKey","LessonEndKey","NextContainerKey","ActivityChangeKey","GameCompletedKey","ElementDropKey","ElementClickKey","TraceMode","GameScore","constructor","this","rightMoves","wrongMoves","finalScore","dispatchCustomEvent","eventName","detail","event","CustomEvent","window","dispatchEvent","dispatchActivityEndEvent","index","totalIndex","score","dispatchLessonEndEvent","dispatchNextContainerEvent","dispatchGameCompletedEvent","dispatchActivityChangeEvent","dispatchElementDropEvent","dragElement","dropElement","isCorrect","createdAt","Date","toISOString","dispatchClickEvent","element","RiveService","getInstance","instance","setRiveInstance","riveInstance","getRiveInstance","gameScore","format","first","middle","last","getElementScale","el","style","animation","transform","getComputedStyle","matrix","match","matrixValues","split","scaleX","parseFloat","slidingWithScaling","overlapElement","isDragging","startX","startY","initialX","initialY","parentElement","console","error","onStart","removeHighlight","MouseEvent","clientX","clientY","touches","opacity","cursor","getBoundingClientRect","document","addEventListener","onMove","onEnd","observer","MutationObserver","mutationsList","mutation","type","attributeName","observerConfig","attributes","attributeFilter","observe","parentElementScale","dx","dy","newLeft","newTop","containerRect","elementRect","numbers","result","map","Number","initialElementLeftPx","left","initialElementTopPx","top","initialElementRightPx","right","initialElementBottomPx","bottom","maxRight","maxLeft","maxTop","maxBottom","newLeftClamp","Math","min","newTopClamp","mostOverlappedElement","findMostoverlappedElement","parent1","parent2","elementPlaceholder","createComment","overlappedPlaceholder","replaceChild","endEv","removeEventListener","slideCompleted","ev","onClickDropOrDragElement","slideElement","slideArr","JSON","parse","localStorage","getItem","allSlideElements","querySelectorAll","forEach","item","setItem","stringify","objectiveString","querySelector","objectiveArray","elementIndex","indexOf","matchStringPattern","trim","storingEachActivityScore","handleShowCheck","enableDraggingWithScaling","container","verticalDistance","horizontalDistance","rect1","rect2","containerScale","width","abs","height","allElements","otherElement","dropObject","storedTabIndexes","Object","keys","includes","border","backgroundColor","onElementDropComplete","maxOverlapArea","otherRect","overlapWidth","max","overlapHeight","overlapArea","elementArea","otherArea","minimumArea","async","selectedValueData","dragSelectedData","getAttribute","dragSelected","key","selectedValue","filter","value","onCorrect","executeActions","onInCorrect","onActivityComplete","actionsString","thisElement","actions","parseActions","i","length","action","queriedElement","actor","targetElement","getElementById","currentTransform","dropRect","dragRect","scaledLeft","scaledTop","classList","add","audioUrl","childElements","children","child","childAudioUrl","convertUrlToRelative","audioElement","newAudio","createElement","id","body","appendChild","pause","currentTime","src","log","play","highlightSpeakingElement","ended","Promise","resolve","setTimeout","stopHighlightForSpeakingElement","textContent","speakText","isNumber","isNaN","riveService","input","actionStrings","_a","actionString","actorAction","part","lastDotIndex","lastIndexOf","substring","push","replace","pattern","arr","patternGroups","group","arrIndex","options","Set","startsWith","endsWith","choices","slice","option","arrChoice","choice","has","delete","countPatternWords","wordCount","isAllowOnlyCorrect","dragScore","tabindex","sortedKeys","sort","a","b","parseInt","sortedValues","reduce","acc","values","join","flag","calculateScore","floor","storeActivityScore","appHome","_b","activityScore","_c","activityScoreKey","toString","scoresArray","cur","removeItem","selectValues","checkButton","showCheck","remove","validateObjectiveStatus","res","appendingDragElementsInDrop","triggerNextContainer","isContinueOnCorrect","dragItems","dropItems","drop","drag","initEventsForElement","onEntry","canplay","addClickListenerForClickType","handleDropElement","onTouchListenerForOnTouch","onTouch","onclick","onClick","objective","isActivated","contains","multiOptionScore","valueToRemove","keyToRemove","find","concat","valueToFind","highlightedElements","innerHTML","head","ariaPressed","selectedDropElement","selectedDragElement","transition","translateX","translateY","styleId","url","baseUrl","getAssetPath","text","reject","Error","utterance","SpeechSynthesisUtterance","onend","onerror","speechSynthesis","speak","handlingChildElements","minLength","maxLength","currentLength","displayStyle","undefined","Array","from","allowedLength","display"],"sources":["src/utils/constants.ts","src/utils/customEvents.ts","src/utils/rive-service.ts","src/utils/utils.ts"],"sourcesContent":["export const DragSelectedMapKey = 'lidoDragSelectedMap';\nexport const SelectedValuesKey = 'lidoSelectedValues';\nexport const ActivityScoreKey = 'lidoActivityScore';\nexport const ActivityEndKey = 'lidoActivityEnd';\nexport const LessonEndKey = 'lidoLessonEnd';\nexport const NextContainerKey = 'lidoNextContainer';\nexport const ActivityChangeKey = 'lidoActivityChange';\nexport const GameCompletedKey = 'lidoGameCompleted';\nexport const GameExitKey = 'lidoGameExit';\nexport const ElementDropKey = 'lidoElementDrop';\nexport const ElementClickKey = 'lidoElementClick';\n\nexport enum TraceMode {\n  NoFlow = 'lido-noFlow',\n  ShowFlow = 'lido-showFlow',\n  FreeTrace = 'lido-freeTrace',\n  BlindTracing = 'lido-blindTracing',\n  BlindFreeTrace = 'lido-blindFreeTrace',\n}\n\nexport default class GameScore{\n  rightMoves: number = 0;\n  wrongMoves: number = 0;\n  finalScore: number = 0;\n}\n","import { ActivityChangeKey, ActivityEndKey, ElementClickKey, ElementDropKey, GameCompletedKey, GameExitKey, LessonEndKey, NextContainerKey } from './constants';\n\nfunction dispatchCustomEvent(eventName: string, detail: any) {\n  const event = new CustomEvent(eventName, { detail });\n  window.dispatchEvent(event);\n}\n\nexport function dispatchActivityEndEvent(index: number, totalIndex: number, score: number) {\n  dispatchCustomEvent(ActivityEndKey, { index, totalIndex, score });\n}\n\nexport function dispatchLessonEndEvent(score: number) {\n  dispatchCustomEvent(LessonEndKey, { score });\n}\n\nexport function dispatchNextContainerEvent() {\n  dispatchCustomEvent(NextContainerKey, {});\n}\n\nexport function dispatchGameCompletedEvent() {\n  dispatchCustomEvent(GameCompletedKey, {});\n}\n\nexport function dispatchGameExitEvent() {\n  dispatchCustomEvent(GameExitKey, {});\n}\n\nexport function dispatchActivityChangeEvent(index: number) {\n  dispatchCustomEvent(ActivityChangeKey, { index });\n}\n\nexport function dispatchElementDropEvent(dragElement: HTMLElement, dropElement: HTMLElement, isCorrect: boolean) {\n  dispatchCustomEvent(ElementDropKey, { dragElement, dropElement, isCorrect: isCorrect, createdAt: new Date().toISOString() });\n}\n\nexport function dispatchClickEvent(element: HTMLElement, isCorrect: boolean) {\n  dispatchCustomEvent(ElementClickKey, { element, isCorrect: isCorrect, createdAt: new Date().toISOString() });\n}\n","// rive-service.ts\nexport class RiveService {\n  private static instance: RiveService;\n  public riveInstance: any;\n\n  private constructor() {}\n\n  public static getInstance() {\n    if (!RiveService.instance) {\n      RiveService.instance = new RiveService();\n    }\n    return RiveService.instance;\n  }\n\n  public setRiveInstance(instance: any) {\n    this.riveInstance = instance;\n  }\n\n  public getRiveInstance() {\n    return this.riveInstance;\n  }\n}\n","import { ActivityScoreKey, DragSelectedMapKey, LessonEndKey, SelectedValuesKey } from './constants';\nimport { dispatchActivityEndEvent, dispatchClickEvent, dispatchElementDropEvent, dispatchLessonEndEvent, dispatchNextContainerEvent } from './customEvents';\nimport GameScore from './constants';\nimport { RiveService } from './rive-service';\nimport { getAssetPath } from '@stencil/core';\nconst gameScore = new GameScore();\n\nexport function format(first?: string, middle?: string, last?: string): string {\n  return (first || '') + (middle ? ` ${middle}` : '') + (last ? ` ${last}` : '');\n}\n\n// Function to get the scale of an element\nconst getElementScale = (el: HTMLElement): number => {\n  el.style.animation = 'unset';\n  const transform = window.getComputedStyle(el).transform;\n  if (transform === 'none') {\n    return 1; // No scaling\n  } else {\n    const matrix = transform.match(/matrix\\(([^)]+)\\)/);\n    if (matrix) {\n      const matrixValues = matrix[1].split(', ');\n      const scaleX = parseFloat(matrixValues[0]);\n      return scaleX; // Assuming uniform scaling (same scale in X and Y)\n    }\n  }\n  return 1; // Fallback to no scaling\n};\n\nfunction slidingWithScaling(element: HTMLElement): void {\n  let overlapElement = false;\n  let isDragging = false;\n  let startX = 0;\n  let startY = 0;\n  let initialX = 0;\n  let initialY = 0;\n\n  // Fetch the container element\n  const parentElement = element.parentElement;\n  if (!parentElement) {\n    console.error(`Parent element not found.`);\n    return;\n  }\n\n  let verticalDistance;\n  let horizontalDistance;\n\n  const onStart = (event: MouseEvent | TouchEvent): void => {\n    removeHighlight(element);\n    isDragging = true;\n\n    if (event instanceof MouseEvent) {\n      startX = event.clientX;\n      startY = event.clientY;\n    } else {\n      startX = event.touches[0].clientX;\n      startY = event.touches[0].clientY;\n    }\n\n    // Apply dragging styles to the element\n    element.style.opacity = '0.8';\n    element.style.cursor = 'grabbing';\n\n    // Parse the current transform values at the start of each drag\n    const transform = window.getComputedStyle(element).transform;\n    if (transform !== 'none') {\n      const matrix = transform.match(/matrix\\(([^)]+)\\)/);\n      if (matrix) {\n        const matrixValues = matrix[1].split(', ');\n        initialX = parseFloat(matrixValues[4]);\n        initialY = parseFloat(matrixValues[5]);\n      }\n    } else {\n      initialX = 0;\n      initialY = 0;\n    }\n\n    const rect1 = parentElement.getBoundingClientRect();\n    const rect2 = element.getBoundingClientRect();\n    verticalDistance = rect1.top - rect2.top;\n    horizontalDistance = rect1.left - rect2.left;\n\n    document.addEventListener('mousemove', onMove);\n    document.addEventListener('mouseup', onEnd);\n    document.addEventListener('touchmove', onMove);\n    document.addEventListener('touchend', onEnd);\n  };\n\n  const observer = new MutationObserver(mutationsList => {\n    for (const mutation of mutationsList) {\n      if (mutation.type === 'attributes' && mutation.attributeName === 'style') {\n        const rect1 = parentElement.getBoundingClientRect();\n        const rect2 = element.getBoundingClientRect();\n        verticalDistance = rect1.top - rect2.top;\n        horizontalDistance = rect1.left - rect2.left;\n      }\n    }\n  });\n\n  // Configure the observer to watch for attribute changes\n  const observerConfig = {\n    attributes: true, // Monitor attribute changes\n    attributeFilter: ['style'], // Only observe changes to the 'style' attribute\n  };\n\n  // Start observing the element\n  observer.observe(parentElement, observerConfig);\n\n  const onMove = (event: MouseEvent | TouchEvent): void => {\n    if (!isDragging) return;\n    const parentElementScale = getElementScale(parentElement);\n    let dx = 0;\n    let dy = 0;\n\n    if (event instanceof MouseEvent) {\n      dx = (event.clientX - startX) / parentElementScale;\n      dy = (event.clientY - startY) / parentElementScale;\n    } else {\n      dx = (event.touches[0].clientX - startX) / parentElementScale;\n      dy = (event.touches[0].clientY - startY) / parentElementScale;\n    }\n\n    // Calculate the new position considering scaling\n    const newLeft = initialX + dx;\n    const newTop = initialY + dy;\n\n    // Get the dimensions and scale-corrected position of the container and element\n    const containerRect = parentElement.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n\n    const numbers = element.style.transform.match(/-?\\d+(\\.\\d+)?/g);\n    const result = numbers.map(Number);\n    const initialElementLeftPx = elementRect.left / parentElementScale - result[0];\n    const initialElementTopPx = elementRect.top - result[1];\n    const initialElementRightPx = elementRect.right / parentElementScale - result[0];\n    const initialElementBottomPx = elementRect.bottom - result[1];\n\n    const maxRight = containerRect.right - initialElementRightPx;\n    const maxLeft = containerRect.left - initialElementLeftPx;\n    const maxTop = containerRect.top - initialElementTopPx;\n    const maxBottom = containerRect.bottom - initialElementBottomPx;\n\n    const newLeftClamp = newLeft + initialElementLeftPx <= containerRect.left ? maxLeft : Math.min(newLeft, maxRight);\n    const newTopClamp = newTop + initialElementTopPx <= containerRect.top ? maxTop : Math.min(newTop, maxBottom);\n\n    // Apply transform with translation within boundaries\n    element.style.transform = `translate(${newLeftClamp}px, ${newTopClamp}px)`;\n\n    // Check for overlaps and highlight only the most overlapping element\n    let mostOverlappedElement: HTMLElement = findMostoverlappedElement(element, 'slide');\n\n    // Apply styles only to the most overlapped element\n    if (mostOverlappedElement) {\n      if (mostOverlappedElement != element) {\n        const parent1 = element.parentElement;\n        const parent2 = mostOverlappedElement.parentElement;\n\n        if (parent1 && parent2) {\n          // Temporarily detach both elements\n          const elementPlaceholder = document.createComment('element-placeholder');\n          const overlappedPlaceholder = document.createComment('overlapped-placeholder');\n          parent1.replaceChild(elementPlaceholder, element);\n          parent2.replaceChild(overlappedPlaceholder, mostOverlappedElement);\n          // Swap the elements\n          parent1.replaceChild(mostOverlappedElement, elementPlaceholder);\n          parent2.replaceChild(element, overlappedPlaceholder);\n          element.style.transform = 'translate(0, 0)';\n\n          // Recalculate starting points for the swapped element\n          startX = event instanceof MouseEvent ? event.clientX : event.touches[0].clientX;\n          startY = event instanceof MouseEvent ? event.clientY : event.touches[0].clientY;\n          initialX = 0;\n          initialY = 0;\n          overlapElement = true;\n        }\n      }\n    }\n  };\n\n  const onEnd = (endEv): void => {\n    isDragging = false;\n    document.removeEventListener('mousemove', onMove);\n    document.removeEventListener('mouseup', onEnd);\n    document.removeEventListener('touchmove', onMove);\n    document.removeEventListener('touchend', onEnd);\n\n    // Reset styles when dragging ends\n    element.style.opacity = '';\n    element.style.cursor = 'move';\n    element.style.transform = 'translate(0, 0)';\n\n    if (overlapElement) {\n      slideCompleted(element);\n      overlapElement = false;\n    }\n  };\n  // Initialize draggable element styles\n  element.style.cursor = 'move';\n  element.style.transform = 'translate(0, 0)'; // Initialize transform for consistent dragging\n\n  element.addEventListener('mousedown', onStart);\n  element.addEventListener('touchstart', onStart);\n  element.addEventListener('click', ev => {\n    onClickDropOrDragElement(element, 'drag');\n  });\n}\n\nconst slideCompleted = (slideElement: HTMLElement) => {\n  const slideArr = JSON.parse(localStorage.getItem(SelectedValuesKey)) || [];\n  const allSlideElements = document.querySelectorAll(\"[type='slide']\");\n\n  let index = 0;\n  allSlideElements.forEach(item => {\n    slideArr[index++] = item['value'];\n  });\n  localStorage.setItem(SelectedValuesKey, JSON.stringify(slideArr));\n\n  const objectiveString = document.querySelector('#lido-container')['objective'];\n  const objectiveArray = objectiveString.split(',');\n  const elementIndex = slideArr.indexOf(slideElement['value']);\n  const isCorrect = matchStringPattern(slideElement['value'], [objectiveArray[elementIndex].trim()]);\n  storingEachActivityScore(isCorrect);\n  handleShowCheck();\n};\n\nfunction enableDraggingWithScaling(element: HTMLElement): void {\n  let isDragging = false;\n  let startX = 0;\n  let startY = 0;\n  let initialX = 0;\n  let initialY = 0;\n  // Fetch the container element\n  const container = document.querySelector('#lido-container') as HTMLElement;\n  if (!container) {\n    console.error(`Container with ID \"container\" not found.`);\n    return;\n  }\n\n  let verticalDistance;\n  let horizontalDistance;\n\n  const onStart = (event: MouseEvent | TouchEvent): void => {\n    removeHighlight(element);\n    isDragging = true;\n\n    if (event instanceof MouseEvent) {\n      startX = event.clientX;\n      startY = event.clientY;\n    } else {\n      startX = event.touches[0].clientX;\n      startY = event.touches[0].clientY;\n    }\n\n    // Apply dragging styles to the element\n    element.style.opacity = '0.8';\n    element.style.cursor = 'grabbing';\n\n    // Parse the current transform values at the start of each drag\n    const transform = window.getComputedStyle(element).transform;\n    if (transform !== 'none') {\n      const matrix = transform.match(/matrix\\(([^)]+)\\)/);\n      if (matrix) {\n        const matrixValues = matrix[1].split(', ');\n\n        initialX = parseFloat(matrixValues[4]);\n        initialY = parseFloat(matrixValues[5]);\n      }\n    } else {\n      initialX = 0;\n      initialY = 0;\n    }\n\n    document.addEventListener('mousemove', onMove);\n    document.addEventListener('mouseup', onEnd);\n    document.addEventListener('touchmove', onMove);\n    document.addEventListener('touchend', onEnd);\n  };\n\n  const rect1 = container.getBoundingClientRect();\n  const rect2 = element.getBoundingClientRect();\n  verticalDistance = rect1.top - rect2.top;\n  horizontalDistance = rect1.left - rect2.left;\n\n  const observer = new MutationObserver(mutationsList => {\n    for (const mutation of mutationsList) {\n      if (mutation.type === 'attributes' && mutation.attributeName === 'style') {\n        const rect1 = container.getBoundingClientRect();\n        const rect2 = element.getBoundingClientRect();\n        verticalDistance = rect1.top - rect2.top;\n        horizontalDistance = rect1.left - rect2.left;\n      }\n    }\n  });\n\n  // Configure the observer to watch for attribute changes\n  const observerConfig = {\n    attributes: true, // Monitor attribute changes\n    attributeFilter: ['style'], // Only observe changes to the 'style' attribute\n  };\n\n  // Start observing the element\n  observer.observe(container, observerConfig);\n\n  const onMove = (event: MouseEvent | TouchEvent): void => {\n    if (!isDragging) return;\n\n    const containerScale = getElementScale(container);\n\n    let dx = 0;\n    let dy = 0;\n\n    if (event instanceof MouseEvent) {\n      dx = (event.clientX - startX) / containerScale;\n      dy = (event.clientY - startY) / containerScale;\n    } else {\n      dx = (event.touches[0].clientX - startX) / containerScale;\n      dy = (event.touches[0].clientY - startY) / containerScale;\n    }\n\n    // Calculate the new position considering scaling\n    const newLeft = initialX + dx;\n    const newTop = initialY + dy;\n\n    // Get the dimensions and scale-corrected position of the container and element\n    const containerRect = container.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n\n    const numbers = element.style.transform.match(/-?\\d+(\\.\\d+)?/g);\n    const result = numbers.map(Number);\n    const initialElementLeftPx = elementRect.left / containerScale - result[0];\n    const initialElementTopPx = elementRect.top - result[1];\n\n    const maxRight = containerRect.width / containerScale - Math.abs(horizontalDistance / containerScale) - elementRect.width / containerScale;\n    const maxLeft = containerRect.left - initialElementLeftPx;\n    const maxTop = containerRect.top - initialElementTopPx;\n    const maxBottom = containerRect.height / containerScale - Math.abs(verticalDistance / containerScale) - elementRect.height / containerScale;\n\n    const newLeftClamp = newLeft + initialElementLeftPx <= containerRect.left ? maxLeft : Math.min(newLeft, maxRight);\n    const newTopClamp = newTop + initialElementTopPx <= containerRect.top ? maxTop : Math.min(newTop, maxBottom);\n\n    // Apply transform with translation within boundaries\n    element.style.transform = `translate(${newLeftClamp}px, ${newTopClamp}px)`;\n\n    // Check for overlaps and highlight only the most overlapping element\n    let mostOverlappedElement: HTMLElement = findMostoverlappedElement(element, 'drop');\n\n    const allElements = document.querySelectorAll<HTMLElement>(\"[type='drop']\");\n    // Reset styles for all elements\n    allElements.forEach(otherElement => {\n      const dropObject = JSON.parse(localStorage.getItem(DragSelectedMapKey)) || {};\n      const storedTabIndexes = Object.keys(dropObject).map(Number);\n      if (storedTabIndexes.includes(otherElement['tabIndex'])) {\n        otherElement.style.border = ''; // Reset border\n        otherElement.style.backgroundColor = 'transparent'; // Reset background color\n      } else {\n        otherElement.style.border = ''; // Reset border\n        otherElement.style.backgroundColor = ''; // Reset background color\n      }\n    });\n\n    // Apply styles only to the most overlapped element\n    if (mostOverlappedElement) {\n      mostOverlappedElement.style.border = '2px dashed #ff0000'; // Red dashed border\n      mostOverlappedElement.style.backgroundColor = 'rgba(255, 0, 0, 0.1)'; // Light red background\n    }\n  };\n\n  const onEnd = (endEv): void => {\n    isDragging = false;\n\n    document.removeEventListener('mousemove', onMove);\n    document.removeEventListener('mouseup', onEnd);\n    document.removeEventListener('touchmove', onMove);\n    document.removeEventListener('touchend', onEnd);\n\n    // Reset styles when dragging ends\n    element.style.opacity = '';\n    element.style.cursor = 'move';\n\n    // Reset overlapping styles from all elements\n    const allElements = document.querySelectorAll<HTMLElement>(\"[type='drop']\");\n    allElements.forEach(otherElement => {\n      allElements.forEach(otherElement => {\n        const dropObject = JSON.parse(localStorage.getItem(DragSelectedMapKey)) || {};\n        const storedTabIndexes = Object.keys(dropObject).map(Number);\n        if (storedTabIndexes.includes(otherElement['tabIndex'])) {\n          otherElement.style.border = ''; // Reset border\n          otherElement.style.backgroundColor = 'transparent'; // Reset background color\n        } else {\n          otherElement.style.border = ''; // Reset border\n          otherElement.style.backgroundColor = ''; // Reset background color\n        }\n      });\n    });\n\n    // Check for overlaps and log the most overlapping element\n    let mostOverlappedElement: HTMLElement = findMostoverlappedElement(element, 'drop');\n    onElementDropComplete(element, mostOverlappedElement);\n  };\n  // Initialize draggable element styles\n  element.style.cursor = 'move';\n  element.style.transform = 'translate(0, 0)'; // Initialize transform for consistent dragging\n\n  element.addEventListener('mousedown', onStart);\n  element.addEventListener('touchstart', onStart);\n  element.addEventListener('click', ev => {\n    onClickDropOrDragElement(element, 'drag');\n  });\n}\n\nconst findMostoverlappedElement = (element: HTMLElement, type: string) => {\n  const elementRect = element.getBoundingClientRect();\n  const allElements = document.querySelectorAll<HTMLElement>(`[type=\"${type}\"]`);\n\n  let mostOverlappedElement: HTMLElement | null = null;\n  let maxOverlapArea = 0;\n\n  allElements.forEach(otherElement => {\n    if (otherElement === element) return;\n    const otherRect = otherElement.getBoundingClientRect();\n    // Check if there is overlap\n    const overlapWidth = Math.max(0, Math.min(elementRect.right, otherRect.right) - Math.max(elementRect.left, otherRect.left));\n    const overlapHeight = Math.max(0, Math.min(elementRect.bottom, otherRect.bottom) - Math.max(elementRect.top, otherRect.top));\n    const overlapArea = overlapWidth * overlapHeight;\n\n    if (type === 'slide') {\n      const elementArea = elementRect.width * elementRect.height; // Area of the dragged element\n      const otherArea = otherRect.width * otherRect.height; // Area of the other element\n      // Determine the threshold for overlap (at least 80% of the smaller element's area)\n      const minimumArea = Math.min(elementArea, otherArea) * 0.8;\n\n      // Check if the overlap area exceeds the threshold\n      if (overlapArea >= minimumArea && overlapArea > maxOverlapArea) {\n        maxOverlapArea = overlapArea;\n        mostOverlappedElement = otherElement;\n      }\n      return;\n    }\n\n    // Update the most overlapped element if this one has a larger overlap area\n    if (overlapArea > maxOverlapArea) {\n      maxOverlapArea = overlapArea;\n      mostOverlappedElement = otherElement;\n    }\n  });\n  return mostOverlappedElement;\n};\n\nasync function onElementDropComplete(dragElement: HTMLElement, dropElement: HTMLElement): Promise<void> {\n  const selectedValueData = localStorage.getItem(SelectedValuesKey);\n  const dragSelectedData = localStorage.getItem(DragSelectedMapKey);\n  if (dropElement && dropElement.getAttribute('isAllowOnlyOneDrop') === 'true') {\n    // Check for overlaps and highlight only the most overlapping element\n    let mostOverlappedElement: HTMLElement = findMostoverlappedElement(dragElement, 'drag');\n    if (mostOverlappedElement) {\n      dragElement.style.transform = 'translate(0,0)';\n      if (dragSelectedData) {\n        let dragSelected = JSON.parse(dragSelectedData);\n        for (const key in dragSelected) {\n          if (dragSelected[key].includes(dragElement['value'])) {\n            delete dragSelected[key];\n          }\n        }\n        localStorage.setItem(DragSelectedMapKey, JSON.stringify(dragSelected));\n      }\n      const allElements = document.querySelectorAll<HTMLElement>(\"[type='drop']\");\n      allElements.forEach(otherElement => {\n        const dropObject = JSON.parse(localStorage.getItem(DragSelectedMapKey)) || {};\n        const storedTabIndexes = Object.keys(dropObject).map(Number);\n        if (storedTabIndexes.includes(otherElement['tabIndex'])) {\n          otherElement.style.border = ''; // Reset border\n          otherElement.style.backgroundColor = 'transparent'; // Reset background color\n        } else {\n          otherElement.style.border = '';\n          otherElement.style.backgroundColor = '';\n        }\n      });\n      return;\n    }\n  }\n  if (!dropElement) {\n    if (selectedValueData) {\n      let selectedValue = JSON.parse(selectedValueData);\n      selectedValue = selectedValue.filter(value => value != dragElement['value']);\n      localStorage.setItem(SelectedValuesKey, JSON.stringify(selectedValue));\n    }\n    if (dragSelectedData) {\n      let dragSelected = JSON.parse(dragSelectedData);\n      for (const key in dragSelected) {\n        if (dragSelected[key].includes(dragElement['value'])) {\n          delete dragSelected[key];\n        }\n      }\n      localStorage.setItem(DragSelectedMapKey, JSON.stringify(dragSelected));\n    }\n\n    const allElements = document.querySelectorAll<HTMLElement>(\"[type='drop']\");\n    allElements.forEach(otherElement => {\n      const dropObject = JSON.parse(localStorage.getItem(DragSelectedMapKey)) || {};\n      const storedTabIndexes = Object.keys(dropObject).map(Number);\n      if (storedTabIndexes.includes(otherElement['tabIndex'])) {\n        otherElement.style.border = ''; // Reset border\n        otherElement.style.backgroundColor = 'transparent'; // Reset background color\n      } else {\n        otherElement.style.border = '';\n        otherElement.style.backgroundColor = '';\n      }\n    });\n\n    handleShowCheck();\n    return;\n  }\n\n  if (dragSelectedData) {\n    let dragSelected = JSON.parse(dragSelectedData);\n    for (const key in dragSelected) {\n      if (dragSelected[key].includes(dragElement['value'])) {\n        delete dragSelected[key];\n      }\n    }\n    localStorage.setItem(DragSelectedMapKey, JSON.stringify(dragSelected));\n  }\n\n  // Add pulse and highlight effect for a successful match\n  const isCorrect = dropElement['value'].includes(dragElement['value']);\n  dispatchElementDropEvent(dragElement, dropElement, isCorrect);\n  if (isCorrect) {\n    // Perform actions if onMatch is defined\n    const onCorrect = dropElement.getAttribute('onCorrect');\n    if (onCorrect) {\n      await executeActions(onCorrect, dropElement, dragElement);\n    }\n  } else {\n    const onInCorrect = dropElement.getAttribute('onInCorrect');\n\n    await executeActions(onInCorrect, dropElement, dragElement);\n\n    // showWrongAnswerAnimation([dropElement, dragElement]);\n  }\n  storingEachActivityScore(isCorrect);\n  await onActivityComplete(dragElement, dropElement);\n}\n\n// Function to execute actions parsed from the onMatch string\nconst executeActions = async (actionsString: string, thisElement: HTMLElement, element?: HTMLElement): Promise<void> => {\n  const actions = parseActions(actionsString);\n\n  for (let i = 0; i < actions.length; i++) {\n    const action = actions[i];\n\n    const queriedElement = document.querySelector(action.actor) as HTMLElement | null;\n    const targetElement = action.actor === 'this' ? thisElement : action.actor === 'element' ? element : queriedElement ? queriedElement : document.getElementById(action.actor);\n\n    if (targetElement) {\n      // Handle the 'transform' property separately\n      switch (action.action) {\n        case 'transform': {\n          const currentTransform = window.getComputedStyle(targetElement).transform;\n          targetElement.style.transform = currentTransform !== 'none' ? `${currentTransform} ${action.value}` : action.value;\n          break;\n        }\n        case 'alignMatch': {\n          const dropElement = targetElement;\n          const dragElement = element;\n\n          const container = document.querySelector('#lido-container') as HTMLElement;\n          const containerScale = getElementScale(container);\n          dragElement.style.transform = 'translate(0,0)';\n          const dropRect = dropElement.getBoundingClientRect();\n          const dragRect = dragElement.getBoundingClientRect();\n\n          const scaledLeft = (dropRect.left - dragRect.left) / containerScale;\n          const scaledTop = (dropRect.top - dragRect.top) / containerScale;\n          dragElement.style.transform = `translate(${scaledLeft}px, ${scaledTop}px)`;\n          break;\n        }\n        case 'addClass': {\n          targetElement.classList.add(action.value);\n          break;\n        }\n        case 'speak': {\n          {\n            let audioUrl = targetElement.getAttribute('audio');\n            if(!audioUrl){\n              const childElements = targetElement.children\n              for (let i = 0; i < childElements.length; i++) {\n                const child = childElements[i];            \n                const childAudioUrl = child.getAttribute('audio');\n                if (childAudioUrl) {\n                  audioUrl = childAudioUrl\n                }\n              }\n            }\n            if (audioUrl) {\n              audioUrl = convertUrlToRelative(audioUrl);\n              let audioElement = document.querySelector('#audio') as HTMLAudioElement;\n              if (!audioElement) {\n                const newAudio = document.createElement('audio');\n                newAudio.id = 'audio';\n                document.body.appendChild(newAudio);\n                audioElement = newAudio;\n              }\n\n              audioElement.pause();\n              audioElement.currentTime = 0;\n              audioElement.src = audioUrl;\n              console.log('🚀 ~ executeActions ~ audioElement.src:', audioElement.src);\n\n              try {\n                await audioElement.play();\n                highlightSpeakingElement(targetElement);\n                while (!audioElement.ended || audioElement.error) {\n                  await new Promise(resolve => setTimeout(resolve, 100));\n                }\n                stopHighlightForSpeakingElement(targetElement);\n              } catch (error) {\n                console.log('🚀 ~ executeActions ~ audioElement.src: error', error);\n              }\n            }\n            //check if the targetElement has a text property\n            else if (targetElement.textContent) {\n              try {\n                highlightSpeakingElement(targetElement);\n                await speakText(targetElement.textContent);\n                stopHighlightForSpeakingElement(targetElement);\n              } catch (error) {\n                console.log('🚀 ~ executeActions ~ error:', error);\n              }\n            }\n            break;\n          }\n        }\n\n        case 'sleep': {\n          const isNumber = !isNaN(Number(action.value));\n          if (isNumber) {\n            await new Promise(resolve => setTimeout(resolve, Number(action.value)));\n          }\n          break;\n        }\n\n        case 'avatarAnimate': {\n          const riveService = RiveService.getInstance();\n          const riveInstance = riveService.getRiveInstance();\n\n          if (riveInstance && action.value) {\n            riveInstance.play(action.value);\n          }\n          break;\n        }\n\n        default: {\n          targetElement.style[action.action] = action.value;\n          break;\n        }\n      }\n    }\n  }\n};\n\n// Function to parse actions string\nconst parseActions = (input: string): Array<{ actor: string; action: string; value: string }> => {\n  const actions = [];\n  if (!input) return actions;\n  const actionStrings = input.split(';')?.map(action => action.trim());\n\n  actionStrings.forEach(actionString => {\n    if (actionString) {\n      const [actorAction, value] = actionString.split('=').map(part => part.trim());\n      const lastDotIndex = actorAction.lastIndexOf('.');\n      if (lastDotIndex !== -1) {\n        const actor = actorAction.substring(0, lastDotIndex).trim();\n        const action = actorAction.substring(lastDotIndex + 1).trim();\n        actions.push({ actor, action, value: value.replace(/['\"]/g, '') });\n      }\n    }\n  });\n\n  return actions;\n};\n\nconst matchStringPattern = (pattern: string, arr: string[]): boolean => {\n  const patternGroups = pattern.split(',').map(group => group.trim());\n\n  let arrIndex = 0;\n  let options = new Set<string>();\n\n  for (const group of patternGroups) {\n    if (group.startsWith('(') && group.endsWith(')')) {\n      // Inside parentheses: '|' acts like \"OR\" condition\n      const choices = group\n        .slice(1, -1)\n        .split('|')\n        .map(option => option.trim());\n\n      const arrChoice = group\n        .slice(1, -1)\n        .split('|')\n        .map(option => option.trim());\n\n      if (arrIndex >= arrChoice.length) return false;\n      if (!choices.includes(arrChoice[arrIndex])) return false;\n\n      arrIndex++;\n    } else if (group.includes('|')) {\n      // Outside parentheses: '|' acts as optional order\n      const choices = group.split('|').map(option => option.trim());\n\n      for (const choice of choices) {\n        options.add(choice);\n      }\n    } else {\n      // Exact match required\n      if (arrIndex >= arr.length || arr[arrIndex] !== group) return false;\n\n      arrIndex++;\n    }\n  }\n\n  // Validate the optional ordered items against the remaining array elements\n  while (arrIndex < arr.length) {\n    if (!options.has(arr[arrIndex])) {\n      return false;\n    }\n    options.delete(arr[arrIndex]);\n    arrIndex++;\n  }\n\n  return arrIndex === arr.length;\n};\n\nconst countPatternWords = (pattern: string): number => {\n  const patternGroups = pattern.split(',').map(group => group.trim());\n\n  let wordCount = 0;\n\n  for (const group of patternGroups) {\n    if (group.startsWith('(') && group.endsWith(')')) {\n      if (group.includes('|')) {\n        wordCount += group.split('|').length;\n      } else {\n        wordCount += 1;\n      }\n    } else {\n      wordCount += group.split('|').length;\n    }\n  }\n\n  return wordCount;\n};\n\nasync function onActivityComplete(dragElement?: HTMLElement, dropElement?: HTMLElement) {\n  const container = document.querySelector('#lido-container') as HTMLElement;\n  if (!container) return;\n\n  const isAllowOnlyCorrect = container.getAttribute('isAllowOnlyCorrect') === 'true';\n  if (isAllowOnlyCorrect) {\n    const isCorrect = dropElement['value'].includes(dragElement['value']);\n    if (!isCorrect) {\n      dragElement.style.transform = 'translate(0,0)';\n      return;\n    }\n  }\n\n  await executeActions(\"this.alignMatch='true'\", dropElement, dragElement);\n\n  let dragScore = JSON.parse(localStorage.getItem(DragSelectedMapKey) ?? '{}');\n  const tabindex = dropElement.getAttribute('tabindex');\n\n  if (!dragScore[tabindex]) {\n    dragScore[tabindex] = [];\n  }\n\n  dragScore[tabindex].push(dragElement['value']);\n\n  localStorage.setItem(DragSelectedMapKey, JSON.stringify(dragScore));\n\n  const sortedKeys = Object.keys(dragScore).sort((a, b) => parseInt(a) - parseInt(b));\n\n  const sortedValues = sortedKeys.reduce((acc, key) => {\n    const values = dragScore[key];\n    if (values.length > 1) {\n      acc.push(`(${values.join('|')})`);\n    } else {\n      acc.push(values[0]);\n    }\n    return acc;\n  }, []);\n\n  localStorage.setItem(SelectedValuesKey, JSON.stringify(sortedValues));\n\n  const allElements = document.querySelectorAll<HTMLElement>(\"[type='drop']\");\n  allElements.forEach(otherElement => {\n    const dropObject = JSON.parse(localStorage.getItem(DragSelectedMapKey)) || {};\n    const storedTabIndexes = Object.keys(dropObject).map(Number);\n    if (storedTabIndexes.includes(otherElement['tabIndex'])) {\n      otherElement.style.border = ''; // Reset border\n      otherElement.style.backgroundColor = 'transparent'; // Reset background color\n    } else {\n      otherElement.style.border = ''; // Reset border\n      otherElement.style.backgroundColor = ''; // Reset background color\n    }\n  });\n  handleShowCheck();\n}\n\nconst storingEachActivityScore = (flag: boolean) => {\n  if (flag) {\n    gameScore.rightMoves += 1;\n  } else {\n    gameScore.wrongMoves += 1;\n  }\n  console.log('Right Moves : ', gameScore.rightMoves);\n  console.log('Wrong Moves : ', gameScore.wrongMoves);\n};\n\nconst calculateScore = () => {\n  const rightMoves = gameScore.rightMoves;\n  const wrongMoves = gameScore.wrongMoves;\n  let finalScore = Math.floor((rightMoves / (rightMoves + wrongMoves)) * 100);\n  storeActivityScore(finalScore);\n  gameScore.rightMoves = 0;\n  gameScore.wrongMoves = 0;\n};\n\nconst storeActivityScore = (score: number) => {\n  const appHome = document.querySelector('lido-home');\n  if (!appHome) return;\n  const index = Number(appHome.getAttribute('index') ?? 0);\n  const totalIndex = Number(appHome.getAttribute('totalIndex') ?? 0);\n\n  const activityScore = JSON.parse(localStorage.getItem(ActivityScoreKey) ?? '{}');\n  const activityScoreKey = index.toString();\n  activityScore[activityScoreKey] = score;\n\n  //send Custom Event to parent\n  // window.dispatchEvent(new CustomEvent(ActivityEndKey, { detail: { index: index, totalIndex: totalIndex, score: score } }));\n  dispatchActivityEndEvent(index, totalIndex, score);\n\n  localStorage.setItem(ActivityScoreKey, JSON.stringify(activityScore));\n  if (totalIndex - 1 == index) {\n    const scoresArray: number[] = Object.values(activityScore);\n    const finalScore = scoresArray.reduce((acc, cur) => acc + cur, 0) / scoresArray.length;\n    gameScore.finalScore = Math.floor(finalScore);\n    console.log('Total Score : ', gameScore.finalScore);\n    // window.dispatchEvent(new CustomEvent(LessonEndKey, { detail: { score: finalScore } }));\n    dispatchLessonEndEvent(finalScore);\n    localStorage.removeItem(ActivityScoreKey);\n  }\n};\n\nconst handleShowCheck = () => {\n  const container = document.querySelector('#lido-container') as HTMLElement;\n  const objectiveString = container['objective'];\n  const selectValues = localStorage.getItem(SelectedValuesKey) ?? '';\n\n  const checkButton = document.querySelector('#lido-checkButton') as HTMLElement;\n\n  if (!selectValues || countPatternWords(selectValues) !== countPatternWords(objectiveString)) {\n    executeActions(\"this.addClass='lido-disable-check-button'\", checkButton);\n    return;\n  }\n\n  const showCheck = container.getAttribute('showCheck') == 'true';\n\n  if (showCheck) {\n    checkButton.classList.remove('lido-disable-check-button');\n  } else {\n    validateObjectiveStatus();\n  }\n};\n\nconst validateObjectiveStatus = async () => {\n  const container = document.querySelector('#lido-container') as HTMLElement;\n  if (!container) return;\n  const objectiveString = container['objective'];\n  const objectiveArray = JSON.parse(localStorage.getItem(SelectedValuesKey)) ?? [];\n  const res = matchStringPattern(objectiveString, objectiveArray);\n\n  if (res) {\n    appendingDragElementsInDrop();\n    const onCorrect = container.getAttribute('onCorrect');\n    if (onCorrect) {\n      await executeActions(onCorrect, container);\n    }\n    triggerNextContainer();\n  } else {\n    const onInCorrect = container.getAttribute('onInCorrect');\n    await executeActions(onInCorrect, container);\n    const isContinueOnCorrect = container.getAttribute('isContinueOnCorrect') === 'true';\n    if (!isContinueOnCorrect) {\n      triggerNextContainer();\n    }\n  }\n  await calculateScore();\n};\n\nconst appendingDragElementsInDrop = () => {\n  const dragItems = document.querySelectorAll(\"[type='drag']\");\n  const dropItems = document.querySelectorAll(\"[type='drop']\");\n  if (!dragItems || !dropItems) return;\n  dropItems.forEach(drop => {\n    dragItems.forEach(dragElement => {\n      const drag = dragElement as HTMLElement;\n      if (drop['value'].includes(drag['value'])) {\n        drag.style.transform = 'translate(0,0)';\n        drop.appendChild(drag);\n      }\n    });\n  });\n};\n\nexport const triggerNextContainer = () => {\n  // const event = new CustomEvent('nextContainer');\n  console.log('🚀 ~ triggerNextContainer ~ event:', event);\n  // window.dispatchEvent(event);\n  dispatchNextContainerEvent();\n};\n\nexport const initEventsForElement = async (element: HTMLElement, type: string) => {\n  const container = document.querySelector('#lido-container') as HTMLElement;\n  if (!container) return;\n  const onEntry = element.getAttribute('onEntry');\n  await executeActions(onEntry, element);\n  const canplay = container.getAttribute('canplay');\n  if (canplay != null && canplay === 'false') return;\n  switch (type) {\n    case 'drag': {\n      enableDraggingWithScaling(element);\n      break;\n    }\n    case 'click': {\n      addClickListenerForClickType(element);\n      break;\n    }\n    case 'drop': {\n      handleDropElement(element);\n      break;\n    }\n    case 'slide': {\n      slidingWithScaling(element);\n      break;\n    }\n    default:\n      break;\n  }\n\n  onTouchListenerForOnTouch(element);\n};\n\nfunction onTouchListenerForOnTouch(element: HTMLElement) {\n  if (!element) return;\n  const onTouch = element.getAttribute('onTouch');\n  if (!onTouch) return;\n  element.onclick = async () => {\n    console.log('🚀 ~ element.onclick= ~ onTouch:', onTouch);\n    if (!onTouch) return;\n    await executeActions(onTouch, element);\n  };\n}\n\nfunction addClickListenerForClickType(element: HTMLElement): void {\n  element.style.cursor = 'pointer';\n  if (!element) {\n    console.error('No element provided.');\n    return;\n  }\n\n  const onClick = async () => {\n    const container = document.querySelector('#lido-container') as HTMLElement;\n    const objective = container['objective'].split(',');\n    const checkButton = document.querySelector('#lido-checkButton') as HTMLElement;\n    const showCheck = container.getAttribute('showCheck') === 'true';\n\n    if (element.getAttribute('id') == 'lido-checkButton') {\n      checkButton.classList.add('lido-disable-check-button');\n      await validateObjectiveStatus();\n      return;\n    }\n\n    // element.style.border = '2px solid yellow';\n    // element.style.boxShadow = '0px 0px 10px rgba(255, 255, 0, 0.7)';\n\n    // element.style.transition = 'transform 0.2s ease, border 0.5s ease';\n    // element.style.transform = 'scale(1.1)';\n\n    // element.style.transform = 'scale(1)';\n    // element.style.border = '';\n    // element.style.boxShadow = '';\n\n    const isActivated = element.classList.contains('lido-element-selected');\n    let selectedValue = JSON.parse(localStorage.getItem(SelectedValuesKey)) || [];\n\n    if (objective.length === 1) {\n      localStorage.setItem(SelectedValuesKey, JSON.stringify([element['value']]));\n      const isCorrect = objective.includes(element['value']);\n      dispatchClickEvent(element, isCorrect);\n      if (isCorrect) {\n        const onCorrect = element.getAttribute('onCorrect');\n        await executeActions(onCorrect, element);\n      } else {\n        const onInCorrect = element.getAttribute('onInCorrect');\n        await executeActions(onInCorrect, element);\n        // showWrongAnswerAnimation([element]);\n      }\n      storingEachActivityScore(isCorrect);\n      handleShowCheck();\n      return;\n    }\n\n    if (showCheck) {\n      checkButton.classList.remove('lido-disable-check-button');\n    }\n\n    if (isActivated) {\n      element.classList.remove('lido-element-selected');\n      executeActions(element.getAttribute('onEntry'), element);\n\n      selectedValue = selectedValue.filter(item => item != element['value']);\n      localStorage.setItem(SelectedValuesKey, JSON.stringify(selectedValue));\n\n      let multiOptionScore = JSON.parse(localStorage.getItem(DragSelectedMapKey)) || {};\n      const valueToRemove = element['value'];\n      const keyToRemove = Object.keys(multiOptionScore).find(key => multiOptionScore[key].includes(valueToRemove));\n\n      if (keyToRemove) {\n        multiOptionScore[keyToRemove] = multiOptionScore[keyToRemove].filter(item => item !== valueToRemove);\n        if (multiOptionScore[keyToRemove].length === 0) {\n          delete multiOptionScore[keyToRemove];\n        }\n        localStorage.setItem(DragSelectedMapKey, JSON.stringify(multiOptionScore));\n        const sortedKeys = Object.keys(multiOptionScore).sort((a, b) => parseInt(a) - parseInt(b));\n        const sortedValues = sortedKeys.reduce((acc, key) => acc.concat(multiOptionScore[key]), []);\n        localStorage.setItem(SelectedValuesKey, JSON.stringify(sortedValues));\n      }\n\n      if (showCheck && selectedValue.length === 0) {\n        checkButton.classList.add('lido-disable-check-button');\n      }\n      return;\n    } else {\n      element.classList.add('lido-element-selected');\n      const valueToFind = element['value'];\n      const key = Object.keys(objective).find(key => objective[key] === valueToFind);\n      let multiOptionScore = JSON.parse(localStorage.getItem(DragSelectedMapKey)) || {};\n      if (!key) {\n        multiOptionScore[objective.length + selectedValue.length] = [valueToFind];\n      } else {\n        multiOptionScore[key] = [valueToFind];\n      }\n      localStorage.setItem(DragSelectedMapKey, JSON.stringify(multiOptionScore));\n      const sortedKeys = Object.keys(multiOptionScore).sort((a, b) => parseInt(a) - parseInt(b));\n      const sortedValues = sortedKeys.reduce((acc, key) => acc.concat(multiOptionScore[key]), []);\n      localStorage.setItem(SelectedValuesKey, JSON.stringify(sortedValues));\n\n      const isCorrect = objective.includes(element['value']);\n      dispatchClickEvent(element, isCorrect);\n      if (isCorrect) {\n        const onCorrect = element.getAttribute('onCorrect');\n        await executeActions(onCorrect, element);\n      } else {\n        const onInCorrect = element.getAttribute('onInCorrect');\n        await executeActions(onInCorrect, element);\n        // showWrongAnswerAnimation([element]);\n      }\n      storingEachActivityScore(isCorrect);\n    }\n\n    if (!showCheck && countPatternWords(objective) === countPatternWords(selectedValue)) {\n      validateObjectiveStatus();\n    }\n  };\n  element.addEventListener('click', onClick);\n}\n\nexport function showWrongAnswerAnimation(elements: HTMLElement[]): void {\n  const styleId = '#wrong-answer-animation-style';\n\n  executeActions(\"tryAgain.speak='true'\", document.querySelector('#tryAgain'));\n\n  // Check if the style is already added, if not, add it\n  if (!document.querySelector(styleId)) {\n    const style = document.createElement('style');\n    style.id = styleId;\n    style.innerHTML = `\n          @keyframes enhanced-shake {\n              0% { left: 0; }\n              10% { left: -8px; }\n              20% { left: 8px; }\n              30% { left: -8px; }\n              40% { left: 8px; }\n              50% { left: -6px; }\n              60% { left: 6px; }\n              70% { left: -4px; }\n              80% { left: 4px; }\n              90% { left: -2px; }\n              100% { left: 0; }\n          }\n\n          \n          .wrong-answer {\n              position: relative; /* Enable relative positioning to move the element */\n              animation: enhanced-shake 0.6s cubic-bezier(0.36, 0.07, 0.19, 0.97);\n              background-color: #ffdddd; /* Flash red background to indicate wrong answer */\n              box-shadow: 0 0 10px rgba(255, 0, 0, 0.5); /* Subtle red shadow */\n\n              border: 4px solid red;\n          }\n\n          \n      `;\n\n    document.head.appendChild(style);\n  }\n\n  elements.forEach(element => {\n    // Add the class to trigger the animation\n    element.classList.add('wrong-answer');\n\n    // Remove the class after the animation ends to reset the element\n    element.addEventListener(\n      'animationend',\n      () => {\n        element.classList.remove('wrong-answer');\n      },\n      { once: true },\n    );\n  });\n}\n\nfunction handleDropElement(element: HTMLElement): void {\n  element.onclick = () => {\n    onClickDropOrDragElement(element, 'drop');\n  };\n}\n\nasync function onClickDropOrDragElement(element: HTMLElement, type: 'drop' | 'drag'): Promise<void> {\n  // Remove the highlight class from elements matching the selector\n  const highlightedElements = document.querySelectorAll(`[type='${type}']`);\n\n  highlightedElements.forEach(el => {\n    removeHighlight(el as HTMLElement);\n  });\n\n  // Dynamically create the highlight class if it doesn't exist\n  if (!document.querySelector('#dynamic-highlight-style')) {\n    const style = document.createElement('style');\n    style.id = 'dynamic-highlight-style';\n    style.innerHTML = `\n      .highlight {\n        border: 4px solid #e74c3c; /* Thicker red border for more visibility */\n        border-radius: 12px; /* Larger rounded corners */\n        background-color: rgba(231, 76, 60, 0.3); /* Stronger, more noticeable background */\n        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2), 0 12px 40px rgba(0, 0, 0, 0.2); /* Stronger shadow */\n        outline: 4px solid rgba(231, 76, 60, 0.6); /* Glow effect */\n      }\n    `;\n\n    document.head.appendChild(style);\n  }\n\n  element?.classList.add('highlight');\n  element.ariaPressed = 'true';\n\n  const selectedDropElement: HTMLElement = type === 'drop' ? element : document.querySelector(\"[type='drop'].highlight\");\n  const selectedDragElement: HTMLElement = type === 'drag' ? element : document.querySelector(\"[type='drag'].highlight\");\n\n  if (selectedDropElement && selectedDragElement) {\n    // Add a transition for a smooth, slower movement\n    (selectedDragElement as HTMLElement).style.transition = 'transform 0.5s ease'; // 0.5s for a slower move\n\n    // Reset the transform of the drag element before calculating the new position\n    (selectedDragElement as HTMLElement).style.transform = '';\n    const container = document.querySelector('#lido-container') as HTMLElement;\n\n    const containerScale = getElementScale(container);\n    console.log('🚀 ~ onClickDropOrDragElement ~ containerScale:', containerScale);\n\n    // Get the positions of the drop and drag elements\n    const dropRect = selectedDropElement.getBoundingClientRect();\n    const dragRect = selectedDragElement.getBoundingClientRect();\n\n    // Calculate the difference in positions\n    const translateX = (dropRect.left - dragRect.left) / containerScale;\n    const translateY = (dropRect.top - dragRect.top) / containerScale;\n\n    // Move the drag element to the drop position\n    selectedDragElement.style.transform = `translate(${translateX}px, ${translateY}px)`;\n\n    // Remove highlights after moving the element\n    const allElements = document.querySelectorAll(`*`);\n    allElements.forEach(el => {\n      removeHighlight(el as HTMLElement);\n    });\n\n    // await new Promise(resolve => setTimeout(resolve, 500));\n    await onElementDropComplete(selectedDragElement, selectedDropElement);\n    // await new Promise(resolve => setTimeout(resolve, 500));\n    // selectedDragElement.style.transform = 'translate(0px, 0px)';\n  }\n}\n\nfunction removeHighlight(element: HTMLElement): void {\n  element.classList.remove('highlight');\n  element.ariaPressed = 'false';\n}\n\n// Function to highlight the speaking element\nfunction highlightSpeakingElement(element: HTMLElement): void {\n  if (!element) return;\n\n  // Add a custom class for highlighting\n  element.classList.add('speaking-highlight');\n\n  // Inject keyframe animation and class styles into the document's head if it doesn't already exist\n  const styleId = '#speaking-highlight-style';\n  if (!document.querySelector(styleId)) {\n    const style = document.createElement('style');\n    style.id = styleId;\n    style.innerHTML = `\n      .speaking-highlight {\n        box-shadow: 0 0 20px 10px rgba(255, 165, 0, 0.9) !important; /* Stronger orange glow effect */\n        // border: 3px solid green !important;\n        transition: box-shadow 0.5s ease-in-out, transform 0.5s ease-in-out;\n        transform: scale(1.05); /* Subtle scale effect to pop the element */\n        animation: pulseEffect 1.5s infinite; /* Pulsing animation */\n      }\n\n      @keyframes pulseEffect {\n        0% {\n          box-shadow: 0 0 20px 10px rgba(255, 165, 0, 0.9);\n          transform: scale(1.05);\n        }\n        50% {\n          box-shadow: 0 0 30px 15px rgba(255, 165, 0, 1);\n          transform: scale(1.1);\n        }\n        100% {\n          box-shadow: 0 0 20px 10px rgba(255, 165, 0, 0.9);\n          transform: scale(1.05);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n}\n\n// Function to stop highlighting\nfunction stopHighlightForSpeakingElement(element: HTMLElement): void {\n  if (!element) return;\n\n  // Remove the custom class for highlighting\n  element.classList.remove('speaking-highlight');\n\n  // Remove inline styles\n  // element.style.boxShadow = '';\n  // element.style.border = '';\n}\n\nexport function convertUrlToRelative(url: string): string {\n  const container = document.querySelector('#lido-container') as HTMLElement;\n  const baseUrl = container.getAttribute('baseUrl');\n\n  if (url.startsWith('http')) {\n    return url;\n  } else if (baseUrl) {\n    return baseUrl + url;\n  } else {\n    return getAssetPath(url);\n  }\n}\n\n/**\n * Asynchronously speaks the given text using the browser's text-to-speech API.\n * Returns true if speech is completed successfully, false otherwise.\n *\n * @param text The text to be spoken.\n * @returns A Promise that resolves to true if speech is successful, or false if an error occurs or speech synthesis is not supported.\n */\nexport async function speakText(text: string): Promise<boolean> {\n  return new Promise<boolean>((resolve, reject) => {\n    if (!('speechSynthesis' in window)) {\n      reject(new Error('Speech synthesis is not supported in this browser.'));\n      return;\n    }\n\n    const utterance = new SpeechSynthesisUtterance(text);\n\n    utterance.onend = () => {\n      resolve(true); // Resolve with true for successful speech\n    };\n\n    utterance.onerror = event => {\n      reject(new Error(`Speech synthesis error: ${event.error}`));\n    };\n    window.speechSynthesis.speak(utterance);\n  });\n}\n\n\nexport function handlingChildElements(element: HTMLElement, minLength: number, maxLength: number, currentLength: number, displayStyle: string){\n  if (currentLength === undefined) return;\n\n  const children = Array.from(element.children);\n  let allowedLength = currentLength;\n\n  if (minLength && currentLength < minLength) {\n    allowedLength = minLength;\n  }\n  if (maxLength && currentLength > maxLength) {\n    allowedLength = maxLength;\n  }\n\n  children.forEach((child, index) => {\n    (child as HTMLElement).style.display = index < allowedLength ? displayStyle : 'none';\n  });\n}\n"],"mappings":"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","ignoreList":[]}