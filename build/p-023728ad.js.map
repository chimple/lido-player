{"version":3,"names":["DragSelectedMapKey","SelectedValuesKey","ActivityScoreKey","ActivityEndKey","LessonEndKey","NextContainerKey","ActivityChangeKey","GameCompletedKey","ElementDropKey","ElementClickKey","TraceMode","GameScore","constructor","this","rightMoves","wrongMoves","finalScore","dispatchCustomEvent","eventName","detail","event","CustomEvent","window","dispatchEvent","dispatchActivityEndEvent","index","totalIndex","score","dispatchLessonEndEvent","dispatchNextContainerEvent","dispatchGameCompletedEvent","dispatchActivityChangeEvent","dispatchElementDropEvent","dragElement","dropElement","isCorrect","createdAt","Date","toISOString","dispatchClickEvent","element","RiveService","getInstance","instance","setRiveInstance","riveInstance","getRiveInstance","AudioPlayer","audioElement","document","createElement","id","body","appendChild","getI","stop","speechSynthesis","cancel","pause","currentTime","src","highlightedElements","querySelectorAll","forEach","stopHighlightForSpeakingElement","playElement","querySelector","pauseElement","style","visibility","play","targetElement","audioUrl","getAttribute","childElements","children","i","length","childAudioUrl","convertUrlToRelative","console","log","highlightSpeakingElement","Promise","resolve","onended","error","textContent","speakText","gameScore","format","first","middle","last","getElementScale","el","animation","transform","getComputedStyle","matrix","match","matrixValues","split","scaleX","parseFloat","slidingWithScaling","overlapElement","isDragging","startX","startY","initialX","initialY","parentElement","onStart","removeHighlight","MouseEvent","clientX","clientY","touches","opacity","cursor","getBoundingClientRect","addEventListener","onMove","onEnd","observer","MutationObserver","mutationsList","mutation","type","attributeName","observerConfig","attributes","attributeFilter","observe","parentElementScale","dx","dy","newLeft","newTop","containerRect","elementRect","numbers","result","map","Number","initialElementLeftPx","left","initialElementTopPx","top","initialElementRightPx","right","initialElementBottomPx","bottom","maxRight","maxLeft","maxTop","maxBottom","newLeftClamp","Math","min","newTopClamp","mostOverlappedElement","findMostoverlappedElement","parent1","parent2","elementPlaceholder","createComment","overlappedPlaceholder","replaceChild","endEv","removeEventListener","slideCompleted","ev","onClickDropOrDragElement","slideElement","slideArr","JSON","parse","localStorage","getItem","allSlideElements","item","setItem","stringify","objectiveString","objectiveArray","elementIndex","indexOf","matchStringPattern","trim","storingEachActivityScore","handleShowCheck","enableDraggingWithScaling","container","handlingElementFlexibleWidth","verticalDistance","horizontalDistance","rect1","rect2","containerScale","width","abs","height","allElements","otherElement","dropObject","storedTabIndexes","Object","keys","includes","border","backgroundColor","onElementDropComplete","maxOverlapArea","otherRect","overlapWidth","max","overlapHeight","overlapArea","elementArea","otherArea","minimumArea","async","selectedValueData","dragSelectedData","dragSelected","key","selectedValue","filter","value","onCorrect","executeActions","onInCorrect","onActivityComplete","actionsString","thisElement","actions","parseActions","action","queriedElement","actor","getElementById","currentTransform","dropRect","dragRect","dropCenterX","dropCenterY","dragCenterX","dragCenterY","scaledLeft","scaledTop","classList","add","isNumber","isNaN","setTimeout","riveService","input","actionStrings","_a","actionString","actorAction","part","lastDotIndex","lastIndexOf","substring","push","replace","pattern","arr","patternGroups","group","arrIndex","options","Set","startsWith","endsWith","choices","slice","option","arrChoice","choice","has","delete","countPatternWords","wordCount","isAllowOnlyCorrect","dragScore","tabindex","sortedKeys","sort","a","b","parseInt","sortedValues","reduce","acc","values","join","flag","calculateScore","floor","storeActivityScore","appHome","_b","activityScore","_c","activityScoreKey","toString","scoresArray","cur","removeItem","selectValues","checkButton","showCheck","remove","validateObjectiveStatus","res","appendingDragElementsInDrop","triggerNextContainer","isContinueOnCorrect","dragItems","dropItems","drop","drag","initEventsForElement","onEntry","canplay","addClickListenerForClickType","handleDropElement","onTouchListenerForOnTouch","onTouch","onclick","onClick","objective","isActivated","contains","multiOptionScore","valueToRemove","keyToRemove","find","concat","valueToFind","innerHTML","head","ariaPressed","selectedDropElement","selectedDragElement","transition","translateX","translateY","styleId","url","baseUrl","getAssetPath","text","reject","Error","synth","utterance","SpeechSynthesisUtterance","onend","speak","handlingChildElements","minLength","maxLength","currentLength","displayStyle","undefined","Array","from","allowedLength","child","display","parseProp","propValue","orientation","parsedValues","pair","dragElements","clickElements","maxWidth","clickEl","childEl","originalWidth","originalPadding","padding","tempWidth","offsetWidth","dragItem","dragEl","isFlexible"],"sources":["src/utils/constants.ts","src/utils/customEvents.ts","src/utils/rive-service.ts","src/utils/audioPlayer.ts","src/utils/utils.ts"],"sourcesContent":["export const DragSelectedMapKey = 'lidoDragSelectedMap';\nexport const SelectedValuesKey = 'lidoSelectedValues';\nexport const ActivityScoreKey = 'lidoActivityScore';\nexport const ActivityEndKey = 'lidoActivityEnd';\nexport const LessonEndKey = 'lidoLessonEnd';\nexport const NextContainerKey = 'lidoNextContainer';\nexport const ActivityChangeKey = 'lidoActivityChange';\nexport const GameCompletedKey = 'lidoGameCompleted';\nexport const GameExitKey = 'lidoGameExit';\nexport const ElementDropKey = 'lidoElementDrop';\nexport const ElementClickKey = 'lidoElementClick';\n\nexport enum TraceMode {\n  NoFlow = 'lido-noFlow',\n  ShowFlow = 'lido-showFlow',\n  FreeTrace = 'lido-freeTrace',\n  BlindTracing = 'lido-blindTracing',\n  BlindFreeTrace = 'lido-blindFreeTrace',\n}\n\nexport default class GameScore{\n  rightMoves: number = 0;\n  wrongMoves: number = 0;\n  finalScore: number = 0;\n}\n","import { ActivityChangeKey, ActivityEndKey, ElementClickKey, ElementDropKey, GameCompletedKey, GameExitKey, LessonEndKey, NextContainerKey } from './constants';\n\nfunction dispatchCustomEvent(eventName: string, detail: any) {\n  const event = new CustomEvent(eventName, { detail });\n  window.dispatchEvent(event);\n}\n\nexport function dispatchActivityEndEvent(index: number, totalIndex: number, score: number) {\n  dispatchCustomEvent(ActivityEndKey, { index, totalIndex, score });\n}\n\nexport function dispatchLessonEndEvent(score: number) {\n  dispatchCustomEvent(LessonEndKey, { score });\n}\n\nexport function dispatchNextContainerEvent() {\n  dispatchCustomEvent(NextContainerKey, {});\n}\n\nexport function dispatchGameCompletedEvent() {\n  dispatchCustomEvent(GameCompletedKey, {});\n}\n\nexport function dispatchGameExitEvent() {\n  dispatchCustomEvent(GameExitKey, {});\n}\n\nexport function dispatchActivityChangeEvent(index: number) {\n  dispatchCustomEvent(ActivityChangeKey, { index });\n}\n\nexport function dispatchElementDropEvent(dragElement: HTMLElement, dropElement: HTMLElement, isCorrect: boolean) {\n  dispatchCustomEvent(ElementDropKey, { dragElement, dropElement, isCorrect: isCorrect, createdAt: new Date().toISOString() });\n}\n\nexport function dispatchClickEvent(element: HTMLElement, isCorrect: boolean) {\n  dispatchCustomEvent(ElementClickKey, { element, isCorrect: isCorrect, createdAt: new Date().toISOString() });\n}\n","// rive-service.ts\nexport class RiveService {\n  private static instance: RiveService;\n  public riveInstance: any;\n\n  private constructor() {}\n\n  public static getInstance() {\n    if (!RiveService.instance) {\n      RiveService.instance = new RiveService();\n    }\n    return RiveService.instance;\n  }\n\n  public setRiveInstance(instance: any) {\n    this.riveInstance = instance;\n  }\n\n  public getRiveInstance() {\n    return this.riveInstance;\n  }\n}\n","import { convertUrlToRelative, highlightSpeakingElement, stopHighlightForSpeakingElement, speakText } from './utils';\n\nexport class AudioPlayer {\n  private static instance: AudioPlayer;\n  private audioElement: HTMLAudioElement;\n\n  private constructor() {\n    this.audioElement = document.createElement('audio');\n    this.audioElement.id = 'audio';\n    document.body.appendChild(this.audioElement);\n  }\n\n  public static getI(): AudioPlayer {\n    if (!AudioPlayer.instance) {\n      AudioPlayer.instance = new AudioPlayer();\n    }\n    return AudioPlayer.instance;\n  }\n\n  public stop() {\n    //check if speechSynthesis is supported\n    if (window?.speechSynthesis) {\n      window.speechSynthesis.cancel();\n    }\n    this.audioElement.pause();\n    this.audioElement.currentTime = 0;\n    this.audioElement.src = '';\n    const highlightedElements = document.querySelectorAll('.speaking-highlight');\n    highlightedElements.forEach(element => stopHighlightForSpeakingElement(element as HTMLElement));\n    \n    const playElement = document.querySelector(\"#play\") as HTMLElement;\n    const pauseElement = document.querySelector(\"#pause\") as HTMLElement;\n    playElement.style.visibility = \"visible\";\n    pauseElement.style.visibility = \"hidden\";\n  }\n\n  public async play(targetElement: HTMLElement) {\n    let audioUrl = targetElement.getAttribute('audio') || '';\n\n    if (!audioUrl) {\n      const childElements = targetElement.children;\n      for (let i = 0; i < childElements.length; i++) {\n        const childAudioUrl = childElements[i].getAttribute('audio');\n        if (childAudioUrl) {\n          audioUrl = childAudioUrl;\n        }\n      }\n    }\n\n    if (audioUrl) {\n      audioUrl = convertUrlToRelative(audioUrl);\n      this.audioElement.src = audioUrl;\n      console.log('🚀 Playing audio:', this.audioElement.src);\n\n      try {\n        await this.audioElement.play();\n        highlightSpeakingElement(targetElement);\n\n        await new Promise<void>(resolve => {\n          this.audioElement.onended = () => {\n            stopHighlightForSpeakingElement(targetElement);\n            resolve();\n          };\n        });\n      } catch (error) {\n        console.log('🚀 Audio play error:', error);\n      }\n    }\n    // If no audio, use text-to-speech\n    else if (targetElement.textContent) {\n      try {\n        highlightSpeakingElement(targetElement);\n        await speakText(targetElement.textContent, targetElement);\n        stopHighlightForSpeakingElement(targetElement);\n      } catch (error) {\n        console.log('🚀 TTS Error:', error);\n      }\n    }\n  }\n}\n","import { ActivityScoreKey, DragSelectedMapKey, LessonEndKey, SelectedValuesKey } from './constants';\nimport { dispatchActivityEndEvent, dispatchClickEvent, dispatchElementDropEvent, dispatchLessonEndEvent, dispatchNextContainerEvent } from './customEvents';\nimport GameScore from './constants';\nimport { RiveService } from './rive-service';\nimport { getAssetPath } from '@stencil/core';\nimport { AudioPlayer } from './audioPlayer';\nconst gameScore = new GameScore();\n\nexport function format(first?: string, middle?: string, last?: string): string {\n  return (first || '') + (middle ? ` ${middle}` : '') + (last ? ` ${last}` : '');\n}\n\n// Function to get the scale of an element\nconst getElementScale = (el: HTMLElement): number => {\n  el.style.animation = 'unset';\n  const transform = window.getComputedStyle(el).transform;\n  if (transform === 'none') {\n    return 1; // No scaling\n  } else {\n    const matrix = transform.match(/matrix\\(([^)]+)\\)/);\n    if (matrix) {\n      const matrixValues = matrix[1].split(', ');\n      const scaleX = parseFloat(matrixValues[0]);\n      return scaleX; // Assuming uniform scaling (same scale in X and Y)\n    }\n  }\n  return 1; // Fallback to no scaling\n};\n\nfunction slidingWithScaling(element: HTMLElement): void {\n  let overlapElement = false;\n  let isDragging = false;\n  let startX = 0;\n  let startY = 0;\n  let initialX = 0;\n  let initialY = 0;\n\n  // Fetch the container element\n  const parentElement = element.parentElement;\n  if (!parentElement) {\n    console.error(`Parent element not found.`);\n    return;\n  }\n\n  let verticalDistance;\n  let horizontalDistance;\n\n  const onStart = (event: MouseEvent | TouchEvent): void => {\n    removeHighlight(element);\n    isDragging = true;\n\n    if (event instanceof MouseEvent) {\n      startX = event.clientX;\n      startY = event.clientY;\n    } else {\n      startX = event.touches[0].clientX;\n      startY = event.touches[0].clientY;\n    }\n\n    // Apply dragging styles to the element\n    element.style.opacity = '0.8';\n    element.style.cursor = 'grabbing';\n\n    // Parse the current transform values at the start of each drag\n    const transform = window.getComputedStyle(element).transform;\n    if (transform !== 'none') {\n      const matrix = transform.match(/matrix\\(([^)]+)\\)/);\n      if (matrix) {\n        const matrixValues = matrix[1].split(', ');\n        initialX = parseFloat(matrixValues[4]);\n        initialY = parseFloat(matrixValues[5]);\n      }\n    } else {\n      initialX = 0;\n      initialY = 0;\n    }\n\n    const rect1 = parentElement.getBoundingClientRect();\n    const rect2 = element.getBoundingClientRect();\n    verticalDistance = rect1.top - rect2.top;\n    horizontalDistance = rect1.left - rect2.left;\n\n    document.addEventListener('mousemove', onMove);\n    document.addEventListener('mouseup', onEnd);\n    document.addEventListener('touchmove', onMove);\n    document.addEventListener('touchend', onEnd);\n  };\n\n  const observer = new MutationObserver(mutationsList => {\n    for (const mutation of mutationsList) {\n      if (mutation.type === 'attributes' && mutation.attributeName === 'style') {\n        const rect1 = parentElement.getBoundingClientRect();\n        const rect2 = element.getBoundingClientRect();\n        verticalDistance = rect1.top - rect2.top;\n        horizontalDistance = rect1.left - rect2.left;\n      }\n    }\n  });\n\n  // Configure the observer to watch for attribute changes\n  const observerConfig = {\n    attributes: true, // Monitor attribute changes\n    attributeFilter: ['style'], // Only observe changes to the 'style' attribute\n  };\n\n  // Start observing the element\n  observer.observe(parentElement, observerConfig);\n\n  const onMove = (event: MouseEvent | TouchEvent): void => {\n    if (!isDragging) return;\n    const parentElementScale = getElementScale(parentElement);\n    let dx = 0;\n    let dy = 0;\n\n    if (event instanceof MouseEvent) {\n      dx = (event.clientX - startX) / parentElementScale;\n      dy = (event.clientY - startY) / parentElementScale;\n    } else {\n      dx = (event.touches[0].clientX - startX) / parentElementScale;\n      dy = (event.touches[0].clientY - startY) / parentElementScale;\n    }\n\n    // Calculate the new position considering scaling\n    const newLeft = initialX + dx;\n    const newTop = initialY + dy;\n\n    // Get the dimensions and scale-corrected position of the container and element\n    const containerRect = parentElement.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n\n    const numbers = element.style.transform.match(/-?\\d+(\\.\\d+)?/g);\n    const result = numbers.map(Number);\n    const initialElementLeftPx = elementRect.left / parentElementScale - result[0];\n    const initialElementTopPx = elementRect.top - result[1];\n    const initialElementRightPx = elementRect.right / parentElementScale - result[0];\n    const initialElementBottomPx = elementRect.bottom - result[1];\n\n    const maxRight = containerRect.right - initialElementRightPx;\n    const maxLeft = containerRect.left - initialElementLeftPx;\n    const maxTop = containerRect.top - initialElementTopPx;\n    const maxBottom = containerRect.bottom - initialElementBottomPx;\n\n    const newLeftClamp = newLeft + initialElementLeftPx <= containerRect.left ? maxLeft : Math.min(newLeft, maxRight);\n    const newTopClamp = newTop + initialElementTopPx <= containerRect.top ? maxTop : Math.min(newTop, maxBottom);\n\n    // Apply transform with translation within boundaries\n    element.style.transform = `translate(${newLeftClamp}px, ${newTopClamp}px)`;\n\n    // Check for overlaps and highlight only the most overlapping element\n    let mostOverlappedElement: HTMLElement = findMostoverlappedElement(element, 'slide');\n\n    // Apply styles only to the most overlapped element\n    if (mostOverlappedElement) {\n      if (mostOverlappedElement != element) {\n        const parent1 = element.parentElement;\n        const parent2 = mostOverlappedElement.parentElement;\n\n        if (parent1 && parent2) {\n          // Temporarily detach both elements\n          const elementPlaceholder = document.createComment('element-placeholder');\n          const overlappedPlaceholder = document.createComment('overlapped-placeholder');\n          parent1.replaceChild(elementPlaceholder, element);\n          parent2.replaceChild(overlappedPlaceholder, mostOverlappedElement);\n          // Swap the elements\n          parent1.replaceChild(mostOverlappedElement, elementPlaceholder);\n          parent2.replaceChild(element, overlappedPlaceholder);\n          element.style.transform = 'translate(0, 0)';\n\n          // Recalculate starting points for the swapped element\n          startX = event instanceof MouseEvent ? event.clientX : event.touches[0].clientX;\n          startY = event instanceof MouseEvent ? event.clientY : event.touches[0].clientY;\n          initialX = 0;\n          initialY = 0;\n          overlapElement = true;\n        }\n      }\n    }\n  };\n\n  const onEnd = (endEv): void => {\n    isDragging = false;\n    document.removeEventListener('mousemove', onMove);\n    document.removeEventListener('mouseup', onEnd);\n    document.removeEventListener('touchmove', onMove);\n    document.removeEventListener('touchend', onEnd);\n\n    // Reset styles when dragging ends\n    element.style.opacity = '';\n    element.style.cursor = 'move';\n    element.style.transform = 'translate(0, 0)';\n\n    if (overlapElement) {\n      slideCompleted(element);\n      overlapElement = false;\n    }\n  };\n  // Initialize draggable element styles\n  element.style.cursor = 'move';\n  element.style.transform = 'translate(0, 0)'; // Initialize transform for consistent dragging\n\n  element.addEventListener('mousedown', onStart);\n  element.addEventListener('touchstart', onStart);\n  element.addEventListener('click', ev => {\n    onClickDropOrDragElement(element, 'drag');\n  });\n}\n\nconst slideCompleted = (slideElement: HTMLElement) => {\n  const slideArr = JSON.parse(localStorage.getItem(SelectedValuesKey)) || [];\n  const allSlideElements = document.querySelectorAll(\"[type='slide']\");\n\n  let index = 0;\n  allSlideElements.forEach(item => {\n    slideArr[index++] = item['value'];\n  });\n  localStorage.setItem(SelectedValuesKey, JSON.stringify(slideArr));\n\n  const objectiveString = document.querySelector('#lido-container')['objective'];\n  const objectiveArray = objectiveString.split(',');\n  const elementIndex = slideArr.indexOf(slideElement['value']);\n  const isCorrect = matchStringPattern(slideElement['value'], [objectiveArray[elementIndex].trim()]);\n  storingEachActivityScore(isCorrect);\n  handleShowCheck();\n};\n\nfunction enableDraggingWithScaling(element: HTMLElement): void {\n  let isDragging = false;\n  let startX = 0;\n  let startY = 0;\n  let initialX = 0;\n  let initialY = 0;\n  // Fetch the container element\n  const container = document.querySelector('#lido-container') as HTMLElement;\n  if (!container) {\n    console.error(`Container with ID \"container\" not found.`);\n    return;\n  }\n\n  handlingElementFlexibleWidth(element, 'drag');\n\n  let verticalDistance;\n  let horizontalDistance;\n\n  const onStart = (event: MouseEvent | TouchEvent): void => {\n    AudioPlayer.getI().stop();\n    removeHighlight(element);\n    isDragging = true;\n\n    if (event instanceof MouseEvent) {\n      startX = event.clientX;\n      startY = event.clientY;\n    } else {\n      startX = event.touches[0].clientX;\n      startY = event.touches[0].clientY;\n    }\n\n    // Apply dragging styles to the element\n    element.style.opacity = '0.8';\n    element.style.cursor = 'grabbing';\n\n    // Parse the current transform values at the start of each drag\n    const transform = window.getComputedStyle(element).transform;\n    if (transform !== 'none') {\n      const matrix = transform.match(/matrix\\(([^)]+)\\)/);\n      if (matrix) {\n        const matrixValues = matrix[1].split(', ');\n\n        initialX = parseFloat(matrixValues[4]);\n        initialY = parseFloat(matrixValues[5]);\n      }\n    } else {\n      initialX = 0;\n      initialY = 0;\n    }\n\n    document.addEventListener('mousemove', onMove);\n    document.addEventListener('mouseup', onEnd);\n    document.addEventListener('touchmove', onMove);\n    document.addEventListener('touchend', onEnd);\n  };\n\n  const rect1 = container.getBoundingClientRect();\n  const rect2 = element.getBoundingClientRect();\n  verticalDistance = rect1.top - rect2.top;\n  horizontalDistance = rect1.left - rect2.left;\n\n  const observer = new MutationObserver(mutationsList => {\n    for (const mutation of mutationsList) {\n      if (mutation.type === 'attributes' && mutation.attributeName === 'style') {\n        const rect1 = container.getBoundingClientRect();\n        const rect2 = element.getBoundingClientRect();\n        verticalDistance = rect1.top - rect2.top;\n        horizontalDistance = rect1.left - rect2.left;\n      }\n    }\n  });\n\n  // Configure the observer to watch for attribute changes\n  const observerConfig = {\n    attributes: true, // Monitor attribute changes\n    attributeFilter: ['style'], // Only observe changes to the 'style' attribute\n  };\n\n  // Start observing the element\n  observer.observe(container, observerConfig);\n\n  const onMove = (event: MouseEvent | TouchEvent): void => {\n    if (!isDragging) return;\n\n    const containerScale = getElementScale(container);\n\n    let dx = 0;\n    let dy = 0;\n\n    if (event instanceof MouseEvent) {\n      dx = (event.clientX - startX) / containerScale;\n      dy = (event.clientY - startY) / containerScale;\n    } else {\n      dx = (event.touches[0].clientX - startX) / containerScale;\n      dy = (event.touches[0].clientY - startY) / containerScale;\n    }\n\n    // Calculate the new position considering scaling\n    const newLeft = initialX + dx;\n    const newTop = initialY + dy;\n\n    // Get the dimensions and scale-corrected position of the container and element\n    const containerRect = container.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n\n    const numbers = element.style.transform.match(/-?\\d+(\\.\\d+)?/g);\n    const result = numbers.map(Number);\n    const initialElementLeftPx = elementRect.left / containerScale - result[0];\n    const initialElementTopPx = elementRect.top - result[1];\n\n    const maxRight = containerRect.width / containerScale - Math.abs(horizontalDistance / containerScale) - elementRect.width / containerScale;\n    const maxLeft = containerRect.left - initialElementLeftPx;\n    const maxTop = containerRect.top - initialElementTopPx;\n    const maxBottom = containerRect.height / containerScale - Math.abs(verticalDistance / containerScale) - elementRect.height / containerScale;\n\n    const newLeftClamp = newLeft + initialElementLeftPx <= containerRect.left ? maxLeft : Math.min(newLeft, maxRight);\n    const newTopClamp = newTop + initialElementTopPx <= containerRect.top ? maxTop : Math.min(newTop, maxBottom);\n\n    // Apply transform with translation within boundaries\n    element.style.transform = `translate(${newLeftClamp}px, ${newTopClamp}px)`;\n\n    // Check for overlaps and highlight only the most overlapping element\n    let mostOverlappedElement: HTMLElement = findMostoverlappedElement(element, 'drop');\n\n    const allElements = document.querySelectorAll<HTMLElement>(\"[type='drop']\");\n    // Reset styles for all elements\n    allElements.forEach(otherElement => {\n      const dropObject = JSON.parse(localStorage.getItem(DragSelectedMapKey)) || {};\n      const storedTabIndexes = Object.keys(dropObject).map(Number);\n      if (storedTabIndexes.includes(otherElement['tabIndex'])) {\n        otherElement.style.border = ''; // Reset border\n        otherElement.style.backgroundColor = 'transparent'; // Reset background color\n      } else {\n        otherElement.style.border = ''; // Reset border\n        otherElement.style.backgroundColor = ''; // Reset background color\n      }\n    });\n\n    // Apply styles only to the most overlapped element\n    if (mostOverlappedElement) {\n      mostOverlappedElement.style.border = '2px dashed #ff0000'; // Red dashed border\n      mostOverlappedElement.style.backgroundColor = 'rgba(255, 0, 0, 0.1)'; // Light red background\n    }\n  };\n\n  const onEnd = (endEv): void => {\n    isDragging = false;\n\n    document.removeEventListener('mousemove', onMove);\n    document.removeEventListener('mouseup', onEnd);\n    document.removeEventListener('touchmove', onMove);\n    document.removeEventListener('touchend', onEnd);\n\n    // Reset styles when dragging ends\n    element.style.opacity = '';\n    element.style.cursor = 'move';\n\n    // Reset overlapping styles from all elements\n    const allElements = document.querySelectorAll<HTMLElement>(\"[type='drop']\");\n    allElements.forEach(otherElement => {\n      allElements.forEach(otherElement => {\n        const dropObject = JSON.parse(localStorage.getItem(DragSelectedMapKey)) || {};\n        const storedTabIndexes = Object.keys(dropObject).map(Number);\n        if (storedTabIndexes.includes(otherElement['tabIndex'])) {\n          otherElement.style.border = ''; // Reset border\n          otherElement.style.backgroundColor = 'transparent'; // Reset background color\n        } else {\n          otherElement.style.border = ''; // Reset border\n          otherElement.style.backgroundColor = ''; // Reset background color\n        }\n      });\n    });\n\n    // Check for overlaps and log the most overlapping element\n    let mostOverlappedElement: HTMLElement = findMostoverlappedElement(element, 'drop');\n    onElementDropComplete(element, mostOverlappedElement);\n  };\n  // Initialize draggable element styles\n  element.style.cursor = 'move';\n  element.style.transform = 'translate(0, 0)'; // Initialize transform for consistent dragging\n\n  element.addEventListener('mousedown', onStart);\n  element.addEventListener('touchstart', onStart);\n  element.addEventListener('click', ev => {\n    onClickDropOrDragElement(element, 'drag');\n  });\n}\n\nconst findMostoverlappedElement = (element: HTMLElement, type: string) => {\n  const elementRect = element.getBoundingClientRect();\n  const allElements = document.querySelectorAll<HTMLElement>(`[type=\"${type}\"]`);\n\n  let mostOverlappedElement: HTMLElement | null = null;\n  let maxOverlapArea = 0;\n\n  allElements.forEach(otherElement => {\n    if (otherElement === element) return;\n    const otherRect = otherElement.getBoundingClientRect();\n    // Check if there is overlap\n    const overlapWidth = Math.max(0, Math.min(elementRect.right, otherRect.right) - Math.max(elementRect.left, otherRect.left));\n    const overlapHeight = Math.max(0, Math.min(elementRect.bottom, otherRect.bottom) - Math.max(elementRect.top, otherRect.top));\n    const overlapArea = overlapWidth * overlapHeight;\n\n    if (type === 'slide') {\n      const elementArea = elementRect.width * elementRect.height; // Area of the dragged element\n      const otherArea = otherRect.width * otherRect.height; // Area of the other element\n      // Determine the threshold for overlap (at least 80% of the smaller element's area)\n      const minimumArea = Math.min(elementArea, otherArea) * 0.8;\n\n      // Check if the overlap area exceeds the threshold\n      if (overlapArea >= minimumArea && overlapArea > maxOverlapArea) {\n        maxOverlapArea = overlapArea;\n        mostOverlappedElement = otherElement;\n      }\n      return;\n    }\n\n    // Update the most overlapped element if this one has a larger overlap area\n    if (overlapArea > maxOverlapArea) {\n      maxOverlapArea = overlapArea;\n      mostOverlappedElement = otherElement;\n    }\n  });\n  return mostOverlappedElement;\n};\n\nasync function onElementDropComplete(dragElement: HTMLElement, dropElement: HTMLElement): Promise<void> {\n  const selectedValueData = localStorage.getItem(SelectedValuesKey);\n  const dragSelectedData = localStorage.getItem(DragSelectedMapKey);\n  if (dropElement && dropElement.getAttribute('isAllowOnlyOneDrop') === 'true') {\n    // Check for overlaps and highlight only the most overlapping element\n    let mostOverlappedElement: HTMLElement = findMostoverlappedElement(dragElement, 'drag');\n    if (mostOverlappedElement) {\n      dragElement.style.transform = 'translate(0,0)';\n      if (dragSelectedData) {\n        let dragSelected = JSON.parse(dragSelectedData);\n        for (const key in dragSelected) {\n          if (dragSelected[key].includes(dragElement['value'])) {\n            delete dragSelected[key];\n          }\n        }\n        localStorage.setItem(DragSelectedMapKey, JSON.stringify(dragSelected));\n      }\n      const allElements = document.querySelectorAll<HTMLElement>(\"[type='drop']\");\n      allElements.forEach(otherElement => {\n        const dropObject = JSON.parse(localStorage.getItem(DragSelectedMapKey)) || {};\n        const storedTabIndexes = Object.keys(dropObject).map(Number);\n        if (storedTabIndexes.includes(otherElement['tabIndex'])) {\n          otherElement.style.border = ''; // Reset border\n          otherElement.style.backgroundColor = 'transparent'; // Reset background color\n        } else {\n          otherElement.style.border = '';\n          otherElement.style.backgroundColor = '';\n        }\n      });\n      return;\n    }\n  }\n  if (!dropElement) {\n    if (selectedValueData) {\n      let selectedValue = JSON.parse(selectedValueData);\n      selectedValue = selectedValue.filter(value => value != dragElement['value']);\n      localStorage.setItem(SelectedValuesKey, JSON.stringify(selectedValue));\n    }\n    if (dragSelectedData) {\n      let dragSelected = JSON.parse(dragSelectedData);\n      for (const key in dragSelected) {\n        if (dragSelected[key].includes(dragElement['value'])) {\n          delete dragSelected[key];\n        }\n      }\n      localStorage.setItem(DragSelectedMapKey, JSON.stringify(dragSelected));\n    }\n\n    const allElements = document.querySelectorAll<HTMLElement>(\"[type='drop']\");\n    allElements.forEach(otherElement => {\n      const dropObject = JSON.parse(localStorage.getItem(DragSelectedMapKey)) || {};\n      const storedTabIndexes = Object.keys(dropObject).map(Number);\n      if (storedTabIndexes.includes(otherElement['tabIndex'])) {\n        otherElement.style.border = ''; // Reset border\n        otherElement.style.backgroundColor = 'transparent'; // Reset background color\n      } else {\n        otherElement.style.border = '';\n        otherElement.style.backgroundColor = '';\n      }\n    });\n\n    handleShowCheck();\n    return;\n  }\n\n  if (dragSelectedData) {\n    let dragSelected = JSON.parse(dragSelectedData);\n    for (const key in dragSelected) {\n      if (dragSelected[key].includes(dragElement['value'])) {\n        delete dragSelected[key];\n      }\n    }\n    localStorage.setItem(DragSelectedMapKey, JSON.stringify(dragSelected));\n  }\n\n  // Add pulse and highlight effect for a successful match\n  const isCorrect = dropElement['value'].includes(dragElement['value']);\n  dispatchElementDropEvent(dragElement, dropElement, isCorrect);\n  if (isCorrect) {\n    // Perform actions if onMatch is defined\n    const onCorrect = dropElement.getAttribute('onCorrect');\n    if (onCorrect) {\n      await executeActions(onCorrect, dropElement, dragElement);\n    }\n  } else {\n    const onInCorrect = dropElement.getAttribute('onInCorrect');\n\n    await executeActions(onInCorrect, dropElement, dragElement);\n\n    // showWrongAnswerAnimation([dropElement, dragElement]);\n  }\n  storingEachActivityScore(isCorrect);\n  await onActivityComplete(dragElement, dropElement);\n}\n\n// Function to execute actions parsed from the onMatch string\nconst executeActions = async (actionsString: string, thisElement: HTMLElement, element?: HTMLElement): Promise<void> => {\n  const actions = parseActions(actionsString);\n\n  for (let i = 0; i < actions.length; i++) {\n    const action = actions[i];\n\n    const queriedElement = document.querySelector(action.actor) as HTMLElement | null;\n    const targetElement = action.actor === 'this' ? thisElement : action.actor === 'element' ? element : queriedElement ? queriedElement : document.getElementById(action.actor);\n\n    if (targetElement) {\n      // Handle the 'transform' property separately\n      switch (action.action) {\n        case 'transform': {\n          const currentTransform = window.getComputedStyle(targetElement).transform;\n          targetElement.style.transform = currentTransform !== 'none' ? `${currentTransform} ${action.value}` : action.value;\n          break;\n        }\n        case 'alignMatch': {\n          const dropElement = targetElement;\n          const dragElement = element;\n\n          const container = document.querySelector('#lido-container') as HTMLElement;\n          const containerScale = getElementScale(container);\n          dragElement.style.transform = 'translate(0,0)';\n\n          const dropRect = dropElement.getBoundingClientRect();\n          const dragRect = dragElement.getBoundingClientRect();\n\n          const dropCenterX = dropRect.left + dropRect.width / 2;\n          const dropCenterY = dropRect.top + dropRect.height / 2;\n          const dragCenterX = dragRect.left + dragRect.width / 2;\n          const dragCenterY = dragRect.top + dragRect.height / 2;\n\n          const scaledLeft = (dropCenterX - dragCenterX) / containerScale;\n          const scaledTop = (dropCenterY - dragCenterY) / containerScale;\n\n          dragElement.style.transform = `translate(${scaledLeft}px, ${scaledTop}px)`;\n          break;\n        }\n        case 'addClass': {\n          targetElement.classList.add(action.value);\n          break;\n        }\n        case 'speak': {\n          await AudioPlayer.getI().play(targetElement);\n          break;\n        }\n        case 'stop': {\n          await AudioPlayer.getI().stop();\n          break;\n        }\n\n        case 'sleep': {\n          const isNumber = !isNaN(Number(action.value));\n          if (isNumber) {\n            await new Promise(resolve => setTimeout(resolve, Number(action.value)));\n          }\n          break;\n        }\n\n        case 'avatarAnimate': {\n          const riveService = RiveService.getInstance();\n          const riveInstance = riveService.getRiveInstance();\n\n          if (riveInstance && action.value) {\n            riveInstance.play(action.value);\n          }\n          break;\n        }\n\n        default: {\n          targetElement.style[action.action] = action.value;\n          break;\n        }\n      }\n    }\n  }\n};\n\n// Function to parse actions string\nconst parseActions = (input: string): Array<{ actor: string; action: string; value: string }> => {\n  const actions = [];\n  if (!input) return actions;\n  const actionStrings = input.split(';')?.map(action => action.trim());\n\n  actionStrings.forEach(actionString => {\n    if (actionString) {\n      const [actorAction, value] = actionString.split('=').map(part => part.trim());\n      const lastDotIndex = actorAction.lastIndexOf('.');\n      if (lastDotIndex !== -1) {\n        const actor = actorAction.substring(0, lastDotIndex).trim();\n        const action = actorAction.substring(lastDotIndex + 1).trim();\n        actions.push({ actor, action, value: value.replace(/['\"]/g, '') });\n      }\n    }\n  });\n\n  return actions;\n};\n\nconst matchStringPattern = (pattern: string, arr: string[]): boolean => {\n  const patternGroups = pattern.split(',').map(group => group.trim());\n\n  let arrIndex = 0;\n  let options = new Set<string>();\n\n  for (const group of patternGroups) {\n    if (group.startsWith('(') && group.endsWith(')')) {\n      // Inside parentheses: '|' acts like \"OR\" condition\n      const choices = group\n        .slice(1, -1)\n        .split('|')\n        .map(option => option.trim());\n\n      const arrChoice = group\n        .slice(1, -1)\n        .split('|')\n        .map(option => option.trim());\n\n      if (arrIndex >= arrChoice.length) return false;\n      if (!choices.includes(arrChoice[arrIndex])) return false;\n\n      arrIndex++;\n    } else if (group.includes('|')) {\n      // Outside parentheses: '|' acts as optional order\n      const choices = group.split('|').map(option => option.trim());\n\n      for (const choice of choices) {\n        options.add(choice);\n      }\n    } else {\n      // Exact match required\n      if (arrIndex >= arr.length || arr[arrIndex] !== group) return false;\n\n      arrIndex++;\n    }\n  }\n\n  // Validate the optional ordered items against the remaining array elements\n  while (arrIndex < arr.length) {\n    if (!options.has(arr[arrIndex])) {\n      return false;\n    }\n    options.delete(arr[arrIndex]);\n    arrIndex++;\n  }\n\n  return arrIndex === arr.length;\n};\n\nconst countPatternWords = (pattern: string): number => {\n  const patternGroups = pattern.split(',').map(group => group.trim());\n\n  let wordCount = 0;\n\n  for (const group of patternGroups) {\n    if (group.startsWith('(') && group.endsWith(')')) {\n      if (group.includes('|')) {\n        wordCount += group.split('|').length;\n      } else {\n        wordCount += 1;\n      }\n    } else {\n      wordCount += group.split('|').length;\n    }\n  }\n\n  return wordCount;\n};\n\nasync function onActivityComplete(dragElement?: HTMLElement, dropElement?: HTMLElement) {\n  const container = document.querySelector('#lido-container') as HTMLElement;\n  if (!container) return;\n\n  const isAllowOnlyCorrect = container.getAttribute('isAllowOnlyCorrect') === 'true';\n  if (isAllowOnlyCorrect) {\n    const isCorrect = dropElement['value'].includes(dragElement['value']);\n    if (!isCorrect) {\n      dragElement.style.transform = 'translate(0,0)';\n      return;\n    }\n  }\n\n  await executeActions(\"this.alignMatch='true'\", dropElement, dragElement);\n\n  let dragScore = JSON.parse(localStorage.getItem(DragSelectedMapKey) ?? '{}');\n  const tabindex = dropElement.getAttribute('tabindex');\n\n  if (!dragScore[tabindex]) {\n    dragScore[tabindex] = [];\n  }\n\n  dragScore[tabindex].push(dragElement['value']);\n\n  localStorage.setItem(DragSelectedMapKey, JSON.stringify(dragScore));\n\n  const sortedKeys = Object.keys(dragScore).sort((a, b) => parseInt(a) - parseInt(b));\n\n  const sortedValues = sortedKeys.reduce((acc, key) => {\n    const values = dragScore[key];\n    if (values.length > 1) {\n      acc.push(`(${values.join('|')})`);\n    } else {\n      acc.push(values[0]);\n    }\n    return acc;\n  }, []);\n\n  localStorage.setItem(SelectedValuesKey, JSON.stringify(sortedValues));\n\n  const allElements = document.querySelectorAll<HTMLElement>(\"[type='drop']\");\n  allElements.forEach(otherElement => {\n    const dropObject = JSON.parse(localStorage.getItem(DragSelectedMapKey)) || {};\n    const storedTabIndexes = Object.keys(dropObject).map(Number);\n    if (storedTabIndexes.includes(otherElement['tabIndex'])) {\n      otherElement.style.border = ''; // Reset border\n      otherElement.style.backgroundColor = 'transparent'; // Reset background color\n    } else {\n      otherElement.style.border = ''; // Reset border\n      otherElement.style.backgroundColor = ''; // Reset background color\n    }\n  });\n  handleShowCheck();\n}\n\nconst storingEachActivityScore = (flag: boolean) => {\n  if (flag) {\n    gameScore.rightMoves += 1;\n  } else {\n    gameScore.wrongMoves += 1;\n  }\n  console.log('Right Moves : ', gameScore.rightMoves);\n  console.log('Wrong Moves : ', gameScore.wrongMoves);\n};\n\nconst calculateScore = () => {\n  const rightMoves = gameScore.rightMoves;\n  const wrongMoves = gameScore.wrongMoves;\n  let finalScore = Math.floor((rightMoves / (rightMoves + wrongMoves)) * 100);\n  storeActivityScore(finalScore);\n  gameScore.rightMoves = 0;\n  gameScore.wrongMoves = 0;\n};\n\nconst storeActivityScore = (score: number) => {\n  const appHome = document.querySelector('lido-home');\n  if (!appHome) return;\n  const index = Number(appHome.getAttribute('index') ?? 0);\n  const totalIndex = Number(appHome.getAttribute('totalIndex') ?? 0);\n\n  const activityScore = JSON.parse(localStorage.getItem(ActivityScoreKey) ?? '{}');\n  const activityScoreKey = index.toString();\n  activityScore[activityScoreKey] = score;\n\n  //send Custom Event to parent\n  // window.dispatchEvent(new CustomEvent(ActivityEndKey, { detail: { index: index, totalIndex: totalIndex, score: score } }));\n  dispatchActivityEndEvent(index, totalIndex, score);\n\n  localStorage.setItem(ActivityScoreKey, JSON.stringify(activityScore));\n  if (totalIndex - 1 == index) {\n    const scoresArray: number[] = Object.values(activityScore);\n    const finalScore = scoresArray.reduce((acc, cur) => acc + cur, 0) / scoresArray.length;\n    gameScore.finalScore = Math.floor(finalScore);\n    console.log('Total Score : ', gameScore.finalScore);\n    // window.dispatchEvent(new CustomEvent(LessonEndKey, { detail: { score: finalScore } }));\n    dispatchLessonEndEvent(finalScore);\n    localStorage.removeItem(ActivityScoreKey);\n  }\n};\n\nconst handleShowCheck = () => {\n  const container = document.querySelector('#lido-container') as HTMLElement;\n  const objectiveString = container['objective'];\n  const selectValues = localStorage.getItem(SelectedValuesKey) ?? '';\n\n  const checkButton = document.querySelector('#lido-checkButton') as HTMLElement;\n\n  if (!selectValues || countPatternWords(selectValues) !== countPatternWords(objectiveString)) {\n    executeActions(\"this.addClass='lido-disable-check-button'\", checkButton);\n    return;\n  }\n\n  const showCheck = container.getAttribute('showCheck') == 'true';\n\n  if (showCheck) {\n    checkButton.classList.remove('lido-disable-check-button');\n  } else {\n    validateObjectiveStatus();\n  }\n};\n\nconst validateObjectiveStatus = async () => {\n  const container = document.querySelector('#lido-container') as HTMLElement;\n  if (!container) return;\n  const objectiveString = container['objective'];\n  const objectiveArray = JSON.parse(localStorage.getItem(SelectedValuesKey)) ?? [];\n  const res = matchStringPattern(objectiveString, objectiveArray);\n\n  if (res) {\n    appendingDragElementsInDrop();\n    const onCorrect = container.getAttribute('onCorrect');\n    if (onCorrect) {\n      await executeActions(onCorrect, container);\n    }\n    triggerNextContainer();\n  } else {\n    const onInCorrect = container.getAttribute('onInCorrect');\n    await executeActions(onInCorrect, container);\n    const isContinueOnCorrect = container.getAttribute('isContinueOnCorrect') === 'true';\n    if (!isContinueOnCorrect) {\n      triggerNextContainer();\n    }\n  }\n  await calculateScore();\n};\n\nconst appendingDragElementsInDrop = () => {\n  const dragItems = document.querySelectorAll(\"[type='drag']\");\n  const dropItems = document.querySelectorAll(\"[type='drop']\");\n  if (!dragItems || !dropItems) return;\n  dropItems.forEach(drop => {\n    dragItems.forEach(dragElement => {\n      const drag = dragElement as HTMLElement;\n      if (drop['value'].includes(drag['value'])) {\n        drag.style.transform = 'translate(0,0)';\n        drop.appendChild(drag);\n      }\n    });\n  });\n};\n\nexport const triggerNextContainer = () => {\n  AudioPlayer.getI().stop();\n  // const event = new CustomEvent('nextContainer');\n  console.log('🚀 ~ triggerNextContainer ~ event:', event);\n  // window.dispatchEvent(event);\n  dispatchNextContainerEvent();\n};\n\nexport const initEventsForElement = async (element: HTMLElement, type: string) => {\n  const container = document.querySelector('#lido-container') as HTMLElement;\n  if (!container) return;\n  const onEntry = element.getAttribute('onEntry');\n  await executeActions(onEntry, element);\n  const canplay = container.getAttribute('canplay');\n  if (canplay != null && canplay === 'false') return;\n  switch (type) {\n    case 'drag': {\n      enableDraggingWithScaling(element);\n      break;\n    }\n    case 'click': {\n      addClickListenerForClickType(element);\n      break;\n    }\n    case 'drop': {\n      handleDropElement(element);\n      break;\n    }\n    case 'slide': {\n      slidingWithScaling(element);\n      break;\n    }\n    default:\n      break;\n  }\n\n  onTouchListenerForOnTouch(element);\n};\n\nfunction onTouchListenerForOnTouch(element: HTMLElement) {\n  if (!element) return;\n  const onTouch = element.getAttribute('onTouch');\n  if (!onTouch) return;\n  element.onclick = async () => {\n    console.log('🚀 ~ element.onclick= ~ onTouch:', onTouch);\n    if (!onTouch) return;\n    await executeActions(onTouch, element);\n  };\n}\n\nfunction addClickListenerForClickType(element: HTMLElement): void {\n  handlingElementFlexibleWidth(element, 'click');\n  element.style.cursor = 'pointer';\n  if (!element) {\n    console.error('No element provided.');\n    return;\n  }\n\n  const onClick = async () => {\n    AudioPlayer.getI().stop();\n    const container = document.querySelector('#lido-container') as HTMLElement;\n    const objective = container['objective'].split(',');\n    const checkButton = document.querySelector('#lido-checkButton') as HTMLElement;\n    const showCheck = container.getAttribute('showCheck') === 'true';\n\n    if (element.getAttribute('id') == 'lido-checkButton') {\n      checkButton.classList.add('lido-disable-check-button');\n      await validateObjectiveStatus();\n      return;\n    }\n\n    // element.style.border = '2px solid yellow';\n    // element.style.boxShadow = '0px 0px 10px rgba(255, 255, 0, 0.7)';\n\n    // element.style.transition = 'transform 0.2s ease, border 0.5s ease';\n    // element.style.transform = 'scale(1.1)';\n\n    // element.style.transform = 'scale(1)';\n    // element.style.border = '';\n    // element.style.boxShadow = '';\n\n    const isActivated = element.classList.contains('lido-element-selected');\n    let selectedValue = JSON.parse(localStorage.getItem(SelectedValuesKey)) || [];\n\n    if (objective.length === 1) {\n      localStorage.setItem(SelectedValuesKey, JSON.stringify([element['value']]));\n      const isCorrect = objective.includes(element['value']);\n      dispatchClickEvent(element, isCorrect);\n      if (isCorrect) {\n        const onCorrect = element.getAttribute('onCorrect');\n        await executeActions(onCorrect, element);\n      } else {\n        const onInCorrect = element.getAttribute('onInCorrect');\n        await executeActions(onInCorrect, element);\n        // showWrongAnswerAnimation([element]);\n      }\n      storingEachActivityScore(isCorrect);\n      handleShowCheck();\n      return;\n    }\n\n    if (showCheck) {\n      checkButton.classList.remove('lido-disable-check-button');\n    }\n\n    if (isActivated) {\n      element.classList.remove('lido-element-selected');\n      executeActions(element.getAttribute('onEntry'), element);\n\n      selectedValue = selectedValue.filter(item => item != element['value']);\n      localStorage.setItem(SelectedValuesKey, JSON.stringify(selectedValue));\n\n      let multiOptionScore = JSON.parse(localStorage.getItem(DragSelectedMapKey)) || {};\n      const valueToRemove = element['value'];\n      const keyToRemove = Object.keys(multiOptionScore).find(key => multiOptionScore[key].includes(valueToRemove));\n\n      if (keyToRemove) {\n        multiOptionScore[keyToRemove] = multiOptionScore[keyToRemove].filter(item => item !== valueToRemove);\n        if (multiOptionScore[keyToRemove].length === 0) {\n          delete multiOptionScore[keyToRemove];\n        }\n        localStorage.setItem(DragSelectedMapKey, JSON.stringify(multiOptionScore));\n        const sortedKeys = Object.keys(multiOptionScore).sort((a, b) => parseInt(a) - parseInt(b));\n        const sortedValues = sortedKeys.reduce((acc, key) => acc.concat(multiOptionScore[key]), []);\n        localStorage.setItem(SelectedValuesKey, JSON.stringify(sortedValues));\n      }\n\n      if (showCheck && selectedValue.length === 0) {\n        checkButton.classList.add('lido-disable-check-button');\n      }\n      return;\n    } else {\n      element.classList.add('lido-element-selected');\n      const valueToFind = element['value'];\n      const key = Object.keys(objective).find(key => objective[key] === valueToFind);\n      let multiOptionScore = JSON.parse(localStorage.getItem(DragSelectedMapKey)) || {};\n      if (!key) {\n        multiOptionScore[objective.length + selectedValue.length] = [valueToFind];\n      } else {\n        multiOptionScore[key] = [valueToFind];\n      }\n      localStorage.setItem(DragSelectedMapKey, JSON.stringify(multiOptionScore));\n      const sortedKeys = Object.keys(multiOptionScore).sort((a, b) => parseInt(a) - parseInt(b));\n      const sortedValues = sortedKeys.reduce((acc, key) => acc.concat(multiOptionScore[key]), []);\n      localStorage.setItem(SelectedValuesKey, JSON.stringify(sortedValues));\n\n      const isCorrect = objective.includes(element['value']);\n      dispatchClickEvent(element, isCorrect);\n      if (isCorrect) {\n        const onCorrect = element.getAttribute('onCorrect');\n        await executeActions(onCorrect, element);\n      } else {\n        const onInCorrect = element.getAttribute('onInCorrect');\n        await executeActions(onInCorrect, element);\n        // showWrongAnswerAnimation([element]);\n      }\n      storingEachActivityScore(isCorrect);\n    }\n\n    if (!showCheck && countPatternWords(objective) === countPatternWords(selectedValue)) {\n      validateObjectiveStatus();\n    }\n  };\n  element.addEventListener('click', onClick);\n}\n\nexport function showWrongAnswerAnimation(elements: HTMLElement[]): void {\n  const styleId = '#wrong-answer-animation-style';\n\n  executeActions(\"tryAgain.speak='true'\", document.querySelector('#tryAgain'));\n\n  // Check if the style is already added, if not, add it\n  if (!document.querySelector(styleId)) {\n    const style = document.createElement('style');\n    style.id = styleId;\n    style.innerHTML = `\n          @keyframes enhanced-shake {\n              0% { left: 0; }\n              10% { left: -8px; }\n              20% { left: 8px; }\n              30% { left: -8px; }\n              40% { left: 8px; }\n              50% { left: -6px; }\n              60% { left: 6px; }\n              70% { left: -4px; }\n              80% { left: 4px; }\n              90% { left: -2px; }\n              100% { left: 0; }\n          }\n\n          \n          .wrong-answer {\n              position: relative; /* Enable relative positioning to move the element */\n              animation: enhanced-shake 0.6s cubic-bezier(0.36, 0.07, 0.19, 0.97);\n              background-color: #ffdddd; /* Flash red background to indicate wrong answer */\n              box-shadow: 0 0 10px rgba(255, 0, 0, 0.5); /* Subtle red shadow */\n\n              border: 4px solid red;\n          }\n\n          \n      `;\n\n    document.head.appendChild(style);\n  }\n\n  elements.forEach(element => {\n    // Add the class to trigger the animation\n    element.classList.add('wrong-answer');\n\n    // Remove the class after the animation ends to reset the element\n    element.addEventListener(\n      'animationend',\n      () => {\n        element.classList.remove('wrong-answer');\n      },\n      { once: true },\n    );\n  });\n}\n\nfunction handleDropElement(element: HTMLElement): void {\n  element.onclick = () => {\n    onClickDropOrDragElement(element, 'drop');\n  };\n  handlingElementFlexibleWidth(element, 'drop');\n}\n\nasync function onClickDropOrDragElement(element: HTMLElement, type: 'drop' | 'drag'): Promise<void> {\n  // Remove the highlight class from elements matching the selector\n  const highlightedElements = document.querySelectorAll(`[type='${type}']`);\n\n  highlightedElements.forEach(el => {\n    removeHighlight(el as HTMLElement);\n  });\n\n  // Dynamically create the highlight class if it doesn't exist\n  if (!document.querySelector('#dynamic-highlight-style')) {\n    const style = document.createElement('style');\n    style.id = 'dynamic-highlight-style';\n    style.innerHTML = `\n      .highlight {\n        border: 4px solid #e74c3c; /* Thicker red border for more visibility */\n        border-radius: 12px; /* Larger rounded corners */\n        background-color: rgba(231, 76, 60, 0.3); /* Stronger, more noticeable background */\n        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2), 0 12px 40px rgba(0, 0, 0, 0.2); /* Stronger shadow */\n        outline: 4px solid rgba(231, 76, 60, 0.6); /* Glow effect */\n      }\n    `;\n\n    document.head.appendChild(style);\n  }\n\n  element?.classList.add('highlight');\n  element.ariaPressed = 'true';\n\n  const selectedDropElement: HTMLElement = type === 'drop' ? element : document.querySelector(\"[type='drop'].highlight\");\n  const selectedDragElement: HTMLElement = type === 'drag' ? element : document.querySelector(\"[type='drag'].highlight\");\n\n  if (selectedDropElement && selectedDragElement) {\n    // Add a transition for a smooth, slower movement\n    (selectedDragElement as HTMLElement).style.transition = 'transform 0.5s ease'; // 0.5s for a slower move\n\n    // Reset the transform of the drag element before calculating the new position\n    (selectedDragElement as HTMLElement).style.transform = '';\n    const container = document.querySelector('#lido-container') as HTMLElement;\n\n    const containerScale = getElementScale(container);\n    console.log('🚀 ~ onClickDropOrDragElement ~ containerScale:', containerScale);\n\n    // Get the positions of the drop and drag elements\n    const dropRect = selectedDropElement.getBoundingClientRect();\n    const dragRect = selectedDragElement.getBoundingClientRect();\n\n    // Calculate the difference in positions\n    const translateX = (dropRect.left - dragRect.left) / containerScale;\n    const translateY = (dropRect.top - dragRect.top) / containerScale;\n\n    // Move the drag element to the drop position\n    selectedDragElement.style.transform = `translate(${translateX}px, ${translateY}px)`;\n\n    // Remove highlights after moving the element\n    const allElements = document.querySelectorAll(`*`);\n    allElements.forEach(el => {\n      removeHighlight(el as HTMLElement);\n    });\n\n    // await new Promise(resolve => setTimeout(resolve, 500));\n    await onElementDropComplete(selectedDragElement, selectedDropElement);\n    // await new Promise(resolve => setTimeout(resolve, 500));\n    // selectedDragElement.style.transform = 'translate(0px, 0px)';\n  }\n}\n\nfunction removeHighlight(element: HTMLElement): void {\n  element.classList.remove('highlight');\n  element.ariaPressed = 'false';\n}\n\n// Function to highlight the speaking element\nexport function highlightSpeakingElement(element: HTMLElement): void {\n  if (!element) return;\n\n  // Add a custom class for highlighting\n  element.classList.add('speaking-highlight');\n\n  // Inject keyframe animation and class styles into the document's head if it doesn't already exist\n  const styleId = '#speaking-highlight-style';\n  if (!document.querySelector(styleId)) {\n    const style = document.createElement('style');\n    style.id = styleId;\n    style.innerHTML = `\n      .speaking-highlight {\n        --base-transform: ${element.style.transform};\n        box-shadow: 0 0 20px 10px rgba(255, 165, 0, 0.9) !important; /* Stronger orange glow effect */\n        // border: 3px solid green !important;\n        transition: box-shadow 0.5s ease-in-out, transform 0.5s ease-in-out;\n        transform: scale(1.05); /* Subtle scale effect to pop the element */\n        animation: pulseEffect 1.5s infinite; /* Pulsing animation */\n      }\n\n      @keyframes pulseEffect {\n        0% {\n          box-shadow: 0 0 20px 10px rgba(255, 165, 0, 0.9);\n          transform: var(--base-transform) scale(1.05);\n        }\n        50% {\n          box-shadow: 0 0 30px 15px rgba(255, 165, 0, 1);\n          transform: var(--base-transform) scale(1.1);\n        }\n        100% {\n          box-shadow: 0 0 20px 10px rgba(255, 165, 0, 0.9);\n          transform: var(--base-transform) scale(1.05);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n}\n\n// Function to stop highlighting\nexport function stopHighlightForSpeakingElement(element: HTMLElement): void {\n  if (!element) return;\n\n  // Remove the custom class for highlighting\n  element.classList.remove('speaking-highlight');\n\n  // Remove inline styles\n  // element.style.boxShadow = '';\n  // element.style.border = '';\n}\n\nexport function convertUrlToRelative(url: string): string {\n  const container = document.querySelector('#lido-container') as HTMLElement;\n  const baseUrl = container.getAttribute('baseUrl');\n\n  if (url.startsWith('http')) {\n    return url;\n  } else if (baseUrl) {\n    return baseUrl + url;\n  } else {\n    return getAssetPath(url);\n  }\n}\n\n/**\n * Asynchronously speaks the given text using the browser's text-to-speech API.\n * Returns true if speech is completed successfully, false otherwise.\n *\n * @param text The text to be spoken.\n * @returns A Promise that resolves to true if speech is successful, or false if an error occurs or speech synthesis is not supported.\n */\nexport async function speakText(text: string, targetElement?: HTMLElement): Promise<boolean> {\n  return new Promise<boolean>((resolve, reject) => {\n    if (!('speechSynthesis' in window)) {\n      reject(new Error('Speech synthesis is not supported in this browser.'));\n      return;\n    }\n\n    const synth = window.speechSynthesis;\n\n    setTimeout(() => {\n      const utterance = new SpeechSynthesisUtterance(text);\n\n      utterance.onend = () => {\n        resolve(true); // Resolve when speech is completed\n      };\n      synth.speak(utterance);\n    }, 50);\n  });\n}\n\nexport function handlingChildElements(element: HTMLElement, minLength: number, maxLength: number, currentLength: number, displayStyle: string) {\n  if (currentLength === undefined) return;\n\n  const children = Array.from(element.children);\n  let allowedLength = currentLength;\n\n  if (minLength && currentLength < minLength) {\n    allowedLength = minLength;\n  }\n  if (maxLength && currentLength > maxLength) {\n    allowedLength = maxLength;\n  }\n\n  children.forEach((child, index) => {\n    (child as HTMLElement).style.display = index < allowedLength ? displayStyle : 'none';\n  });\n}\n\nexport const parseProp = (propValue: string, orientation: string) => {\n  if (!propValue || !propValue.includes(',')) {\n    return propValue;\n  }\n\n  const parsedValues = propValue.split(',').reduce((acc, pair) => {\n    const [key, value] = pair.split('.');\n    acc[key.trim()] = value.trim();\n    return acc;\n  }, {} as Record<string, string>);\n\n  return parsedValues[orientation] || '';\n};\n\nconst handlingElementFlexibleWidth = (element: HTMLElement, type: string) => {\n  const dragElements = document.querySelectorAll(\"[type='drag'], [type='drop']\");\n  const clickElements = document.querySelectorAll(\"[type='click']\");\n  let maxWidth = 0;\n\n  if (type === 'click') {\n    clickElements.forEach(item => {\n      const clickEl = item as HTMLElement;\n      let targetElement: HTMLElement | null = null;\n\n      if (clickEl.getAttribute('flexibleWidth')) {\n        targetElement = clickEl;\n      } else {\n        // If the parent doesn't have flexibleWidth, check its child elements\n        const childElements = clickEl.children;\n        for (let i = 0; i < childElements.length; i++) {\n          const childEl = childElements[i] as HTMLElement;\n          if (childEl.getAttribute('flexibleWidth')) {\n            targetElement = childEl;\n            break;\n          }\n        }\n      }\n\n      if (targetElement) {\n        // Store original styles before modification\n        const originalWidth = targetElement.style.width;\n        const originalPadding = targetElement.style.padding;\n\n        // Set width to auto and padding to measure actual width\n        targetElement.style.width = 'auto';\n        targetElement.style.padding = '0 20px';\n\n        // Get updated width\n        const tempWidth = targetElement.offsetWidth;\n\n        // Restore original styles\n        targetElement.style.width = originalWidth;\n        targetElement.style.padding = originalPadding;\n\n        // Update max width if the new value is greater\n        if (tempWidth > maxWidth) {\n          maxWidth = tempWidth;\n        }\n      }\n    });\n\n    clickElements.forEach(item => {\n      const clickEl = item as HTMLElement;\n\n      if (clickEl.getAttribute('flexibleWidth')) {\n        if (clickEl.getAttribute('flexibleWidth') === 'true') return;\n        clickEl.style.width = `${maxWidth}px`;\n      } else {\n        const childElements = clickEl.children;\n        for (let i = 0; i < childElements.length; i++) {\n          const childEl = childElements[i] as HTMLElement;\n          if (childEl.getAttribute('flexibleWidth')) {\n            if (childEl.getAttribute('flexibleWidth') === 'true') return;\n            childEl.style.width = `${maxWidth}px`;\n            break;\n          }\n        }\n      }\n    });\n    return;\n  }\n\n  dragElements.forEach(dragItem => {\n    const dragEl = dragItem as HTMLElement;\n\n    const originalWidth = dragEl.style.width;\n    const originalPadding = dragEl.style.padding;\n\n    dragEl.style.width = 'auto';\n    dragEl.style.padding = '0 20px';\n\n    const tempWidth = dragEl.offsetWidth;\n\n    dragEl.style.width = originalWidth;\n    dragEl.style.padding = originalPadding;\n\n    if (tempWidth > maxWidth) {\n      maxWidth = tempWidth;\n    }\n  });\n\n  dragElements.forEach(dragItem => {\n    const dragEl = dragItem as HTMLElement;\n    const isFlexible = dragEl.getAttribute('flexibleWidth');\n\n    if (isFlexible === 'false') {\n      dragEl.style.width = `${maxWidth}px`;\n    } else if (isFlexible === 'true' && type === 'drag') {\n      dragEl.style.width = 'auto';\n      dragEl.style.padding = '0 20px';\n    }\n  });\n};\n"],"mappings":"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","ignoreList":[]}