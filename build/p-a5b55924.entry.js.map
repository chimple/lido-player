{"version":3,"names":["appColCss","AppColStyle0","AppCol","render","style","height","this","width","backgroundColor","bgColor","top","y","left","x","display","visible","zIndex","z","h","Host","key","class","type","appContainerCss","AppContainerStyle0","AppContainer","AppHome","parseElement","element","tagName","nodeName","toLowerCase","props","Array","from","attributes","forEach","attr","name","value","children","childNodes","map","child","nodeType","textContent","trim","filter","Boolean","componentMapping","Object","assign","console","warn","xmlData","parser","DOMParser","xmlDoc","parseFromString","rootElement","documentElement","appImageCss","AppImageStyle0","AppImage","componentDidLoad","initializeDraggable","el","src","objectiveCss","AppObjectiveStyle0","AppObjective","string","split","join","appPosCss","AppPosStyle0","AppPos","AppRoot","componentWillLoad","res","getAssetPath","log","response","fetch","data","text","appRowCss","AppRowStyle0","AppRow","appTextCss","AppTextStyle0","AppText","fontSize","fontFamily","font","id"],"sources":["src/components/common/app-col.css?tag=app-col","src/components/common/AppCol.tsx","src/components/common/app-container.css?tag=app-container","src/components/common/AppContainer.tsx","src/components/common/AppHome.tsx","src/components/common/app-image.css?tag=app-image","src/components/common/AppImage.tsx","src/components/common/objective.css?tag=app-objective","src/components/common/Objective.tsx","src/components/common/app-pos.css?tag=app-pos","src/components/common/AppPos.tsx","src/components/common/AppRoot.tsx","src/components/common/app-row.css?tag=app-row","src/components/common/AppRow.tsx","src/components/common/app-text.css?tag=app-text","src/components/common/AppText.tsx"],"sourcesContent":[".col {\n  /* position: absolute; */\n  top: var(--y, 0);\n  left: var(--x, 0);\n  height: var(--height, 100%);\n  width: var(--width, 100%);\n  background-color: var(--bgColor, #eeeeee);\n  /* position: relative; */\n  padding: 15px;\n  border-radius: 10px;\n  display: flex;\n  justify-content: space-around;\n  flex-direction: column;\n}\n\n.col > * {\n  /* position: relative; */\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'app-col',\n  styleUrl: 'app-col.css',\n  shadow: false,\n})\nexport class AppCol {\n  @Prop() id: string;\n  @Prop() value: string;\n  @Prop() height: string;\n  @Prop() width: string;\n  @Prop() x: string;\n  @Prop() y: string;\n  @Prop() z: string;\n  @Prop() bgColor: string;\n  @Prop() type: string;\n  @Prop() visible: boolean;\n  @Prop() audio: string;\n  @Prop() onTouch: string;\n  @Prop() onMatch: string;\n  @Prop() onEntry: string;\n\n  render() {\n    const style = {\n      height: this.height,\n      width: this.width,\n      backgroundColor: this.bgColor,\n      top: this.y,\n      left: this.x,\n      display: this.visible ? 'flex' : 'none',\n      zIndex: this.z,\n    };\n\n    return (\n      <Host class=\"col\" type={this.type} style={style}>\n        <slot />\n      </Host>\n    );\n  }\n}\n",".container {\n  position: relative;\n  height: 100%;\n  width: 100%;\n  background-color: var(--bgColor, #ffffff);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'app-container',\n  styleUrl: 'app-container.css',\n  shadow: false,\n})\nexport class AppContainer {\n  @Prop() value: string;\n  @Prop() height: string;\n  @Prop() width: string;\n  @Prop() x: string;\n  @Prop() y: string;\n  @Prop() z: string;\n  @Prop() bgColor: string;\n  @Prop() type: string;\n  @Prop() visible: boolean;\n  @Prop() audio: string;\n  @Prop() onTouch: string;\n  @Prop() onMatch: string;\n  @Prop() onEntry: string;\n\n  render() {\n    const style = {\n      height: this.height,\n      width: this.width,\n      backgroundColor: this.bgColor,\n      top: this.y,\n      left: this.x,\n    };\n\n    return (\n      <Host class=\"container\" style={style}>\n        {/* <slot /> */}\n      </Host>\n    );\n  }\n}\n","import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'app-home',\n  shadow: false,\n})\nexport class AppHome {\n  @Prop() xmlData: string;\n  private parseElement(element: Element): any {\n    const tagName = element.nodeName.toLowerCase();\n    const props: { [key: string]: any } = {};\n\n    // Convert attributes to props using reduce for cleaner code\n    Array.from(element.attributes).forEach(attr => {\n      props[attr.name] = attr.value;\n    });\n\n    // Recursively parse child elements\n    const children = Array.from(element.childNodes)\n      .map(child => {\n        if (child.nodeType === 1) {\n          // ELEMENT_NODE\n          return this.parseElement(child as Element);\n        } else if (child.nodeType === 3 && child.textContent.trim() !== '') {\n          // TEXT_NODE\n          return child.textContent;\n        }\n        return null;\n      })\n      .filter(Boolean); // Remove null/undefined values\n\n    // Dynamically map tag names to Stencil components\n    const componentMapping = {\n      'app-container': <app-container {...props}>{children}</app-container>,\n      'app-objective': <app-objective {...props}>{children}</app-objective>,\n      'app-col': <app-col {...props}>{children}</app-col>,\n      'app-image': <app-image {...props}>{children}</app-image>,\n      'app-row': <app-row {...props}>{children}</app-row>,\n      'app-text': <app-text {...props}>{children}</app-text>,\n      'app-pos': <app-pos {...props}>{children}</app-pos>,\n    };\n\n    if (componentMapping[tagName]) {\n      return componentMapping[tagName];\n    } else {\n      console.warn(`Unknown tag: ${tagName}`);\n      return null;\n    }\n  }\n\n  render() {\n    if (!this.xmlData) {\n      return <div>Please provide XML data.</div>;\n    }\n\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(this.xmlData, 'text/xml');\n\n    const rootElement = xmlDoc.documentElement;\n\n    return this.parseElement(rootElement);\n  }\n}\n",".image {\n  /* cursor: pointer; */\n  /* transition: transform 0.3s ease; */\n  user-select: none;\n  -webkit-user-drag: none;\n  object-fit: cover;\n}\n\n/* .image:hover {\n    transform: scale(1.05);\n  }\n   */\n","import { Component, Prop, h, Element, Host } from '@stencil/core';\nimport { initializeDraggable } from '../../utils/utils';\n\n@Component({\n  tag: 'app-image',\n  styleUrl: 'app-image.css',\n  shadow: false,\n})\nexport class AppImage {\n  @Prop() value: string;\n  @Prop() height: string;\n  @Prop() width: string;\n  @Prop() x: string;\n  @Prop() y: string;\n  @Prop() z: string;\n  @Prop() bgColor: string;\n  @Prop() type: string;\n  @Prop() visible: boolean;\n  @Prop() audio: string;\n  @Prop() onTouch: string;\n  @Prop() onMatch: string;\n  @Prop() onEntry: string;\n  @Prop() src: string;\n\n  @Element() el: HTMLElement;\n\n  componentDidLoad() {\n    if (this.type === 'drag') initializeDraggable(this.el);\n  }\n\n  render() {\n    const style = {\n      height: this.height,\n      width: this.width,\n      backgroundColor: this.bgColor,\n      top: this.y,\n      left: this.x,\n      zIndex: this.z,\n      display: this.visible ? 'block' : 'none',\n    };\n\n    return (\n      <Host class=\"image\" type={this.type} style={style}>\n        <img style={{ height: this.height, width: this.width }} src={this.src} />\n      </Host>\n    );\n  }\n}\n",".objective {\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: #555;\n  margin-bottom: 10px;\n}\n","import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'app-objective',\n  styleUrl: 'objective.css',\n  shadow: false,\n})\nexport class AppObjective {\n  @Prop() value: string;\n  @Prop() string: string;\n\n  render() {\n    return <div class=\"objective\">{this.string.split(',').join(' ')}</div>;\n  }\n}\n",".pos {\n  top: var(--y, 0);\n  left: var(--x, 0);\n  height: var(--height, 100%);\n  width: var(--width, 100%);\n  background-color: var(--bgColor, #eeeeee);\n  display: flex;\n  justify-content: space-around;\n  flex-direction: column;\n  position: fixed;\n}\n\n.pos > * {\n  position: absolute;\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'app-pos',\n  styleUrl: 'app-pos.css',\n  shadow: false,\n})\nexport class AppPos {\n  @Prop() id: string;\n  @Prop() value: string;\n  @Prop() height: string;\n  @Prop() width: string;\n  @Prop() x: string;\n  @Prop() y: string;\n  @Prop() z: string;\n  @Prop() bgColor: string;\n  @Prop() type: string;\n  @Prop() visible: boolean;\n  @Prop() audio: string;\n  @Prop() onTouch: string;\n  @Prop() onMatch: string;\n  @Prop() onEntry: string;\n\n  render() {\n    const style = {\n      height: this.height,\n      width: this.width,\n      backgroundColor: this.bgColor,\n      top: this.y,\n      left: this.x,\n      zIndex: this.z,\n      display: this.visible ? 'block' : 'none',\n    };\n\n    return (\n      <Host class=\"pos\" type={this.type} style={style}>\n        <slot />\n      </Host>\n    );\n  }\n}\n","import { Component, getAssetPath, h, State } from '@stencil/core';\n\n@Component({\n  tag: 'app-root',\n  shadow: false,\n  assetsDirs: ['assets'],\n})\nexport class AppRoot {\n  @State() xmlData: string;\n\n  async componentWillLoad() {\n    const res = getAssetPath('./assets/xmlData.xml');\n    console.log('ðŸš€ ~ AppRoot ~ componentWillLoad ~ res:', res);\n    const response = await fetch(res);\n    const data = await response.text();\n    this.xmlData = data;\n  }\n\n  render() {\n    if (!this.xmlData) {\n      return <div>Loading...</div>;\n    }\n\n    return <app-home xmlData={this.xmlData}></app-home>;\n  }\n}\n",".row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  /* position: absolute; */\n}\n\n.row > * {\n  /* position: relative; */\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'app-row',\n  styleUrl: 'app-row.css',\n  shadow: false,\n})\nexport class AppRow {\n  @Prop() value: string;\n  @Prop() height: string;\n  @Prop() width: string;\n  @Prop() x: string;\n  @Prop() y: string;\n  @Prop() z: string;\n  @Prop() bgColor: string;\n  @Prop() type: string;\n  @Prop() visible: boolean;\n  @Prop() audio: string;\n  @Prop() onTouch: string;\n  @Prop() onMatch: string;\n  @Prop() onEntry: string;\n\n  render() {\n    const style = {\n      height: this.height,\n      width: this.width,\n      top: this.y,\n      left: this.x,\n      display: this.visible ? 'flex' : 'none',\n      zIndex: this.z,\n    };\n\n    return (\n      <Host class=\"row\" type={this.type} style={style}>\n        {/* <slot /> */}\n      </Host>\n    );\n  }\n}\n",".text {\n  background-color: #fff;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  transition: background-color 0.3s ease;\n  user-select: none;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  border-radius: 8px;\n  color: #333;\n  cursor: pointer;\n}\n\n.text:hover {\n  background-color: #f0f0f0;\n}\n","import { Component, Prop, h, Element, Host } from '@stencil/core';\nimport { initializeDraggable } from '../../utils/utils';\n\n@Component({\n  tag: 'app-text',\n  styleUrl: 'app-text.css',\n  shadow: false,\n})\nexport class AppText {\n  @Prop() id: string;\n  @Prop() value: string;\n  @Prop() string: string;\n  @Prop() font: string;\n  @Prop() fontSize: string;\n  @Prop() highlightWhileSpeaking: boolean;\n  @Prop() height: string;\n  @Prop() width: string;\n  @Prop() x: string;\n  @Prop() y: string;\n  @Prop() z: string;\n  @Prop() bgColor: string;\n  @Prop() type: string;\n  @Prop() visible: boolean;\n  @Prop() audio: string;\n  @Prop() onTouch: string;\n  @Prop() onMatch: string;\n  @Prop() onEntry: string;\n\n  @Element() el: HTMLElement;\n\n  componentDidLoad() {\n    if (this.type === 'drag') initializeDraggable(this.el);\n  }\n\n  render() {\n    const style = {\n      height: this.height,\n      width: this.width,\n      backgroundColor: this.bgColor,\n      top: this.y,\n      left: this.x,\n      zIndex: this.z,\n      fontSize: this.fontSize,\n      fontFamily: this.font,\n      display: this.visible ? 'flex' : 'none',\n    };\n\n    return (\n      <Host class=\"text\" type={this.type} id={this.id} style={style}>\n        {this.string}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}