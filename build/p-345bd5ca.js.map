{"version":3,"names":["DragSelectedMapKey","SelectedValuesKey","ActivityScoreKey","ActivityEndKey","LessonEndKey","NextContainerKey","ActivityChangeKey","GameCompletedKey","ElementDropKey","ElementClickKey","TraceMode","GameScore","constructor","this","rightMoves","wrongMoves","finalScore","dispatchCustomEvent","eventName","detail","event","CustomEvent","window","dispatchEvent","dispatchActivityEndEvent","index","totalIndex","score","dispatchLessonEndEvent","dispatchNextContainerEvent","dispatchGameCompletedEvent","dispatchActivityChangeEvent","dispatchElementDropEvent","dragElement","dropElement","isCorrect","createdAt","Date","toISOString","dispatchClickEvent","element","gameScore","format","first","middle","last","getElementScale","el","transform","getComputedStyle","matrix","match","matrixValues","split","scaleX","parseFloat","enableDraggingWithScaling","isDragging","startX","startY","initialX","initialY","container","document","getElementById","console","error","verticalDistance","horizontalDistance","onStart","removeHighlight","MouseEvent","clientX","clientY","touches","style","opacity","cursor","rect1","getBoundingClientRect","rect2","top","left","addEventListener","onMove","onEnd","observer","MutationObserver","mutationsList","mutation","type","attributeName","observerConfig","attributes","attributeFilter","observe","containerScale","dx","dy","newLeft","newTop","containerRect","elementRect","numbers","result","map","Number","initialElementLeftPx","initialElementTopPx","maxRight","width","Math","abs","maxLeft","maxTop","maxBottom","height","newLeftClamp","min","newTopClamp","allElements","querySelectorAll","mostOverlappedElement","maxOverlapArea","forEach","otherElement","otherRect","overlapWidth","max","right","overlapHeight","bottom","overlapArea","border","backgroundColor","endEv","removeEventListener","onElementDropComplete","ev","onClickDropOrDragElement","async","selectedValueData","localStorage","getItem","dragSelectedData","selectedValue","JSON","parse","filter","value","setItem","stringify","dragSelected","dropIndex","parentElement","getAttribute","hasOwnProperty","handleShowCheck","matchStringPattern","onCorrect","executeActions","onInCorrect","storingEachActivityScore","onActivityComplete","actionsString","thisElement","actions","parseActions","i","length","action","targetElement","actor","currentTransform","dropRect","scaledLeft","scaledTop","position","classList","add","audioUrl","convertUrlToRelative","audioElement","newAudio","createElement","id","body","appendChild","pause","currentTime","src","log","play","highlightSpeakingElement","ended","Promise","resolve","setTimeout","stopHighlightForSpeakingElement","isNumber","isNaN","input","actionStrings","_a","trim","actionString","actorAction","part","lastDotIndex","lastIndexOf","substring","push","replace","pattern","arr","patternGroups","group","arrIndex","options","Set","startsWith","endsWith","choices","slice","option","includes","choice","has","delete","countPatternWords","wordCount","isAllowOnlyCorrect","dragScore","sortedKeys","Object","keys","sort","a","b","parseInt","sortedValues","reduce","acc","key","concat","flag","calculateScore","floor","storeActivityScore","appHome","querySelector","_b","activityScore","_c","activityScoreKey","toString","scoresArray","values","cur","removeItem","objectiveString","selectValues","checkButton","showCheck","remove","validateObjectiveStatus","objectiveArray","res","appendingDragElementsInDrop","triggerNextContainer","isContinueOnCorrect","dragItems","dropItems","drop","drag","initEventsForElement","canplay","addClickListenerForClickType","handleDropElement","onEntry","onTouchListenerForOnTouch","onTouch","onclick","onClick","boxShadow","transition","objective","highlightedElements","innerHTML","head","ariaPressed","selectedDropElement","selectedDragElement","dragRect","translateX","translateY","styleId","url","baseUrl"],"sources":["src/utils/constants.ts","src/utils/customEvents.ts","src/utils/utils.ts"],"sourcesContent":["export const DragSelectedMapKey = 'lidoDragSelectedMap';\nexport const SelectedValuesKey = 'lidoSelectedValues';\nexport const ActivityScoreKey = 'lidoActivityScore';\nexport const ActivityEndKey = 'lidoActivityEnd';\nexport const LessonEndKey = 'lidoLessonEnd';\nexport const NextContainerKey = 'lidoNextContainer';\nexport const ActivityChangeKey = 'lidoActivityChange';\nexport const GameCompletedKey = 'lidoGameCompleted';\nexport const GameExitKey = 'lidoGameExit';\nexport const ElementDropKey = 'lidoElementDrop';\nexport const ElementClickKey = 'lidoElementClick';\n\nexport enum TraceMode {\n  NoFlow = 'lido-noFlow',\n  ShowFlow = 'lido-showFlow',\n  FreeTrace = 'lido-freeTrace',\n  BlindTracing = 'lido-blindTracing',\n  BlindFreeTrace = 'lido-blindFreeTrace',\n}\n\nexport default class GameScore{\n  rightMoves: number = 0;\n  wrongMoves: number = 0;\n  finalScore: number = 0;\n}\n","import { ActivityChangeKey, ActivityEndKey, ElementClickKey, ElementDropKey, GameCompletedKey, GameExitKey, LessonEndKey, NextContainerKey } from './constants';\n\nfunction dispatchCustomEvent(eventName: string, detail: any) {\n  const event = new CustomEvent(eventName, { detail });\n  window.dispatchEvent(event);\n}\n\nexport function dispatchActivityEndEvent(index: number, totalIndex: number, score: number) {\n  dispatchCustomEvent(ActivityEndKey, { index, totalIndex, score });\n}\n\nexport function dispatchLessonEndEvent(score: number) {\n  dispatchCustomEvent(LessonEndKey, { score });\n}\n\nexport function dispatchNextContainerEvent() {\n  dispatchCustomEvent(NextContainerKey, {});\n}\n\nexport function dispatchGameCompletedEvent() {\n  dispatchCustomEvent(GameCompletedKey, {});\n}\n\nexport function dispatchGameExitEvent() {\n  dispatchCustomEvent(GameExitKey, {});\n}\n\nexport function dispatchActivityChangeEvent(index: number) {\n  dispatchCustomEvent(ActivityChangeKey, { index });\n}\n\nexport function dispatchElementDropEvent(dragElement: HTMLElement, dropElement: HTMLElement, isCorrect: boolean) {\n  dispatchCustomEvent(ElementDropKey, { dragElement, dropElement, isCorrect: isCorrect, createdAt: new Date().toISOString() });\n}\n\nexport function dispatchClickEvent(element: HTMLElement, isCorrect: boolean) {\n  dispatchCustomEvent(ElementClickKey, { element, isCorrect: isCorrect, createdAt: new Date().toISOString() });\n}\n","import { ActivityScoreKey, DragSelectedMapKey, LessonEndKey, SelectedValuesKey } from './constants';\nimport { dispatchActivityEndEvent, dispatchClickEvent, dispatchElementDropEvent, dispatchLessonEndEvent, dispatchNextContainerEvent } from './customEvents';\nimport GameScore from './constants';\nconst gameScore = new GameScore();\n\nexport function format(first?: string, middle?: string, last?: string): string {\n  return (first || '') + (middle ? ` ${middle}` : '') + (last ? ` ${last}` : '');\n}\n\n// Function to get the scale of an element\nconst getElementScale = (el: HTMLElement): number => {\n  const transform = window.getComputedStyle(el).transform;\n  if (transform === 'none') {\n    return 1; // No scaling\n  } else {\n    const matrix = transform.match(/matrix\\(([^)]+)\\)/);\n    if (matrix) {\n      const matrixValues = matrix[1].split(', ');\n      const scaleX = parseFloat(matrixValues[0]);\n      return scaleX; // Assuming uniform scaling (same scale in X and Y)\n    }\n  }\n  return 1; // Fallback to no scaling\n};\n\nfunction enableDraggingWithScaling(element: HTMLElement): void {\n  let isDragging = false;\n  let startX = 0;\n  let startY = 0;\n  let initialX = 0;\n  let initialY = 0;\n\n  // Fetch the container element\n  const container = document.getElementById('lido-container');\n  if (!container) {\n    console.error(`Container with ID \"container\" not found.`);\n    return;\n  }\n\n  let verticalDistance;\n  let horizontalDistance;\n\n  const onStart = (event: MouseEvent | TouchEvent): void => {\n    removeHighlight(element);\n    isDragging = true;\n\n    if (event instanceof MouseEvent) {\n      startX = event.clientX;\n      startY = event.clientY;\n    } else {\n      startX = event.touches[0].clientX;\n      startY = event.touches[0].clientY;\n    }\n\n    // Apply dragging styles to the element\n    element.style.opacity = '0.8';\n    element.style.cursor = 'grabbing';\n\n    // Parse the current transform values at the start of each drag\n    const transform = window.getComputedStyle(element).transform;\n    if (transform !== 'none') {\n      const matrix = transform.match(/matrix\\(([^)]+)\\)/);\n      if (matrix) {\n        const matrixValues = matrix[1].split(', ');\n        initialX = parseFloat(matrixValues[4]);\n        initialY = parseFloat(matrixValues[5]);\n      }\n    } else {\n      initialX = 0;\n      initialY = 0;\n    }\n\n    const rect1 = container.getBoundingClientRect();\n    const rect2 = element.getBoundingClientRect();\n    verticalDistance = rect1.top - rect2.top;\n    horizontalDistance = rect1.left - rect2.left;\n\n    document.addEventListener('mousemove', onMove);\n    document.addEventListener('mouseup', onEnd);\n    document.addEventListener('touchmove', onMove);\n    document.addEventListener('touchend', onEnd);\n  };\n\n  const observer = new MutationObserver(mutationsList => {\n    for (const mutation of mutationsList) {\n      if (mutation.type === 'attributes' && mutation.attributeName === 'style') {\n        const rect1 = container.getBoundingClientRect();\n        const rect2 = element.getBoundingClientRect();\n        verticalDistance = rect1.top - rect2.top;\n        horizontalDistance = rect1.left - rect2.left;\n      }\n    }\n  });\n\n  // Configure the observer to watch for attribute changes\n  const observerConfig = {\n    attributes: true, // Monitor attribute changes\n    attributeFilter: ['style'], // Only observe changes to the 'style' attribute\n  };\n\n  // Start observing the element\n  observer.observe(container, observerConfig);\n\n  const onMove = (event: MouseEvent | TouchEvent): void => {\n    if (!isDragging) return;\n\n    const containerScale = getElementScale(container);\n\n    let dx = 0;\n    let dy = 0;\n\n    if (event instanceof MouseEvent) {\n      dx = (event.clientX - startX) / containerScale;\n      dy = (event.clientY - startY) / containerScale;\n    } else {\n      dx = (event.touches[0].clientX - startX) / containerScale;\n      dy = (event.touches[0].clientY - startY) / containerScale;\n    }\n\n    // Calculate the new position considering scaling\n    const newLeft = initialX + dx;\n    const newTop = initialY + dy;\n\n    // Get the dimensions and scale-corrected position of the container and element\n    const containerRect = container.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n\n    const numbers = element.style.transform.match(/-?\\d+(\\.\\d+)?/g);\n    const result = numbers.map(Number);\n    const initialElementLeftPx = elementRect.left / containerScale - result[0];\n    const initialElementTopPx = elementRect.top - result[1];\n\n    const maxRight = containerRect.width / containerScale - Math.abs(horizontalDistance / containerScale) - elementRect.width / containerScale;\n    const maxLeft = containerRect.left - initialElementLeftPx;\n    const maxTop = containerRect.top - initialElementTopPx;\n    const maxBottom = containerRect.height / containerScale - Math.abs(verticalDistance / containerScale) - elementRect.height / containerScale;\n\n    const newLeftClamp = newLeft + initialElementLeftPx <= containerRect.left ? maxLeft : Math.min(newLeft, maxRight);\n    const newTopClamp = newTop + initialElementTopPx <= containerRect.top ? maxTop : Math.min(newTop, maxBottom);\n\n    // Apply transform with translation within boundaries\n    element.style.transform = `translate(${newLeftClamp}px, ${newTopClamp}px)`;\n\n    // Check for overlaps and highlight only the most overlapping element\n    const allElements = document.querySelectorAll<HTMLElement>(\"[type='drop']\");\n    let mostOverlappedElement: HTMLElement | null = null;\n    let maxOverlapArea = 0;\n\n    allElements.forEach(otherElement => {\n      const otherRect = otherElement.getBoundingClientRect();\n\n      // Check if there is overlap\n      const overlapWidth = Math.max(0, Math.min(elementRect.right, otherRect.right) - Math.max(elementRect.left, otherRect.left));\n      const overlapHeight = Math.max(0, Math.min(elementRect.bottom, otherRect.bottom) - Math.max(elementRect.top, otherRect.top));\n      const overlapArea = overlapWidth * overlapHeight;\n\n      // Update the most overlapped element if this one has a larger overlap area\n      if (overlapArea > maxOverlapArea) {\n        maxOverlapArea = overlapArea;\n        mostOverlappedElement = otherElement;\n      }\n    });\n\n    // Reset styles for all elements\n    allElements.forEach(otherElement => {\n      otherElement.style.border = ''; // Reset border\n      otherElement.style.backgroundColor = ''; // Reset background color\n    });\n\n    // Apply styles only to the most overlapped element\n    if (mostOverlappedElement) {\n      mostOverlappedElement.style.border = '2px dashed #ff0000'; // Red dashed border\n      mostOverlappedElement.style.backgroundColor = 'rgba(255, 0, 0, 0.1)'; // Light red background\n    }\n  };\n\n  const onEnd = (endEv): void => {\n    isDragging = false;\n    document.removeEventListener('mousemove', onMove);\n    document.removeEventListener('mouseup', onEnd);\n    document.removeEventListener('touchmove', onMove);\n    document.removeEventListener('touchend', onEnd);\n\n    // Reset styles when dragging ends\n    element.style.opacity = '';\n    element.style.cursor = 'move';\n\n    // Reset overlapping styles from all elements\n    const allElements = document.querySelectorAll<HTMLElement>(\"[type='drop']\");\n    allElements.forEach(otherElement => {\n      otherElement.style.border = ''; // Reset border\n      otherElement.style.backgroundColor = ''; // Reset background color\n    });\n\n    // Check for overlaps and log the most overlapping element\n    const elementRect = element.getBoundingClientRect();\n    let mostOverlappedElement: HTMLElement | null = null;\n    let maxOverlapArea = 0;\n\n    allElements.forEach(otherElement => {\n      const otherRect = otherElement.getBoundingClientRect();\n\n      // Calculate overlap\n      const overlapWidth = Math.max(0, Math.min(elementRect.right, otherRect.right) - Math.max(elementRect.left, otherRect.left));\n      const overlapHeight = Math.max(0, Math.min(elementRect.bottom, otherRect.bottom) - Math.max(elementRect.top, otherRect.top));\n      const overlapArea = overlapWidth * overlapHeight;\n\n      // Update the most overlapped element if this one has a larger overlap area\n      if (overlapArea > maxOverlapArea) {\n        maxOverlapArea = overlapArea;\n        mostOverlappedElement = otherElement;\n      }\n    });\n\n    onElementDropComplete(element, mostOverlappedElement);\n  };\n  // Initialize draggable element styles\n  element.style.cursor = 'move';\n  element.style.transform = 'translate(0, 0)'; // Initialize transform for consistent dragging\n\n  element.addEventListener('mousedown', onStart);\n  element.addEventListener('touchstart', onStart);\n  element.addEventListener('click', ev => {\n    onClickDropOrDragElement(element, 'drag');\n  });\n}\n\nasync function onElementDropComplete(dragElement: HTMLElement, dropElement: HTMLElement): Promise<void> {\n  if (!dropElement) {\n    const selectedValueData = localStorage.getItem(SelectedValuesKey);\n    const dragSelectedData = localStorage.getItem(DragSelectedMapKey);\n    if (selectedValueData) {\n      let selectedValue = JSON.parse(selectedValueData);\n      selectedValue = selectedValue.filter(value => value != dragElement['value']);\n      localStorage.setItem(SelectedValuesKey, JSON.stringify(selectedValue));\n    }\n    if (dragSelectedData) {\n      let dragSelected = JSON.parse(dragSelectedData);\n      const dropIndex = dragElement.parentElement.getAttribute('tabIndex');\n      if (dropIndex && dragSelected.hasOwnProperty(dropIndex)) {\n        delete dragSelected[dropIndex];\n      }\n      localStorage.setItem(DragSelectedMapKey, JSON.stringify(dragSelected));\n    }\n    handleShowCheck();\n    return;\n  }\n\n  // Add pulse and highlight effect for a successful match\n  const isCorrect = matchStringPattern(dropElement['value'], [dragElement['value']]);\n  dispatchElementDropEvent(dragElement, dropElement, isCorrect);\n  if (isCorrect) {\n    // Perform actions if onMatch is defined\n    const onCorrect = dropElement.getAttribute('onCorrect');\n    if (onCorrect) {\n      await executeActions(onCorrect, dropElement, dragElement);\n    }\n  } else {\n    const onInCorrect = dropElement.getAttribute('onInCorrect');\n\n    await executeActions(onInCorrect, dropElement, dragElement);\n\n    // showWrongAnswerAnimation([dropElement, dragElement]);\n  }\n  storingEachActivityScore(isCorrect);\n  await onActivityComplete(dragElement, dropElement);\n}\n\n// Function to execute actions parsed from the onMatch string\nconst executeActions = async (actionsString: string, thisElement: HTMLElement, element?: HTMLElement): Promise<void> => {\n  const actions = parseActions(actionsString);\n\n  for (let i = 0; i < actions.length; i++) {\n    const action = actions[i];\n    const targetElement = action.actor === 'this' ? thisElement : action.actor === 'element' ? element : document.getElementById(action.actor);\n\n    if (targetElement) {\n      // Handle the 'transform' property separately\n      switch (action.action) {\n        case 'transform': {\n          const currentTransform = window.getComputedStyle(targetElement).transform;\n          targetElement.style.transform = currentTransform !== 'none' ? `${currentTransform} ${action.value}` : action.value;\n          break;\n        }\n        case 'alignMatch': {\n          const dropElement = targetElement;\n          const dragElement = element;\n\n          const container = document.getElementById('lido-container');\n          const containerScale = getElementScale(container); \n          const containerRect = container.getBoundingClientRect();\n          const dropRect = dropElement.getBoundingClientRect();\n\n          const scaledLeft = (dropRect.left - containerRect.left) / containerScale;\n          const scaledTop = (dropRect.top - containerRect.top) / containerScale;\n\n          dragElement.style.position = 'fixed'; \n          dragElement.style.left = `${scaledLeft}px`;\n          dragElement.style.top = `${scaledTop}px`;\n          dragElement.style.transform = `translate(0px, 0px)`;\n          break;\n        }\n        case 'addClass': {\n          targetElement.classList.add(action.value);\n          break;\n        }\n        case 'speak': {\n          {\n            let audioUrl = targetElement.getAttribute('audio');\n            if (audioUrl) {\n              audioUrl = convertUrlToRelative(audioUrl);\n              let audioElement = document.getElementById('audio') as HTMLAudioElement;\n              if (!audioElement) {\n                const newAudio = document.createElement('audio');\n                newAudio.id = 'audio';\n                document.body.appendChild(newAudio);\n                audioElement = newAudio;\n              }\n\n              audioElement.pause();\n              audioElement.currentTime = 0;\n              audioElement.src = audioUrl;\n              console.log('🚀 ~ executeActions ~ audioElement.src:', audioElement.src);\n\n              try {\n                await audioElement.play();\n                highlightSpeakingElement(targetElement);\n                while (!audioElement.ended || audioElement.error) {\n                  await new Promise(resolve => setTimeout(resolve, 100));\n                }\n                stopHighlightForSpeakingElement(targetElement);\n              } catch (error) {\n                console.log('🚀 ~ executeActions ~ audioElement.src: error', error);\n              }\n            }\n            break;\n          }\n        }\n\n        case 'sleep': {\n          const isNumber = !isNaN(Number(action.value));\n          if (isNumber) {\n            await new Promise(resolve => setTimeout(resolve, Number(action.value)));\n          }\n          break;\n        }\n\n        default: {\n          targetElement.style[action.action] = action.value;\n          break;\n        }\n      }\n    }\n  }\n};\n\n// Function to parse actions string\nconst parseActions = (input: string): Array<{ actor: string; action: string; value: string }> => {\n  const actions = [];\n  if (!input) return actions;\n  const actionStrings = input.split(';')?.map(action => action.trim());\n\n  actionStrings.forEach(actionString => {\n    if (actionString) {\n      const [actorAction, value] = actionString.split('=').map(part => part.trim());\n      const lastDotIndex = actorAction.lastIndexOf('.');\n      if (lastDotIndex !== -1) {\n        const actor = actorAction.substring(0, lastDotIndex).trim();\n        const action = actorAction.substring(lastDotIndex + 1).trim();\n        actions.push({ actor, action, value: value.replace(/['\"]/g, '') });\n      }\n    }\n  });\n\n  return actions;\n};\n\nconst matchStringPattern = (pattern: string, arr: string[]): boolean => {\n  const patternGroups = pattern.split(',').map(group => group.trim());\n\n  let arrIndex = 0;\n  let options = new Set<string>();\n\n  for (const group of patternGroups) {\n    if (group.startsWith('(') && group.endsWith(')')) {\n      // Inside parentheses: '|' acts like \"OR\" condition\n      const choices = group\n        .slice(1, -1)\n        .split('|')\n        .map(option => option.trim());\n\n      if (arrIndex >= arr.length) return false;\n\n      if (!choices.includes(arr[arrIndex])) return false;\n\n      arrIndex++;\n    } else if (group.includes('|')) {\n      // Outside parentheses: '|' acts as optional order\n      const choices = group.split('|').map(option => option.trim());\n\n      for (const choice of choices) {\n        options.add(choice);\n      }\n    } else {\n      // Exact match required\n      if (arrIndex >= arr.length || arr[arrIndex] !== group) return false;\n\n      arrIndex++;\n    }\n  }\n\n  // Validate the optional ordered items against the remaining array elements\n  while (arrIndex < arr.length) {\n    if (!options.has(arr[arrIndex])) {\n      return false;\n    }\n    options.delete(arr[arrIndex]);\n    arrIndex++;\n  }\n\n  return arrIndex === arr.length;\n};\n\nconst countPatternWords = (pattern: string): number => {\n  const patternGroups = pattern.split(',').map(group => group.trim());\n\n  let wordCount = 0;\n\n  for (const group of patternGroups) {\n    if (group.startsWith('(') && group.endsWith(')')) {\n      wordCount += 1;\n    } else {\n      wordCount += group.split('|').length;\n    }\n  }\n\n  return wordCount;\n};\n\nasync function onActivityComplete(dragElement?: HTMLElement, dropElement?: HTMLElement) {\n  const container = document.getElementById('lido-container');\n  if (!container) return;\n\n  const isAllowOnlyCorrect = container.getAttribute('isAllowOnlyCorrect') === 'true';\n  if (isAllowOnlyCorrect) {\n    const isCorrect = matchStringPattern(dropElement['value'], [dragElement['value']]);\n    if (!isCorrect) {\n      dragElement.style.transform = 'translate(0,0)';\n      return;\n    }\n  }\n\n  await executeActions(\"this.alignMatch='true'\", dropElement, dragElement);\n\n  let dragScore = JSON.parse(localStorage.getItem(DragSelectedMapKey) ?? '{}');\n  if (!dragScore[dropElement.getAttribute('tabindex')]) {\n    dragScore[dropElement.getAttribute('tabindex')] = [];\n  }\n\n  // dragScore[mostOverlappedElement.getAttribute('tabindex')].push(element['value']);\n  dragScore[dropElement.getAttribute('tabindex')] = [dragElement['value']];\n\n  localStorage.setItem(DragSelectedMapKey, JSON.stringify(dragScore));\n  const sortedKeys = Object.keys(dragScore).sort((a, b) => parseInt(a) - parseInt(b));\n  const sortedValues = sortedKeys.reduce((acc, key) => acc.concat(dragScore[key]), []);\n  localStorage.setItem(SelectedValuesKey, JSON.stringify(sortedValues));\n\n  handleShowCheck();\n}\n\nconst storingEachActivityScore = (flag: boolean) => {\n  if (flag) {\n    gameScore.rightMoves += 1;\n  } else {\n    gameScore.wrongMoves += 1;\n  }\n  console.log('Right Moves : ', gameScore.rightMoves);\n  console.log('Wrong Moves : ', gameScore.wrongMoves);\n};\n\nconst calculateScore = () => {\n  const rightMoves = gameScore.rightMoves;\n  const wrongMoves = gameScore.wrongMoves;\n  let finalScore = Math.floor((rightMoves / (rightMoves + wrongMoves)) * 100);\n  storeActivityScore(finalScore);\n  gameScore.rightMoves = 0;\n  gameScore.wrongMoves = 0;\n};\n\nconst storeActivityScore = (score: number) => {\n  const appHome = document.querySelector('lido-home');\n  if (!appHome) return;\n  const index = Number(appHome.getAttribute('index') ?? 0);\n  const totalIndex = Number(appHome.getAttribute('totalIndex') ?? 0);\n\n  const activityScore = JSON.parse(localStorage.getItem(ActivityScoreKey) ?? '{}');\n  const activityScoreKey = index.toString();\n  activityScore[activityScoreKey] = score;\n\n  //send Custom Event to parent\n  // window.dispatchEvent(new CustomEvent(ActivityEndKey, { detail: { index: index, totalIndex: totalIndex, score: score } }));\n  dispatchActivityEndEvent(index, totalIndex, score);\n\n  localStorage.setItem(ActivityScoreKey, JSON.stringify(activityScore));\n  if (totalIndex - 1 == index) {\n    const scoresArray: number[] = Object.values(activityScore);\n    const finalScore = scoresArray.reduce((acc, cur) => acc + cur, 0) / scoresArray.length;\n    gameScore.finalScore = Math.floor(finalScore);\n    console.log(\"Total Score : \",gameScore.finalScore);\n    // window.dispatchEvent(new CustomEvent(LessonEndKey, { detail: { score: finalScore } }));\n    dispatchLessonEndEvent(finalScore);\n    localStorage.removeItem(ActivityScoreKey);\n  }\n};\n\nconst handleShowCheck = () => {\n  const container = document.getElementById('lido-container');\n  const objectiveString = container['objective'];\n  const selectValues = JSON.parse(localStorage.getItem(SelectedValuesKey) ?? '[]');\n\n  const checkButton = document.getElementById('lido-checkButton');\n\n  if (!selectValues || selectValues.length !== countPatternWords(objectiveString)) {\n    executeActions(\"this.addClass='disable-check-button'\", checkButton);\n    return;\n  }\n\n  const showCheck = container.getAttribute('showCheck') == 'true';\n\n  if (showCheck) {\n    checkButton.classList.remove('lido-disable-check-button');\n  } else {\n    validateObjectiveStatus();\n  }\n};\n\nconst validateObjectiveStatus = async () => {\n  const container = document.getElementById('lido-container');\n  if (!container) return;\n  const objectiveString = container['objective'];\n  const objectiveArray = JSON.parse(localStorage.getItem(SelectedValuesKey) ?? '[]');\n  const res = matchStringPattern(objectiveString, objectiveArray);\n\n  if (res) {\n    appendingDragElementsInDrop();\n    const onCorrect = container.getAttribute('onCorrect');\n    if (onCorrect) {\n      await executeActions(onCorrect, container);\n    }\n    triggerNextContainer();\n  } else {\n    const onInCorrect = container.getAttribute('onInCorrect');\n    await executeActions(onInCorrect, container);\n    const isContinueOnCorrect = container.getAttribute('isContinueOnCorrect') === 'true';\n    if (!isContinueOnCorrect) {\n      triggerNextContainer();\n    }\n  }\n  await calculateScore();\n};\n\nconst appendingDragElementsInDrop = () => {\n  const dragItems = document.querySelectorAll(\"[type='drag']\");\n    const dropItems = document.querySelectorAll(\"[type='drop']\");\n    dropItems.forEach(drop => {\n      dragItems.forEach(dragElement => {\n        const drag = dragElement as HTMLElement;\n        if(drag['value'] === drop['value']){\n          drag.style.position = \"unset\";\n          drop.appendChild(drag);\n        }\n      })\n    })\n}\n\nexport const triggerNextContainer = () => {\n  // const event = new CustomEvent('nextContainer');\n  console.log('🚀 ~ triggerNextContainer ~ event:', event);\n  // window.dispatchEvent(event);\n  dispatchNextContainerEvent();\n};\n\nexport const initEventsForElement = async (element: HTMLElement, type: string) => {\n  const container = document.getElementById('lido-container');\n  if (!container) return;\n  const canplay = container.getAttribute('canplay');\n  if (canplay != null && canplay === 'false') return;\n  switch (type) {\n    case 'drag': {\n      enableDraggingWithScaling(element);\n      break;\n    }\n    case 'click': {\n      addClickListenerForClickType(element);\n      break;\n    }\n    case 'drop': {\n      handleDropElement(element);\n      break;\n    }\n    default:\n      break;\n  }\n  const onEntry = element.getAttribute('onEntry');\n  await executeActions(onEntry, element);\n\n  onTouchListenerForOnTouch(element);\n};\n\nfunction onTouchListenerForOnTouch(element: HTMLElement) {\n  if (!element) return;\n  const onTouch = element.getAttribute('onTouch');\n  if (!onTouch) return;\n  element.onclick = async () => {\n    console.log('🚀 ~ element.onclick= ~ onTouch:', onTouch);\n    if (!onTouch) return;\n    await executeActions(onTouch, element);\n  };\n}\n\nfunction addClickListenerForClickType(element: HTMLElement): void {\n  element.style.cursor = 'pointer';\n  if (!element) {\n    console.error('No element provided.');\n    return;\n  }\n\n  const onClick = async () => {\n    const container = document.getElementById('lido-container');\n    if (element.getAttribute('id') == 'lido-checkButton') {\n      validateObjectiveStatus();\n      return;\n    }\n\n    localStorage.setItem(SelectedValuesKey, JSON.stringify([element['value']]));\n    element.style.border = '2px solid yellow';\n    element.style.boxShadow = '0px 0px 10px rgba(255, 255, 0, 0.7)';\n\n    element.style.transition = 'transform 0.2s ease, border 0.5s ease';\n    element.style.transform = 'scale(1.1)';\n\n    element.style.transform = 'scale(1)';\n    element.style.border = '';\n    element.style.boxShadow = '';\n\n    const objective = container['objective'];\n\n    const isCorrect = matchStringPattern(objective, [element['value']]);\n    dispatchClickEvent(element, isCorrect);\n    if (isCorrect) {\n      const onCorrect = element.getAttribute('onCorrect');\n      await executeActions(onCorrect, element);\n    } else {\n      const onInCorrect = element.getAttribute('onInCorrect');\n      await executeActions(onInCorrect, element);\n\n      // showWrongAnswerAnimation([element]);\n    }\n    storingEachActivityScore(isCorrect);\n    handleShowCheck();\n  };\n  element.addEventListener('click', onClick);\n}\n\nexport function showWrongAnswerAnimation(elements: HTMLElement[]): void {\n  const styleId = 'wrong-answer-animation-style';\n\n  executeActions(\"tryAgain.speak='true'\", document.getElementById('tryAgain'));\n\n  // Check if the style is already added, if not, add it\n  if (!document.getElementById(styleId)) {\n    const style = document.createElement('style');\n    style.id = styleId;\n    style.innerHTML = `\n          @keyframes enhanced-shake {\n              0% { left: 0; }\n              10% { left: -8px; }\n              20% { left: 8px; }\n              30% { left: -8px; }\n              40% { left: 8px; }\n              50% { left: -6px; }\n              60% { left: 6px; }\n              70% { left: -4px; }\n              80% { left: 4px; }\n              90% { left: -2px; }\n              100% { left: 0; }\n          }\n\n          \n          .wrong-answer {\n              position: relative; /* Enable relative positioning to move the element */\n              animation: enhanced-shake 0.6s cubic-bezier(0.36, 0.07, 0.19, 0.97);\n              background-color: #ffdddd; /* Flash red background to indicate wrong answer */\n              box-shadow: 0 0 10px rgba(255, 0, 0, 0.5); /* Subtle red shadow */\n\n              border: 4px solid red;\n          }\n\n          \n      `;\n\n    document.head.appendChild(style);\n  }\n\n  elements.forEach(element => {\n    // Add the class to trigger the animation\n    element.classList.add('wrong-answer');\n\n    // Remove the class after the animation ends to reset the element\n    element.addEventListener(\n      'animationend',\n      () => {\n        element.classList.remove('wrong-answer');\n      },\n      { once: true },\n    );\n  });\n}\n\nfunction handleDropElement(element: HTMLElement): void {\n  element.onclick = () => {\n    onClickDropOrDragElement(element, 'drop');\n  };\n}\n\nasync function onClickDropOrDragElement(element: HTMLElement, type: 'drop' | 'drag'): Promise<void> {\n  // Remove the highlight class from elements matching the selector\n  const highlightedElements = document.querySelectorAll(`[type='${type}']`);\n\n  highlightedElements.forEach(el => {\n    removeHighlight(el as HTMLElement);\n  });\n\n  // Dynamically create the highlight class if it doesn't exist\n  if (!document.getElementById('dynamic-highlight-style')) {\n    const style = document.createElement('style');\n    style.id = 'dynamic-highlight-style';\n    style.innerHTML = `\n      .highlight {\n        border: 4px solid #e74c3c; /* Thicker red border for more visibility */\n        border-radius: 12px; /* Larger rounded corners */\n        background-color: rgba(231, 76, 60, 0.3); /* Stronger, more noticeable background */\n        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2), 0 12px 40px rgba(0, 0, 0, 0.2); /* Stronger shadow */\n        outline: 4px solid rgba(231, 76, 60, 0.6); /* Glow effect */\n      }\n    `;\n\n    document.head.appendChild(style);\n  }\n\n  element?.classList.add('highlight');\n  element.ariaPressed = 'true';\n\n  const selectedDropElement: HTMLElement = type === 'drop' ? element : document.querySelector(\"[type='drop'].highlight\");\n  const selectedDragElement: HTMLElement = type === 'drag' ? element : document.querySelector(\"[type='drag'].highlight\");\n\n  if (selectedDropElement && selectedDragElement) {\n    // Add a transition for a smooth, slower movement\n    (selectedDragElement as HTMLElement).style.transition = 'transform 0.5s ease'; // 0.5s for a slower move\n\n    // Reset the transform of the drag element before calculating the new position\n    (selectedDragElement as HTMLElement).style.transform = '';\n    const container = document.getElementById('lido-container');\n\n    const containerScale = getElementScale(container);\n    console.log('🚀 ~ onClickDropOrDragElement ~ containerScale:', containerScale);\n\n    // Get the positions of the drop and drag elements\n    const dropRect = selectedDropElement.getBoundingClientRect();\n    const dragRect = selectedDragElement.getBoundingClientRect();\n\n    // Calculate the difference in positions\n    const translateX = (dropRect.left - dragRect.left) / containerScale;\n    const translateY = (dropRect.top - dragRect.top) / containerScale;\n\n    // Move the drag element to the drop position\n    selectedDragElement.style.transform = `translate(${translateX}px, ${translateY}px)`;\n\n    // Remove highlights after moving the element\n    const allElements = document.querySelectorAll(`*`);\n    allElements.forEach(el => {\n      removeHighlight(el as HTMLElement);\n    });\n\n    await new Promise(resolve => setTimeout(resolve, 500));\n    await onElementDropComplete(selectedDragElement, selectedDropElement);\n    await new Promise(resolve => setTimeout(resolve, 500));\n    selectedDragElement.style.transform = 'translate(0px, 0px)';\n  }\n}\n\nfunction removeHighlight(element: HTMLElement): void {\n  element.classList.remove('highlight');\n  element.ariaPressed = 'false';\n}\n\n// Function to highlight the speaking element\nfunction highlightSpeakingElement(element: HTMLElement): void {\n  if (!element) return;\n\n  // Add a custom class for highlighting\n  element.classList.add('speaking-highlight');\n\n  // Inject keyframe animation and class styles into the document's head if it doesn't already exist\n  const styleId = 'speaking-highlight-style';\n  if (!document.getElementById(styleId)) {\n    const style = document.createElement('style');\n    style.id = styleId;\n    style.innerHTML = `\n      .speaking-highlight {\n        box-shadow: 0 0 20px 10px rgba(255, 165, 0, 0.9); /* Stronger orange glow effect */\n        border: 3px solid orange;\n        transition: box-shadow 0.5s ease-in-out, transform 0.5s ease-in-out;\n        transform: scale(1.05); /* Subtle scale effect to pop the element */\n        animation: pulseEffect 1.5s infinite; /* Pulsing animation */\n      }\n\n      @keyframes pulseEffect {\n        0% {\n          box-shadow: 0 0 20px 10px rgba(255, 165, 0, 0.9);\n          transform: scale(1.05);\n        }\n        50% {\n          box-shadow: 0 0 30px 15px rgba(255, 165, 0, 1);\n          transform: scale(1.1);\n        }\n        100% {\n          box-shadow: 0 0 20px 10px rgba(255, 165, 0, 0.9);\n          transform: scale(1.05);\n        }\n      }\n    `;\n    document.head.appendChild(style);\n  }\n}\n\n// Function to stop highlighting\nfunction stopHighlightForSpeakingElement(element: HTMLElement): void {\n  if (!element) return;\n\n  // Remove the custom class for highlighting\n  element.classList.remove('speaking-highlight');\n\n  // Remove inline styles\n  element.style.boxShadow = '';\n  element.style.border = '';\n}\n\nexport function convertUrlToRelative(url: string): string {\n  //check if url is web\n  if (url.startsWith('http')) {\n    return url;\n  }\n  const container = document.getElementById('lido-container');\n  if (!container) return url;\n  const baseUrl = container.getAttribute('baseUrl');\n  if (!baseUrl) return url;\n  return baseUrl + url;\n}\n"],"mappings":"MAAaA,EAAqB,sB,MACrBC,EAAoB,qBAC1B,MAAMC,EAAmB,oBACzB,MAAMC,EAAiB,kBACvB,MAAMC,EAAe,gB,MACfC,EAAmB,oBACzB,MAAMC,EAAoB,qBAC1B,MAAMC,EAAmB,oBAEzB,MAAMC,EAAiB,kBACvB,MAAMC,EAAkB,mB,IAEnBC,GAAZ,SAAYA,GACVA,EAAA,wBACAA,EAAA,4BACAA,EAAA,8BACAA,EAAA,oCACAA,EAAA,uCACD,EAND,CAAYA,MAAS,K,MAQAC,EAArB,WAAAC,GACEC,KAAAC,WAAqB,EACrBD,KAAAE,WAAqB,EACrBF,KAAAG,WAAqB,C,ECrBvB,SAASC,EAAoBC,EAAmBC,GAC9C,MAAMC,EAAQ,IAAIC,YAAYH,EAAW,CAAEC,WAC3CG,OAAOC,cAAcH,EACvB,C,SAEgBI,EAAyBC,EAAeC,EAAoBC,GAC1EV,EAAoBd,EAAgB,CAAEsB,QAAOC,aAAYC,SAC3D,C,SAEgBC,EAAuBD,GACrCV,EAAoBb,EAAc,CAAEuB,SACtC,C,SAEgBE,IACdZ,EAAoBZ,EAAkB,GACxC,C,SAEgByB,IACdb,EAAoBV,EAAkB,GACxC,C,SAMgBwB,EAA4BN,GAC1CR,EAAoBX,EAAmB,CAAEmB,SAC3C,C,SAEgBO,EAAyBC,EAA0BC,EAA0BC,GAC3FlB,EAAoBT,EAAgB,CAAEyB,cAAaC,cAAaC,UAAWA,EAAWC,WAAW,IAAIC,MAAOC,eAC9G,C,SAEgBC,EAAmBC,EAAsBL,GACvDlB,EAAoBR,EAAiB,CAAE+B,UAASL,UAAWA,EAAWC,WAAW,IAAIC,MAAOC,eAC9F,CClCA,MAAMG,EAAY,IAAI9B,E,SAEN+B,EAAOC,EAAgBC,EAAiBC,GACtD,OAAQF,GAAS,KAAOC,EAAS,IAAIA,IAAW,KAAOC,EAAO,IAAIA,IAAS,GAC7E,CAGA,MAAMC,EAAmBC,IACvB,MAAMC,EAAY1B,OAAO2B,iBAAiBF,GAAIC,UAC9C,GAAIA,IAAc,OAAQ,CACxB,OAAO,C,KACF,CACL,MAAME,EAASF,EAAUG,MAAM,qBAC/B,GAAID,EAAQ,CACV,MAAME,EAAeF,EAAO,GAAGG,MAAM,MACrC,MAAMC,EAASC,WAAWH,EAAa,IACvC,OAAOE,C,EAGX,OAAO,CAAC,EAGV,SAASE,EAA0BhB,GACjC,IAAIiB,EAAa,MACjB,IAAIC,EAAS,EACb,IAAIC,EAAS,EACb,IAAIC,EAAW,EACf,IAAIC,EAAW,EAGf,MAAMC,EAAYC,SAASC,eAAe,kBAC1C,IAAKF,EAAW,CACdG,QAAQC,MAAM,4CACd,M,CAGF,IAAIC,EACJ,IAAIC,EAEJ,MAAMC,EAAWjD,IACfkD,EAAgB9B,GAChBiB,EAAa,KAEb,GAAIrC,aAAiBmD,WAAY,CAC/Bb,EAAStC,EAAMoD,QACfb,EAASvC,EAAMqD,O,KACV,CACLf,EAAStC,EAAMsD,QAAQ,GAAGF,QAC1Bb,EAASvC,EAAMsD,QAAQ,GAAGD,O,CAI5BjC,EAAQmC,MAAMC,QAAU,MACxBpC,EAAQmC,MAAME,OAAS,WAGvB,MAAM7B,EAAY1B,OAAO2B,iBAAiBT,GAASQ,UACnD,GAAIA,IAAc,OAAQ,CACxB,MAAME,EAASF,EAAUG,MAAM,qBAC/B,GAAID,EAAQ,CACV,MAAME,EAAeF,EAAO,GAAGG,MAAM,MACrCO,EAAWL,WAAWH,EAAa,IACnCS,EAAWN,WAAWH,EAAa,G,MAEhC,CACLQ,EAAW,EACXC,EAAW,C,CAGb,MAAMiB,EAAQhB,EAAUiB,wBACxB,MAAMC,EAAQxC,EAAQuC,wBACtBZ,EAAmBW,EAAMG,IAAMD,EAAMC,IACrCb,EAAqBU,EAAMI,KAAOF,EAAME,KAExCnB,SAASoB,iBAAiB,YAAaC,GACvCrB,SAASoB,iBAAiB,UAAWE,GACrCtB,SAASoB,iBAAiB,YAAaC,GACvCrB,SAASoB,iBAAiB,WAAYE,EAAM,EAG9C,MAAMC,EAAW,IAAIC,kBAAiBC,IACpC,IAAK,MAAMC,KAAYD,EAAe,CACpC,GAAIC,EAASC,OAAS,cAAgBD,EAASE,gBAAkB,QAAS,CACxE,MAAMb,EAAQhB,EAAUiB,wBACxB,MAAMC,EAAQxC,EAAQuC,wBACtBZ,EAAmBW,EAAMG,IAAMD,EAAMC,IACrCb,EAAqBU,EAAMI,KAAOF,EAAME,I,MAM9C,MAAMU,EAAiB,CACrBC,WAAY,KACZC,gBAAiB,CAAC,UAIpBR,EAASS,QAAQjC,EAAW8B,GAE5B,MAAMR,EAAUhE,IACd,IAAKqC,EAAY,OAEjB,MAAMuC,EAAiBlD,EAAgBgB,GAEvC,IAAImC,EAAK,EACT,IAAIC,EAAK,EAET,GAAI9E,aAAiBmD,WAAY,CAC/B0B,GAAM7E,EAAMoD,QAAUd,GAAUsC,EAChCE,GAAM9E,EAAMqD,QAAUd,GAAUqC,C,KAC3B,CACLC,GAAM7E,EAAMsD,QAAQ,GAAGF,QAAUd,GAAUsC,EAC3CE,GAAM9E,EAAMsD,QAAQ,GAAGD,QAAUd,GAAUqC,C,CAI7C,MAAMG,EAAUvC,EAAWqC,EAC3B,MAAMG,EAASvC,EAAWqC,EAG1B,MAAMG,EAAgBvC,EAAUiB,wBAChC,MAAMuB,EAAc9D,EAAQuC,wBAE5B,MAAMwB,EAAU/D,EAAQmC,MAAM3B,UAAUG,MAAM,kBAC9C,MAAMqD,EAASD,EAAQE,IAAIC,QAC3B,MAAMC,EAAuBL,EAAYpB,KAAOc,EAAiBQ,EAAO,GACxE,MAAMI,EAAsBN,EAAYrB,IAAMuB,EAAO,GAErD,MAAMK,EAAWR,EAAcS,MAAQd,EAAiBe,KAAKC,IAAI5C,EAAqB4B,GAAkBM,EAAYQ,MAAQd,EAC5H,MAAMiB,EAAUZ,EAAcnB,KAAOyB,EACrC,MAAMO,EAASb,EAAcpB,IAAM2B,EACnC,MAAMO,EAAYd,EAAce,OAASpB,EAAiBe,KAAKC,IAAI7C,EAAmB6B,GAAkBM,EAAYc,OAASpB,EAE7H,MAAMqB,EAAelB,EAAUQ,GAAwBN,EAAcnB,KAAO+B,EAAUF,KAAKO,IAAInB,EAASU,GACxG,MAAMU,EAAcnB,EAASQ,GAAuBP,EAAcpB,IAAMiC,EAASH,KAAKO,IAAIlB,EAAQe,GAGlG3E,EAAQmC,MAAM3B,UAAY,aAAaqE,QAAmBE,OAG1D,MAAMC,EAAczD,SAAS0D,iBAA8B,iBAC3D,IAAIC,EAA4C,KAChD,IAAIC,EAAiB,EAErBH,EAAYI,SAAQC,IAClB,MAAMC,EAAYD,EAAa9C,wBAG/B,MAAMgD,EAAehB,KAAKiB,IAAI,EAAGjB,KAAKO,IAAIhB,EAAY2B,MAAOH,EAAUG,OAASlB,KAAKiB,IAAI1B,EAAYpB,KAAM4C,EAAU5C,OACrH,MAAMgD,EAAgBnB,KAAKiB,IAAI,EAAGjB,KAAKO,IAAIhB,EAAY6B,OAAQL,EAAUK,QAAUpB,KAAKiB,IAAI1B,EAAYrB,IAAK6C,EAAU7C,MACvH,MAAMmD,EAAcL,EAAeG,EAGnC,GAAIE,EAAcT,EAAgB,CAChCA,EAAiBS,EACjBV,EAAwBG,C,KAK5BL,EAAYI,SAAQC,IAClBA,EAAalD,MAAM0D,OAAS,GAC5BR,EAAalD,MAAM2D,gBAAkB,EAAE,IAIzC,GAAIZ,EAAuB,CACzBA,EAAsB/C,MAAM0D,OAAS,qBACrCX,EAAsB/C,MAAM2D,gBAAkB,sB,GAIlD,MAAMjD,EAASkD,IACb9E,EAAa,MACbM,SAASyE,oBAAoB,YAAapD,GAC1CrB,SAASyE,oBAAoB,UAAWnD,GACxCtB,SAASyE,oBAAoB,YAAapD,GAC1CrB,SAASyE,oBAAoB,WAAYnD,GAGzC7C,EAAQmC,MAAMC,QAAU,GACxBpC,EAAQmC,MAAME,OAAS,OAGvB,MAAM2C,EAAczD,SAAS0D,iBAA8B,iBAC3DD,EAAYI,SAAQC,IAClBA,EAAalD,MAAM0D,OAAS,GAC5BR,EAAalD,MAAM2D,gBAAkB,EAAE,IAIzC,MAAMhC,EAAc9D,EAAQuC,wBAC5B,IAAI2C,EAA4C,KAChD,IAAIC,EAAiB,EAErBH,EAAYI,SAAQC,IAClB,MAAMC,EAAYD,EAAa9C,wBAG/B,MAAMgD,EAAehB,KAAKiB,IAAI,EAAGjB,KAAKO,IAAIhB,EAAY2B,MAAOH,EAAUG,OAASlB,KAAKiB,IAAI1B,EAAYpB,KAAM4C,EAAU5C,OACrH,MAAMgD,EAAgBnB,KAAKiB,IAAI,EAAGjB,KAAKO,IAAIhB,EAAY6B,OAAQL,EAAUK,QAAUpB,KAAKiB,IAAI1B,EAAYrB,IAAK6C,EAAU7C,MACvH,MAAMmD,EAAcL,EAAeG,EAGnC,GAAIE,EAAcT,EAAgB,CAChCA,EAAiBS,EACjBV,EAAwBG,C,KAI5BY,EAAsBjG,EAASkF,EAAsB,EAGvDlF,EAAQmC,MAAME,OAAS,OACvBrC,EAAQmC,MAAM3B,UAAY,kBAE1BR,EAAQ2C,iBAAiB,YAAad,GACtC7B,EAAQ2C,iBAAiB,aAAcd,GACvC7B,EAAQ2C,iBAAiB,SAASuD,IAChCC,EAAyBnG,EAAS,OAAO,GAE7C,CAEAoG,eAAeH,EAAsBxG,EAA0BC,GAC7D,IAAKA,EAAa,CAChB,MAAM2G,EAAoBC,aAAaC,QAAQ9I,GAC/C,MAAM+I,EAAmBF,aAAaC,QAAQ/I,GAC9C,GAAI6I,EAAmB,CACrB,IAAII,EAAgBC,KAAKC,MAAMN,GAC/BI,EAAgBA,EAAcG,QAAOC,GAASA,GAASpH,EAAY,WACnE6G,aAAaQ,QAAQrJ,EAAmBiJ,KAAKK,UAAUN,G,CAEzD,GAAID,EAAkB,CACpB,IAAIQ,EAAeN,KAAKC,MAAMH,GAC9B,MAAMS,EAAYxH,EAAYyH,cAAcC,aAAa,YACzD,GAAIF,GAAaD,EAAaI,eAAeH,GAAY,QAChDD,EAAaC,E,CAEtBX,aAAaQ,QAAQtJ,EAAoBkJ,KAAKK,UAAUC,G,CAE1DK,IACA,M,CAIF,MAAM1H,EAAY2H,EAAmB5H,EAAY,SAAU,CAACD,EAAY,WACxED,EAAyBC,EAAaC,EAAaC,GACnD,GAAIA,EAAW,CAEb,MAAM4H,EAAY7H,EAAYyH,aAAa,aAC3C,GAAII,EAAW,OACPC,EAAeD,EAAW7H,EAAaD,E,MAE1C,CACL,MAAMgI,EAAc/H,EAAYyH,aAAa,qBAEvCK,EAAeC,EAAa/H,EAAaD,E,CAIjDiI,EAAyB/H,SACnBgI,EAAmBlI,EAAaC,EACxC,CAGA,MAAM8H,EAAiBpB,MAAOwB,EAAuBC,EAA0B7H,KAC7E,MAAM8H,EAAUC,EAAaH,GAE7B,IAAK,IAAII,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACvC,MAAME,EAASJ,EAAQE,GACvB,MAAMG,EAAgBD,EAAOE,QAAU,OAASP,EAAcK,EAAOE,QAAU,UAAYpI,EAAUuB,SAASC,eAAe0G,EAAOE,OAEpI,GAAID,EAAe,CAEjB,OAAQD,EAAOA,QACb,IAAK,YAAa,CAChB,MAAMG,EAAmBvJ,OAAO2B,iBAAiB0H,GAAe3H,UAChE2H,EAAchG,MAAM3B,UAAY6H,IAAqB,OAAS,GAAGA,KAAoBH,EAAOrB,QAAUqB,EAAOrB,MAC7G,K,CAEF,IAAK,aAAc,CACjB,MAAMnH,EAAcyI,EACpB,MAAM1I,EAAcO,EAEpB,MAAMsB,EAAYC,SAASC,eAAe,kBAC1C,MAAMgC,EAAiBlD,EAAgBgB,GACvC,MAAMuC,EAAgBvC,EAAUiB,wBAChC,MAAM+F,EAAW5I,EAAY6C,wBAE7B,MAAMgG,GAAcD,EAAS5F,KAAOmB,EAAcnB,MAAQc,EAC1D,MAAMgF,GAAaF,EAAS7F,IAAMoB,EAAcpB,KAAOe,EAEvD/D,EAAY0C,MAAMsG,SAAW,QAC7BhJ,EAAY0C,MAAMO,KAAO,GAAG6F,MAC5B9I,EAAY0C,MAAMM,IAAM,GAAG+F,MAC3B/I,EAAY0C,MAAM3B,UAAY,sBAC9B,K,CAEF,IAAK,WAAY,CACf2H,EAAcO,UAAUC,IAAIT,EAAOrB,OACnC,K,CAEF,IAAK,QAAS,CACZ,CACE,IAAI+B,EAAWT,EAAchB,aAAa,SAC1C,GAAIyB,EAAU,CACZA,EAAWC,EAAqBD,GAChC,IAAIE,EAAevH,SAASC,eAAe,SAC3C,IAAKsH,EAAc,CACjB,MAAMC,EAAWxH,SAASyH,cAAc,SACxCD,EAASE,GAAK,QACd1H,SAAS2H,KAAKC,YAAYJ,GAC1BD,EAAeC,C,CAGjBD,EAAaM,QACbN,EAAaO,YAAc,EAC3BP,EAAaQ,IAAMV,EACnBnH,QAAQ8H,IAAI,0CAA2CT,EAAaQ,KAEpE,UACQR,EAAaU,OACnBC,EAAyBtB,GACzB,OAAQW,EAAaY,OAASZ,EAAapH,MAAO,OAC1C,IAAIiI,SAAQC,GAAWC,WAAWD,EAAS,M,CAEnDE,EAAgC3B,E,CAChC,MAAOzG,GACPD,QAAQ8H,IAAI,gDAAiD7H,E,EAGjE,K,EAIJ,IAAK,QAAS,CACZ,MAAMqI,GAAYC,MAAM9F,OAAOgE,EAAOrB,QACtC,GAAIkD,EAAU,OACN,IAAIJ,SAAQC,GAAWC,WAAWD,EAAS1F,OAAOgE,EAAOrB,S,CAEjE,K,CAGF,QAAS,CACPsB,EAAchG,MAAM+F,EAAOA,QAAUA,EAAOrB,MAC5C,K,MAQV,MAAMkB,EAAgBkC,I,MACpB,MAAMnC,EAAU,GAChB,IAAKmC,EAAO,OAAOnC,EACnB,MAAMoC,GAAgBC,EAAAF,EAAMpJ,MAAM,QAAI,MAAAsJ,SAAA,SAAAA,EAAElG,KAAIiE,GAAUA,EAAOkC,SAE7DF,EAAc9E,SAAQiF,IACpB,GAAIA,EAAc,CAChB,MAAOC,EAAazD,GAASwD,EAAaxJ,MAAM,KAAKoD,KAAIsG,GAAQA,EAAKH,SACtE,MAAMI,EAAeF,EAAYG,YAAY,KAC7C,GAAID,KAAkB,EAAG,CACvB,MAAMpC,EAAQkC,EAAYI,UAAU,EAAGF,GAAcJ,OACrD,MAAMlC,EAASoC,EAAYI,UAAUF,EAAe,GAAGJ,OACvDtC,EAAQ6C,KAAK,CAAEvC,QAAOF,SAAQrB,MAAOA,EAAM+D,QAAQ,QAAS,K,MAKlE,OAAO9C,CAAO,EAGhB,MAAMR,EAAqB,CAACuD,EAAiBC,KAC3C,MAAMC,EAAgBF,EAAQhK,MAAM,KAAKoD,KAAI+G,GAASA,EAAMZ,SAE5D,IAAIa,EAAW,EACf,IAAIC,EAAU,IAAIC,IAElB,IAAK,MAAMH,KAASD,EAAe,CACjC,GAAIC,EAAMI,WAAW,MAAQJ,EAAMK,SAAS,KAAM,CAEhD,MAAMC,EAAUN,EACbO,MAAM,GAAI,GACV1K,MAAM,KACNoD,KAAIuH,GAAUA,EAAOpB,SAExB,GAAIa,GAAYH,EAAI7C,OAAQ,OAAO,MAEnC,IAAKqD,EAAQG,SAASX,EAAIG,IAAY,OAAO,MAE7CA,G,MACK,GAAID,EAAMS,SAAS,KAAM,CAE9B,MAAMH,EAAUN,EAAMnK,MAAM,KAAKoD,KAAIuH,GAAUA,EAAOpB,SAEtD,IAAK,MAAMsB,KAAUJ,EAAS,CAC5BJ,EAAQvC,IAAI+C,E,MAET,CAEL,GAAIT,GAAYH,EAAI7C,QAAU6C,EAAIG,KAAcD,EAAO,OAAO,MAE9DC,G,EAKJ,MAAOA,EAAWH,EAAI7C,OAAQ,CAC5B,IAAKiD,EAAQS,IAAIb,EAAIG,IAAY,CAC/B,OAAO,K,CAETC,EAAQU,OAAOd,EAAIG,IACnBA,G,CAGF,OAAOA,IAAaH,EAAI7C,MAAM,EAGhC,MAAM4D,EAAqBhB,IACzB,MAAME,EAAgBF,EAAQhK,MAAM,KAAKoD,KAAI+G,GAASA,EAAMZ,SAE5D,IAAI0B,EAAY,EAEhB,IAAK,MAAMd,KAASD,EAAe,CACjC,GAAIC,EAAMI,WAAW,MAAQJ,EAAMK,SAAS,KAAM,CAChDS,GAAa,C,KACR,CACLA,GAAad,EAAMnK,MAAM,KAAKoH,M,EAIlC,OAAO6D,CAAS,EAGlB1F,eAAeuB,EAAmBlI,EAA2BC,G,MAC3D,MAAM4B,EAAYC,SAASC,eAAe,kBAC1C,IAAKF,EAAW,OAEhB,MAAMyK,EAAqBzK,EAAU6F,aAAa,wBAA0B,OAC5E,GAAI4E,EAAoB,CACtB,MAAMpM,EAAY2H,EAAmB5H,EAAY,SAAU,CAACD,EAAY,WACxE,IAAKE,EAAW,CACdF,EAAY0C,MAAM3B,UAAY,iBAC9B,M,QAIEgH,EAAe,yBAA0B9H,EAAaD,GAE5D,IAAIuM,EAAYtF,KAAKC,OAAMwD,EAAA7D,aAAaC,QAAQ/I,MAAmB,MAAA2M,SAAA,EAAAA,EAAI,MACvE,IAAK6B,EAAUtM,EAAYyH,aAAa,aAAc,CACpD6E,EAAUtM,EAAYyH,aAAa,aAAe,E,CAIpD6E,EAAUtM,EAAYyH,aAAa,aAAe,CAAC1H,EAAY,UAE/D6G,aAAaQ,QAAQtJ,EAAoBkJ,KAAKK,UAAUiF,IACxD,MAAMC,EAAaC,OAAOC,KAAKH,GAAWI,MAAK,CAACC,EAAGC,IAAMC,SAASF,GAAKE,SAASD,KAChF,MAAME,EAAeP,EAAWQ,QAAO,CAACC,EAAKC,IAAQD,EAAIE,OAAOZ,EAAUW,KAAO,IACjFrG,aAAaQ,QAAQrJ,EAAmBiJ,KAAKK,UAAUyF,IAEvDnF,GACF,CAEA,MAAMK,EAA4BmF,IAChC,GAAIA,EAAM,CACR5M,EAAU3B,YAAc,C,KACnB,CACL2B,EAAU1B,YAAc,C,CAE1BkD,QAAQ8H,IAAI,iBAAkBtJ,EAAU3B,YACxCmD,QAAQ8H,IAAI,iBAAkBtJ,EAAU1B,WAAW,EAGrD,MAAMuO,EAAiB,KACrB,MAAMxO,EAAa2B,EAAU3B,WAC7B,MAAMC,EAAa0B,EAAU1B,WAC7B,IAAIC,EAAa+F,KAAKwI,MAAOzO,GAAcA,EAAaC,GAAe,KACvEyO,EAAmBxO,GACnByB,EAAU3B,WAAa,EACvB2B,EAAU1B,WAAa,CAAC,EAG1B,MAAMyO,EAAsB7N,I,UAC1B,MAAM8N,EAAU1L,SAAS2L,cAAc,aACvC,IAAKD,EAAS,OACd,MAAMhO,EAAQiF,QAAOiG,EAAA8C,EAAQ9F,aAAa,YAAQ,MAAAgD,SAAA,EAAAA,EAAI,GACtD,MAAMjL,EAAagF,QAAOiJ,EAAAF,EAAQ9F,aAAa,iBAAa,MAAAgG,SAAA,EAAAA,EAAI,GAEhE,MAAMC,EAAgB1G,KAAKC,OAAM0G,EAAA/G,aAAaC,QAAQ7I,MAAiB,MAAA2P,SAAA,EAAAA,EAAI,MAC3E,MAAMC,EAAmBrO,EAAMsO,WAC/BH,EAAcE,GAAoBnO,EAIlCH,EAAyBC,EAAOC,EAAYC,GAE5CmH,aAAaQ,QAAQpJ,EAAkBgJ,KAAKK,UAAUqG,IACtD,GAAIlO,EAAa,GAAKD,EAAO,CAC3B,MAAMuO,EAAwBtB,OAAOuB,OAAOL,GAC5C,MAAM5O,EAAagP,EAAYf,QAAO,CAACC,EAAKgB,IAAQhB,EAAMgB,GAAK,GAAKF,EAAYvF,OAChFhI,EAAUzB,WAAa+F,KAAKwI,MAAMvO,GAClCiD,QAAQ8H,IAAI,iBAAiBtJ,EAAUzB,YAEvCY,EAAuBZ,GACvB8H,aAAaqH,WAAWjQ,E,GAI5B,MAAM2J,EAAkB,K,MACtB,MAAM/F,EAAYC,SAASC,eAAe,kBAC1C,MAAMoM,EAAkBtM,EAAU,aAClC,MAAMuM,EAAenH,KAAKC,OAAMwD,EAAA7D,aAAaC,QAAQ9I,MAAkB,MAAA0M,SAAA,EAAAA,EAAI,MAE3E,MAAM2D,EAAcvM,SAASC,eAAe,oBAE5C,IAAKqM,GAAgBA,EAAa5F,SAAW4D,EAAkB+B,GAAkB,CAC/EpG,EAAe,uCAAwCsG,GACvD,M,CAGF,MAAMC,EAAYzM,EAAU6F,aAAa,cAAgB,OAEzD,GAAI4G,EAAW,CACbD,EAAYpF,UAAUsF,OAAO,4B,KACxB,CACLC,G,GAIJ,MAAMA,EAA0B7H,U,MAC9B,MAAM9E,EAAYC,SAASC,eAAe,kBAC1C,IAAKF,EAAW,OAChB,MAAMsM,EAAkBtM,EAAU,aAClC,MAAM4M,EAAiBxH,KAAKC,OAAMwD,EAAA7D,aAAaC,QAAQ9I,MAAkB,MAAA0M,SAAA,EAAAA,EAAI,MAC7E,MAAMgE,EAAM7G,EAAmBsG,EAAiBM,GAEhD,GAAIC,EAAK,CACPC,IACA,MAAM7G,EAAYjG,EAAU6F,aAAa,aACzC,GAAII,EAAW,OACPC,EAAeD,EAAWjG,E,CAElC+M,G,KACK,CACL,MAAM5G,EAAcnG,EAAU6F,aAAa,qBACrCK,EAAeC,EAAanG,GAClC,MAAMgN,EAAsBhN,EAAU6F,aAAa,yBAA2B,OAC9E,IAAKmH,EAAqB,CACxBD,G,QAGEvB,GAAgB,EAGxB,MAAMsB,EAA8B,KAClC,MAAMG,EAAYhN,SAAS0D,iBAAiB,iBAC1C,MAAMuJ,EAAYjN,SAAS0D,iBAAiB,iBAC5CuJ,EAAUpJ,SAAQqJ,IAChBF,EAAUnJ,SAAQ3F,IAChB,MAAMiP,EAAOjP,EACb,GAAGiP,EAAK,WAAaD,EAAK,SAAS,CACjCC,EAAKvM,MAAMsG,SAAW,QACtBgG,EAAKtF,YAAYuF,E,IAEnB,GACF,E,MAGOL,EAAuB,KAElC5M,QAAQ8H,IAAI,qCAAsC3K,OAElDS,GAA4B,E,MAGjBsP,EAAuBvI,MAAOpG,EAAsBkD,KAC/D,MAAM5B,EAAYC,SAASC,eAAe,kBAC1C,IAAKF,EAAW,OAChB,MAAMsN,EAAUtN,EAAU6F,aAAa,WACvC,GAAIyH,GAAW,MAAQA,IAAY,QAAS,OAC5C,OAAQ1L,GACN,IAAK,OAAQ,CACXlC,EAA0BhB,GAC1B,K,CAEF,IAAK,QAAS,CACZ6O,EAA6B7O,GAC7B,K,CAEF,IAAK,OAAQ,CACX8O,EAAkB9O,GAClB,K,EAKJ,MAAM+O,EAAU/O,EAAQmH,aAAa,iBAC/BK,EAAeuH,EAAS/O,GAE9BgP,EAA0BhP,EAAQ,EAGpC,SAASgP,EAA0BhP,GACjC,IAAKA,EAAS,OACd,MAAMiP,EAAUjP,EAAQmH,aAAa,WACrC,IAAK8H,EAAS,OACdjP,EAAQkP,QAAU9I,UAChB3E,QAAQ8H,IAAI,mCAAoC0F,GAChD,IAAKA,EAAS,aACRzH,EAAeyH,EAASjP,EAAQ,CAE1C,CAEA,SAAS6O,EAA6B7O,GACpCA,EAAQmC,MAAME,OAAS,UACvB,IAAKrC,EAAS,CACZyB,QAAQC,MAAM,wBACd,M,CAGF,MAAMyN,EAAU/I,UACd,MAAM9E,EAAYC,SAASC,eAAe,kBAC1C,GAAIxB,EAAQmH,aAAa,OAAS,mBAAoB,CACpD8G,IACA,M,CAGF3H,aAAaQ,QAAQrJ,EAAmBiJ,KAAKK,UAAU,CAAC/G,EAAQ,YAChEA,EAAQmC,MAAM0D,OAAS,mBACvB7F,EAAQmC,MAAMiN,UAAY,sCAE1BpP,EAAQmC,MAAMkN,WAAa,wCAC3BrP,EAAQmC,MAAM3B,UAAY,aAE1BR,EAAQmC,MAAM3B,UAAY,WAC1BR,EAAQmC,MAAM0D,OAAS,GACvB7F,EAAQmC,MAAMiN,UAAY,GAE1B,MAAME,EAAYhO,EAAU,aAE5B,MAAM3B,EAAY2H,EAAmBgI,EAAW,CAACtP,EAAQ,WACzDD,EAAmBC,EAASL,GAC5B,GAAIA,EAAW,CACb,MAAM4H,EAAYvH,EAAQmH,aAAa,mBACjCK,EAAeD,EAAWvH,E,KAC3B,CACL,MAAMyH,EAAczH,EAAQmH,aAAa,qBACnCK,EAAeC,EAAazH,E,CAIpC0H,EAAyB/H,GACzB0H,GAAiB,EAEnBrH,EAAQ2C,iBAAiB,QAASwM,EACpC,CAyDA,SAASL,EAAkB9O,GACzBA,EAAQkP,QAAU,KAChB/I,EAAyBnG,EAAS,OAAO,CAE7C,CAEAoG,eAAeD,EAAyBnG,EAAsBkD,GAE5D,MAAMqM,EAAsBhO,SAAS0D,iBAAiB,UAAU/B,OAEhEqM,EAAoBnK,SAAQ7E,IAC1BuB,EAAgBvB,EAAkB,IAIpC,IAAKgB,SAASC,eAAe,2BAA4B,CACvD,MAAMW,EAAQZ,SAASyH,cAAc,SACrC7G,EAAM8G,GAAK,0BACX9G,EAAMqN,UAAY,gcAUlBjO,SAASkO,KAAKtG,YAAYhH,E,CAG5BnC,IAAO,MAAPA,SAAO,SAAPA,EAAS0I,UAAUC,IAAI,aACvB3I,EAAQ0P,YAAc,OAEtB,MAAMC,EAAmCzM,IAAS,OAASlD,EAAUuB,SAAS2L,cAAc,2BAC5F,MAAM0C,EAAmC1M,IAAS,OAASlD,EAAUuB,SAAS2L,cAAc,2BAE5F,GAAIyC,GAAuBC,EAAqB,CAE7CA,EAAoCzN,MAAMkN,WAAa,sBAGvDO,EAAoCzN,MAAM3B,UAAY,GACvD,MAAMc,EAAYC,SAASC,eAAe,kBAE1C,MAAMgC,EAAiBlD,EAAgBgB,GACvCG,QAAQ8H,IAAI,kDAAmD/F,GAG/D,MAAM8E,EAAWqH,EAAoBpN,wBACrC,MAAMsN,EAAWD,EAAoBrN,wBAGrC,MAAMuN,GAAcxH,EAAS5F,KAAOmN,EAASnN,MAAQc,EACrD,MAAMuM,GAAczH,EAAS7F,IAAMoN,EAASpN,KAAOe,EAGnDoM,EAAoBzN,MAAM3B,UAAY,aAAasP,QAAiBC,OAGpE,MAAM/K,EAAczD,SAAS0D,iBAAiB,KAC9CD,EAAYI,SAAQ7E,IAClBuB,EAAgBvB,EAAkB,UAG9B,IAAIoJ,SAAQC,GAAWC,WAAWD,EAAS,aAC3C3D,EAAsB2J,EAAqBD,SAC3C,IAAIhG,SAAQC,GAAWC,WAAWD,EAAS,OACjDgG,EAAoBzN,MAAM3B,UAAY,qB,CAE1C,CAEA,SAASsB,EAAgB9B,GACvBA,EAAQ0I,UAAUsF,OAAO,aACzBhO,EAAQ0P,YAAc,OACxB,CAGA,SAASjG,EAAyBzJ,GAChC,IAAKA,EAAS,OAGdA,EAAQ0I,UAAUC,IAAI,sBAGtB,MAAMqH,EAAU,2BAChB,IAAKzO,SAASC,eAAewO,GAAU,CACrC,MAAM7N,EAAQZ,SAASyH,cAAc,SACrC7G,EAAM8G,GAAK+G,EACX7N,EAAMqN,UAAY,wyBAwBlBjO,SAASkO,KAAKtG,YAAYhH,E,CAE9B,CAGA,SAAS2H,EAAgC9J,GACvC,IAAKA,EAAS,OAGdA,EAAQ0I,UAAUsF,OAAO,sBAGzBhO,EAAQmC,MAAMiN,UAAY,GAC1BpP,EAAQmC,MAAM0D,OAAS,EACzB,C,SAEgBgD,EAAqBoH,GAEnC,GAAIA,EAAI7E,WAAW,QAAS,CAC1B,OAAO6E,C,CAET,MAAM3O,EAAYC,SAASC,eAAe,kBAC1C,IAAKF,EAAW,OAAO2O,EACvB,MAAMC,EAAU5O,EAAU6F,aAAa,WACvC,IAAK+I,EAAS,OAAOD,EACrB,OAAOC,EAAUD,CACnB,Q","ignoreList":[]}